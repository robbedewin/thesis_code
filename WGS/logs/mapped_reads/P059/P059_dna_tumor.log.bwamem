Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000240 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519997, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 1260, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6744)
[0000][PE] mean and std.dev: (1583.83, 1429.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1236, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5075)
[0000][PE] mean and std.dev: (1639.70, 1081.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 418.538 CPU sec, 23.598 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520062, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (519, 1260, 2771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7275)
[0000][PE] mean and std.dev: (1673.77, 1493.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.35, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1297, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (1448.17, 640.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 419.495 CPU sec, 23.563 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520259, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 513, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (957.15, 873.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1432, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (1522.70, 968.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 414.499 CPU sec, 23.268 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519759, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 819, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (935.54, 665.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.24, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1661, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5248)
[0000][PE] mean and std.dev: (1683.23, 876.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 423.026 CPU sec, 23.717 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520337, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 753, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1018.48, 1018.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 1646, 3410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7640)
[0000][PE] mean and std.dev: (2214.05, 1435.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 418.323 CPU sec, 23.494 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520477, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 751, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (911.95, 635.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1699, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1807.76, 791.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 421.484 CPU sec, 23.713 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519895, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (720, 1192, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5223)
[0000][PE] mean and std.dev: (1673.28, 1427.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1027, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (1236.39, 756.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 419.406 CPU sec, 23.511 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520250, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 1216, 2696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7142)
[0000][PE] mean and std.dev: (1592.22, 1298.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1514, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4269)
[0000][PE] mean and std.dev: (1372.56, 712.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 413.779 CPU sec, 23.210 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519672, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 667, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2817)
[0000][PE] mean and std.dev: (745.58, 573.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 2491, 3267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7617)
[0000][PE] mean and std.dev: (2504.21, 1561.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 417.038 CPU sec, 23.429 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520122, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 661, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2565)
[0000][PE] mean and std.dev: (646.24, 451.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (843, 1539, 3415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8559)
[0000][PE] mean and std.dev: (1982.09, 1601.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11131)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1301, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2766)
[0000][PE] mean and std.dev: (1169.00, 448.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 417.381 CPU sec, 23.379 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520401, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 1024, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5489)
[0000][PE] mean and std.dev: (1116.90, 913.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1471, 2808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6262)
[0000][PE] mean and std.dev: (2055.53, 1414.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 415.031 CPU sec, 23.292 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520327, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 1091, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6186)
[0000][PE] mean and std.dev: (1289.96, 1258.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.85, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 1636, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (1556.68, 568.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 420.425 CPU sec, 23.593 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520020, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 951, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (743.28, 488.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.61, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 1786, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5113)
[0000][PE] mean and std.dev: (1869.86, 807.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 420.411 CPU sec, 23.570 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520039, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1033, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (1244.52, 1197.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1426, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1455.23, 821.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 421.483 CPU sec, 23.661 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519915, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 1308, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5588)
[0000][PE] mean and std.dev: (1374.30, 1217.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.47, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1626, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (1449.76, 475.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 415.297 CPU sec, 23.276 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520122, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (575, 743, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2213)
[0000][PE] mean and std.dev: (759.85, 401.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1547, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (1544.18, 640.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 415.747 CPU sec, 23.632 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520134, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 522, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2157)
[0000][PE] mean and std.dev: (708.53, 461.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1270, 3369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8475)
[0000][PE] mean and std.dev: (1987.31, 1663.65)
[0000][PE] low and high boundaries for proper pairs: (1, 11028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 416.536 CPU sec, 23.407 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519651, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (596, 1397, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1323.00, 927.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1797, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5088)
[0000][PE] mean and std.dev: (1881.59, 838.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 419.068 CPU sec, 23.508 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520035, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 834, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5382)
[0000][PE] mean and std.dev: (1296.08, 1195.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.36, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1678, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6084)
[0000][PE] mean and std.dev: (2097.05, 1662.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 409.997 CPU sec, 23.016 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520239, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 1252, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4999)
[0000][PE] mean and std.dev: (1138.05, 839.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1484, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5669)
[0000][PE] mean and std.dev: (1609.33, 918.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 411.681 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519707, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 796, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1170.50, 1049.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1090, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (56, 2426)
[0000][PE] mean and std.dev: (1176.93, 289.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 407.246 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520246, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (701, 1124, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (1081.83, 609.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1452, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (1377.17, 587.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 406.720 CPU sec, 22.739 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519775, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 585, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (916.84, 762.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.53, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1511, 2846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6386)
[0000][PE] mean and std.dev: (1949.00, 1413.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 403.434 CPU sec, 22.636 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519915, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 728, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5421)
[0000][PE] mean and std.dev: (1277.45, 1413.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1566, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5807)
[0000][PE] mean and std.dev: (1777.19, 1135.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 408.658 CPU sec, 22.943 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520005, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 986, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (857.88, 513.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.34, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1311, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5667)
[0000][PE] mean and std.dev: (1748.75, 1292.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 400.941 CPU sec, 22.557 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520227, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 882, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (1081.11, 998.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1461, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (1562.20, 697.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 398.493 CPU sec, 22.326 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520107, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 1203, 2364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6032)
[0000][PE] mean and std.dev: (1518.64, 1377.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1188, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1308.83, 845.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 403.869 CPU sec, 22.632 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520145, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 942, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (909.10, 678.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1775, 3098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6904)
[0000][PE] mean and std.dev: (1993.05, 1205.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 395.189 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519955, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (501, 1048, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4611)
[0000][PE] mean and std.dev: (1250.24, 963.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1449, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7200)
[0000][PE] mean and std.dev: (1896.19, 1424.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 405.552 CPU sec, 22.777 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520564, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 854, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (862.96, 597.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1688, 2824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6668)
[0000][PE] mean and std.dev: (1963.50, 1103.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 399.057 CPU sec, 22.365 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520089, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 1342, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4880)
[0000][PE] mean and std.dev: (1628.89, 1423.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1622, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6237)
[0000][PE] mean and std.dev: (1951.23, 1474.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 402.624 CPU sec, 22.605 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519531, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 398, 726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1584)
[0000][PE] mean and std.dev: (449.83, 278.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.67, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1072, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6077)
[0000][PE] mean and std.dev: (1391.68, 815.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 404.329 CPU sec, 22.712 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519716, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 955, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7304)
[0000][PE] mean and std.dev: (1546.52, 1436.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1520, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (1297.32, 726.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 403.332 CPU sec, 22.627 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520013, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 767, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2919)
[0000][PE] mean and std.dev: (826.17, 642.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1317, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (1229.57, 465.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 402.611 CPU sec, 22.524 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519696, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (517, 1086, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5530)
[0000][PE] mean and std.dev: (1268.23, 1036.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1448, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4483)
[0000][PE] mean and std.dev: (1262.00, 613.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 402.029 CPU sec, 22.536 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520110, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1056, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4998)
[0000][PE] mean and std.dev: (1140.38, 845.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.38, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1345, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1276.00, 761.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 400.098 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519848, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 1000, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (1149.20, 997.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.27, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1322, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (1306.95, 529.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 403.085 CPU sec, 22.563 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520406, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 901, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (970.28, 777.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1449, 1645, 3258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6876)
[0000][PE] mean and std.dev: (2114.19, 1087.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 398.440 CPU sec, 22.267 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520492, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 933, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1109.73, 885.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1120, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (1219.74, 747.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 402.081 CPU sec, 22.536 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519987, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 786, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (910.03, 666.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.85, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1645, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4778)
[0000][PE] mean and std.dev: (1811.37, 823.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 399.398 CPU sec, 22.414 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520346, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 806, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1042.79, 1007.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.37, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1445, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4832)
[0000][PE] mean and std.dev: (1437.73, 830.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 399.228 CPU sec, 22.337 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520021, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1184, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5694)
[0000][PE] mean and std.dev: (1270.00, 1263.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1449, 3374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8462)
[0000][PE] mean and std.dev: (1864.18, 1333.10)
[0000][PE] low and high boundaries for proper pairs: (1, 11006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 398.749 CPU sec, 22.363 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519699, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1245, 2579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6899)
[0000][PE] mean and std.dev: (1240.82, 989.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (512.04, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1587, 2775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6343)
[0000][PE] mean and std.dev: (1714.94, 1172.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 400.229 CPU sec, 22.398 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519985, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 922, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4742)
[0000][PE] mean and std.dev: (1056.08, 881.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1511, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (1356.52, 556.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 404.653 CPU sec, 22.702 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520601, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 766, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4856)
[0000][PE] mean and std.dev: (922.19, 844.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1627, 3426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8316)
[0000][PE] mean and std.dev: (2097.21, 1593.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 400.583 CPU sec, 22.439 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519609, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 765, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (959.17, 809.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.53, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1359, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (1411.38, 697.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 399.639 CPU sec, 22.415 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520209, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 881, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (1161.06, 944.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1320, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (1169.11, 374.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 401.277 CPU sec, 22.497 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520237, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 438, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (765.52, 704.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1573, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4493)
[0000][PE] mean and std.dev: (1632.57, 866.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 396.460 CPU sec, 22.234 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520490, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 670, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (777.97, 575.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (553, 885, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (994.88, 608.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 397.998 CPU sec, 22.238 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520057, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 977, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (1094.78, 796.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1402, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (1502.22, 835.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 400.909 CPU sec, 22.427 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520363, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 821, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (977.70, 710.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1197, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (1470.12, 979.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 400.405 CPU sec, 22.436 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519920, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 903, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (1056.55, 866.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1296, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4983)
[0000][PE] mean and std.dev: (1388.84, 787.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 397.874 CPU sec, 22.322 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520392, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 615, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (905.45, 783.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1318, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3966)
[0000][PE] mean and std.dev: (1250.30, 844.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 395.679 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520259, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 668, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (804.00, 589.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1792, 2884, 3705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7531)
[0000][PE] mean and std.dev: (2478.11, 1773.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9571)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1355, 2762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6406)
[0000][PE] mean and std.dev: (1889.48, 1521.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 393.147 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519818, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 734, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (992.52, 739.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1940, 3082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7514)
[0000][PE] mean and std.dev: (2224.35, 1804.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 397.645 CPU sec, 22.267 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519759, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (751, 1216, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4828)
[0000][PE] mean and std.dev: (1370.15, 943.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1551, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5460)
[0000][PE] mean and std.dev: (1957.09, 1272.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 397.818 CPU sec, 22.620 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520153, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 831, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (892.48, 558.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1453, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1573.76, 977.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 404.417 CPU sec, 22.648 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520136, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (584, 1339, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5531)
[0000][PE] mean and std.dev: (1345.13, 885.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1810, 2785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5871)
[0000][PE] mean and std.dev: (2048.14, 1140.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 395.931 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519633, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1407, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5953)
[0000][PE] mean and std.dev: (1299.05, 1094.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.56, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1196, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (190, 2265)
[0000][PE] mean and std.dev: (1118.13, 288.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 397.562 CPU sec, 22.281 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520298, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 817, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1039.67, 815.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.88, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1446, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5371)
[0000][PE] mean and std.dev: (1718.47, 1026.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 397.474 CPU sec, 22.274 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519882, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 860, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6242)
[0000][PE] mean and std.dev: (1396.23, 1488.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.32, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1350, 2967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7369)
[0000][PE] mean and std.dev: (1587.29, 1198.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 404.026 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519851, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 945, 2850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7844)
[0000][PE] mean and std.dev: (1491.85, 1587.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1319, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (1229.25, 650.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 402.560 CPU sec, 22.632 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520283, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 877, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (909.71, 778.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (584, 1189, 3307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8753)
[0000][PE] mean and std.dev: (2111.68, 2065.13)
[0000][PE] low and high boundaries for proper pairs: (1, 11476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 394.359 CPU sec, 22.136 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519682, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (615, 1422, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6498)
[0000][PE] mean and std.dev: (1463.26, 1079.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1472, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5324)
[0000][PE] mean and std.dev: (1649.43, 1098.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 396.136 CPU sec, 22.236 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520077, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 922, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (834.68, 570.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1182, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (1030.94, 414.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 398.272 CPU sec, 22.280 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519906, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (684, 933, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (1096.54, 732.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1652, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5521)
[0000][PE] mean and std.dev: (1547.38, 849.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 397.982 CPU sec, 22.303 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520001, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 821, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (1028.34, 905.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1591, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5719)
[0000][PE] mean and std.dev: (1670.11, 931.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 399.312 CPU sec, 22.367 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520206, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 876, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (992.86, 805.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.58, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1375, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1565.57, 884.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 402.858 CPU sec, 22.533 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520339, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 1006, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (959.00, 787.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1398, 1914, 2869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5811)
[0000][PE] mean and std.dev: (2007.70, 1022.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 399.146 CPU sec, 22.367 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520227, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 955, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (888.80, 555.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.44, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1385, 3978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10086)
[0000][PE] mean and std.dev: (2521.38, 2567.71)
[0000][PE] low and high boundaries for proper pairs: (1, 13140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 395.978 CPU sec, 22.212 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519987, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 691, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (772.40, 577.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1549, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1530.30, 973.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 395.960 CPU sec, 22.221 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520175, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 826, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (998.97, 703.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1281, 1604, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (1938.89, 844.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 396.753 CPU sec, 22.233 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519993, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 935, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (1015.04, 875.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1463, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4131)
[0000][PE] mean and std.dev: (1677.07, 858.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 398.659 CPU sec, 22.332 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519820, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (700, 1230, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1488.95, 1162.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1522, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1655.56, 822.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 404.327 CPU sec, 22.619 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519950, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (765, 1077, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (1041.89, 497.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.27, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1436, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (1277.30, 764.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 395.769 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520441, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1239, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (1061.00, 593.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1372, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6052)
[0000][PE] mean and std.dev: (1484.48, 870.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 395.340 CPU sec, 22.230 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519639, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 1054, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (1052.75, 821.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1407, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5372)
[0000][PE] mean and std.dev: (1917.08, 1310.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 397.081 CPU sec, 22.248 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519908, 14, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 1003, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1130.22, 925.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (225, 934, 3117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8901)
[0000][PE] mean and std.dev: (1489.62, 1527.62)
[0000][PE] low and high boundaries for proper pairs: (1, 11793)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1273, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5611)
[0000][PE] mean and std.dev: (1359.60, 867.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 399.125 CPU sec, 22.359 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520273, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (512, 723, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5834)
[0000][PE] mean and std.dev: (1047.83, 954.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.88, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1131, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2756)
[0000][PE] mean and std.dev: (1282.69, 568.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 398.435 CPU sec, 22.320 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520261, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 625, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (1059.05, 974.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1418, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (1421.88, 781.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 391.241 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520187, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 1466, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5329)
[0000][PE] mean and std.dev: (1351.55, 1306.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1402, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (1500.04, 767.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 392.656 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519738, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 859, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6137)
[0000][PE] mean and std.dev: (1289.46, 1219.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1269, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1538.43, 856.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 394.663 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520288, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1024, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6598)
[0000][PE] mean and std.dev: (1654.04, 1555.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1692, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4858)
[0000][PE] mean and std.dev: (1884.68, 916.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 393.447 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519712, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 995, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (799.65, 463.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1589, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (1709.48, 988.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 399.123 CPU sec, 22.400 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519491, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 1120, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (1150.68, 710.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1232, 2831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6865)
[0000][PE] mean and std.dev: (1796.85, 1577.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 390.895 CPU sec, 21.937 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519933, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 685, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1009.00, 826.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1248, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (1258.69, 726.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 394.054 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519875, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 976, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (920.89, 553.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.87, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1588, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5763)
[0000][PE] mean and std.dev: (1874.33, 1283.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 394.188 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520332, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 875, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5804)
[0000][PE] mean and std.dev: (1270.29, 1044.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1373, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4754)
[0000][PE] mean and std.dev: (1709.14, 1206.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 391.471 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520122, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (540, 935, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (923.53, 558.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.94, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 1204, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (1162.07, 791.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 392.494 CPU sec, 22.024 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520168, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 931, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (1068.72, 874.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1282, 1494, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (1528.78, 667.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 392.889 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520369, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (583, 1023, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (1039.06, 703.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.97, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1677, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4456)
[0000][PE] mean and std.dev: (1580.95, 972.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 391.312 CPU sec, 21.942 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520265, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 853, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (807.12, 562.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1485, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3578)
[0000][PE] mean and std.dev: (1479.17, 714.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 395.228 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520115, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 887, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5314)
[0000][PE] mean and std.dev: (1339.27, 1202.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1732, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1620.00, 1295.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 394.469 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520430, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (533, 744, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3836)
[0000][PE] mean and std.dev: (1153.32, 946.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (381, 708, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (914.73, 672.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 389.150 CPU sec, 21.813 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520102, 6, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 852, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5975)
[0000][PE] mean and std.dev: (1419.03, 1428.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1457, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (1308.23, 699.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 393.810 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520262, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 1023, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5104)
[0000][PE] mean and std.dev: (1269.23, 989.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1243, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4676)
[0000][PE] mean and std.dev: (1255.17, 748.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 392.892 CPU sec, 21.994 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519820, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 806, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (861.26, 507.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 2225, 2946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6866)
[0000][PE] mean and std.dev: (2256.75, 1514.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 396.080 CPU sec, 22.240 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519738, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (580, 1227, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5374)
[0000][PE] mean and std.dev: (1424.93, 1148.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (656, 923, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (965.65, 518.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 392.805 CPU sec, 22.012 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520012, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 904, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (1178.31, 1074.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.03, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1824, 2771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6007)
[0000][PE] mean and std.dev: (1956.41, 1202.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 393.574 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520066, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 744, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1113.90, 1028.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.85, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1346, 1529, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (1674.62, 700.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 394.006 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520030, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 1051, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (1098.36, 767.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.87, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1402, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5809)
[0000][PE] mean and std.dev: (1592.06, 1011.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 391.903 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519833, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 908, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (1101.93, 927.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1447, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1701.77, 996.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 394.634 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519813, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 956, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7057)
[0000][PE] mean and std.dev: (1681.04, 1723.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1248, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (1256.38, 531.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 395.621 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520463, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 572, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6089)
[0000][PE] mean and std.dev: (1141.82, 1214.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1711, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5141)
[0000][PE] mean and std.dev: (1910.67, 878.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 391.198 CPU sec, 21.920 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519446, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 569, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (838.41, 809.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1450, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (1608.44, 873.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 396.780 CPU sec, 22.357 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 519876, 3, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1445, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5950)
[0000][PE] mean and std.dev: (1809.39, 1298.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7648)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 393.538 CPU sec, 22.082 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520215, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (438, 960, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5565)
[0000][PE] mean and std.dev: (951.30, 785.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1282, 1741, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (1593.38, 491.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 394.766 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519913, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 844, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (1019.35, 716.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.89, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1340, 3172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8050)
[0000][PE] mean and std.dev: (1744.00, 1710.93)
[0000][PE] low and high boundaries for proper pairs: (1, 10489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 393.122 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520020, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 826, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5472)
[0000][PE] mean and std.dev: (1245.32, 1075.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 867, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5945)
[0000][PE] mean and std.dev: (1527.59, 1534.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 396.193 CPU sec, 22.280 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520072, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 847, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6816)
[0000][PE] mean and std.dev: (1608.26, 1772.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1927, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5014)
[0000][PE] mean and std.dev: (2040.88, 1335.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 391.532 CPU sec, 21.965 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519738, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 627, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (894.04, 829.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.06, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1864, 2606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5870)
[0000][PE] mean and std.dev: (1721.25, 1044.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 392.102 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519778, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 553, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (786.24, 718.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1577, 3351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7931)
[0000][PE] mean and std.dev: (2177.83, 1821.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 395.166 CPU sec, 22.207 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520066, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 594, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (774.57, 571.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1029, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (1302.16, 786.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 390.354 CPU sec, 21.930 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519757, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 530, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (657.12, 444.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1342, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (1326.65, 544.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 392.822 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520530, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 465, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (976.55, 1069.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1309, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (1454.45, 806.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 395.109 CPU sec, 22.218 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520165, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 779, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5448)
[0000][PE] mean and std.dev: (966.20, 736.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1780, 3266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7436)
[0000][PE] mean and std.dev: (2061.57, 1373.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 392.656 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520292, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 829, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4243)
[0000][PE] mean and std.dev: (1080.37, 827.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1757, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4551)
[0000][PE] mean and std.dev: (1735.08, 1066.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 392.231 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519971, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (548, 1038, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5384)
[0000][PE] mean and std.dev: (1180.04, 864.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1294, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6667)
[0000][PE] mean and std.dev: (1557.41, 970.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 397.285 CPU sec, 22.400 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519801, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 598, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5386)
[0000][PE] mean and std.dev: (1170.29, 1198.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1078, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (1390.33, 659.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 394.828 CPU sec, 22.163 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520225, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1073, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5533)
[0000][PE] mean and std.dev: (1315.48, 1277.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1368, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5164)
[0000][PE] mean and std.dev: (1641.17, 1094.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 398.319 CPU sec, 22.370 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519858, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 1537, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5519)
[0000][PE] mean and std.dev: (1420.93, 1028.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1241, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (1217.86, 551.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 396.633 CPU sec, 22.250 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519029, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 871, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (1011.42, 902.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1132, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (1084.17, 364.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 400.657 CPU sec, 22.468 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520200, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 602, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3337)
[0000][PE] mean and std.dev: (772.89, 638.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1105, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (1209.09, 743.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 395.011 CPU sec, 22.121 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520269, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 989, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (1124.74, 970.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1411, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (1583.62, 889.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 394.400 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520297, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 1096, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (1223.20, 913.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.48, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1252, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (76, 2586)
[0000][PE] mean and std.dev: (1265.62, 438.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 393.714 CPU sec, 22.082 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519897, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (518, 1432, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1193.67, 764.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1595, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5226)
[0000][PE] mean and std.dev: (1720.82, 1069.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 391.864 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519848, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 875, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1074.39, 855.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1250, 3370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8506)
[0000][PE] mean and std.dev: (1993.71, 1684.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 393.416 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519915, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 467, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (915.33, 930.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1445, 2907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6515)
[0000][PE] mean and std.dev: (1711.81, 989.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 396.246 CPU sec, 22.236 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519698, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 1090, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (752.96, 523.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1809, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5660)
[0000][PE] mean and std.dev: (1797.52, 806.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 391.932 CPU sec, 21.994 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520172, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (553, 1034, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4714)
[0000][PE] mean and std.dev: (1178.90, 773.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.37, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1235, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (1390.80, 763.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 392.119 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520207, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 1118, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (1080.74, 779.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1216, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4920)
[0000][PE] mean and std.dev: (1500.91, 1008.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 393.690 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519540, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (827, 1196, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (1267.57, 684.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1461, 5259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13751)
[0000][PE] mean and std.dev: (2525.44, 2450.36)
[0000][PE] low and high boundaries for proper pairs: (1, 17997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 393.521 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519810, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 1174, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (1115.08, 938.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.57, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1322, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (1431.96, 796.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 394.255 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520236, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 360, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6293)
[0000][PE] mean and std.dev: (1322.45, 1759.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.53, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (575, 1253, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (1230.78, 880.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 392.081 CPU sec, 21.957 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519747, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1075, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (1104.78, 829.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1169, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (1320.71, 581.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 397.794 CPU sec, 22.311 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519866, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 901, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5548)
[0000][PE] mean and std.dev: (1290.48, 1144.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.80, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1669, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (1566.32, 737.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 392.441 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520131, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (642, 1163, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5229)
[0000][PE] mean and std.dev: (1289.56, 976.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1499, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5360)
[0000][PE] mean and std.dev: (1546.75, 778.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 394.808 CPU sec, 22.165 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519511, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 628, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (845.31, 766.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1264, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1566.83, 1165.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 396.169 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520172, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 915, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1193.92, 1075.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.03, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1939, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (1716.22, 762.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 393.546 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520130, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 704, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3252)
[0000][PE] mean and std.dev: (762.27, 627.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1429, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (1412.95, 681.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 392.995 CPU sec, 22.031 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519596, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (441, 1167, 2835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7623)
[0000][PE] mean and std.dev: (1790.23, 1866.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 872, 3144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8848)
[0000][PE] mean and std.dev: (1742.41, 1945.67)
[0000][PE] low and high boundaries for proper pairs: (1, 11700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 394.597 CPU sec, 22.226 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519605, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 802, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (986.12, 775.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.29, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 1715, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (1516.92, 940.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 391.270 CPU sec, 21.926 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520157, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 1271, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4131)
[0000][PE] mean and std.dev: (974.94, 641.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1351, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (1518.62, 829.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 394.041 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519745, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (476, 1094, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4916)
[0000][PE] mean and std.dev: (1296.00, 1123.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.85, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1290, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4821)
[0000][PE] mean and std.dev: (1305.67, 602.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 394.408 CPU sec, 22.130 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519797, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 831, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (907.25, 600.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1415, 3295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7907)
[0000][PE] mean and std.dev: (1883.00, 1561.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 394.238 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520330, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 888, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7180)
[0000][PE] mean and std.dev: (1352.75, 1390.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.81, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1553, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (1766.26, 1014.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 391.241 CPU sec, 21.928 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520269, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 638, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5540)
[0000][PE] mean and std.dev: (1252.32, 1160.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1278, 3344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8208)
[0000][PE] mean and std.dev: (2084.81, 1729.57)
[0000][PE] low and high boundaries for proper pairs: (1, 10640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 390.141 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205352
	[0000][ M::kt_pipeline] read 1205352 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520267, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (536, 1204, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5312)
[0000][PE] mean and std.dev: (1185.94, 795.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1808, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (1751.68, 670.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 400.519 CPU sec, 22.536 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519988, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 554, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2538)
[0000][PE] mean and std.dev: (665.00, 379.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1182, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5748)
[0000][PE] mean and std.dev: (1700.00, 1250.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205352 reads in 402.280 CPU sec, 22.591 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520010, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (582, 1392, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (1257.18, 814.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (434, 1431, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (1309.65, 915.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 399.831 CPU sec, 22.455 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520328, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 1326, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5347)
[0000][PE] mean and std.dev: (1436.88, 1119.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (54, 1464, 3222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9558)
[0000][PE] mean and std.dev: (1443.70, 1453.82)
[0000][PE] low and high boundaries for proper pairs: (1, 12726)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1246, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (1437.33, 771.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 404.747 CPU sec, 22.720 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520152, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 1201, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (1245.84, 1058.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (285, 843, 2809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7857)
[0000][PE] mean and std.dev: (1425.00, 1270.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10381)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1426, 2678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5938)
[0000][PE] mean and std.dev: (1801.44, 1189.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 400.787 CPU sec, 22.474 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519932, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 737, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5629)
[0000][PE] mean and std.dev: (1345.62, 1329.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1184, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (1304.35, 737.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 402.784 CPU sec, 22.540 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519896, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (552, 1538, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6303)
[0000][PE] mean and std.dev: (1518.37, 1227.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1757, 3926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9964)
[0000][PE] mean and std.dev: (2375.76, 2031.26)
[0000][PE] low and high boundaries for proper pairs: (1, 12983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 406.512 CPU sec, 22.795 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519370, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 707, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1043.13, 916.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 1931, 2943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7547)
[0000][PE] mean and std.dev: (1791.08, 1112.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 405.576 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519656, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 875, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5395)
[0000][PE] mean and std.dev: (1172.97, 1169.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1836, 3107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7215)
[0000][PE] mean and std.dev: (1812.06, 1374.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 403.272 CPU sec, 22.588 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 519732, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 1359, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5420)
[0000][PE] mean and std.dev: (1410.34, 1023.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1765, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5409)
[0000][PE] mean and std.dev: (1689.32, 976.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 406.790 CPU sec, 22.799 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520017, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 680, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (976.38, 796.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.49, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1455, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (1483.40, 659.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 403.431 CPU sec, 22.554 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520276, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 600, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (849.10, 737.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.91, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1320, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (1357.24, 416.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 406.175 CPU sec, 22.839 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520106, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (537, 1074, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (1120.05, 896.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.97, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1322, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1392.43, 960.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 404.395 CPU sec, 22.633 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520180, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 978, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (1050.60, 863.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.32, 120.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1685, 2998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6986)
[0000][PE] mean and std.dev: (1779.56, 1041.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 406.495 CPU sec, 22.762 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519924, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 1673, 3060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8516)
[0000][PE] mean and std.dev: (1893.57, 1539.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1278, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (1387.06, 578.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 401.818 CPU sec, 22.524 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519842, 12, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 881, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1023.15, 831.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (132, 1151, 4006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11754)
[0000][PE] mean and std.dev: (1920.42, 2130.98)
[0000][PE] low and high boundaries for proper pairs: (1, 15628)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1433, 3954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9728)
[0000][PE] mean and std.dev: (2511.30, 2225.42)
[0000][PE] low and high boundaries for proper pairs: (1, 12615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 405.897 CPU sec, 22.762 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520076, 6, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 565, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5636)
[0000][PE] mean and std.dev: (1175.10, 1148.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.29, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1188, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (1145.44, 571.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 400.822 CPU sec, 22.432 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519828, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 603, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (670.53, 463.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.38, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1289, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5096)
[0000][PE] mean and std.dev: (1302.40, 857.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 405.527 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520062, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 516, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (859.00, 794.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1394, 2657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6363)
[0000][PE] mean and std.dev: (1780.67, 1208.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 406.333 CPU sec, 22.760 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520123, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 1373, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6505)
[0000][PE] mean and std.dev: (1572.67, 1293.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.49, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1367, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4683)
[0000][PE] mean and std.dev: (1508.05, 908.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 403.764 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520251, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (651, 950, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (1062.75, 757.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1420, 2890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6848)
[0000][PE] mean and std.dev: (1791.08, 1323.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 404.470 CPU sec, 22.621 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520176, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 845, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (945.76, 816.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1791, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4434)
[0000][PE] mean and std.dev: (1620.10, 655.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 407.086 CPU sec, 22.836 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520001, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (627, 1176, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5136)
[0000][PE] mean and std.dev: (1156.42, 841.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1312, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4672)
[0000][PE] mean and std.dev: (1389.10, 1005.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 405.330 CPU sec, 22.694 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519774, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1185, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (1399.27, 1103.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.25, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1483, 2431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5327)
[0000][PE] mean and std.dev: (1618.96, 870.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 406.638 CPU sec, 22.771 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520132, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1325, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (1243.97, 958.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1081, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (1348.58, 868.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 405.013 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205338
	[0000][ M::kt_pipeline] read 1205338 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519836, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 705, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (907.17, 808.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.48, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1210, 1605, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5491)
[0000][PE] mean and std.dev: (1651.41, 756.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 406.767 CPU sec, 22.833 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520228, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 738, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3993)
[0000][PE] mean and std.dev: (963.81, 869.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1756, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (1467.92, 653.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205338 reads in 411.014 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520461, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 820, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (1014.19, 821.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.87, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1466, 1918, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6008)
[0000][PE] mean and std.dev: (1850.30, 1050.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 408.135 CPU sec, 22.862 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520061, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 579, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (827.26, 572.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1547, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1502.11, 813.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 410.070 CPU sec, 22.966 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520247, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (638, 889, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1423.89, 1408.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.27, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1995, 2847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6705)
[0000][PE] mean and std.dev: (1887.29, 967.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 404.748 CPU sec, 22.676 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520111, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (650, 1119, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (1263.46, 877.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1350, 1468, 4583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11049)
[0000][PE] mean and std.dev: (2600.35, 1893.42)
[0000][PE] low and high boundaries for proper pairs: (1, 14282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 402.677 CPU sec, 22.525 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520170, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 624, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6620)
[0000][PE] mean and std.dev: (1154.62, 1115.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1548, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4642)
[0000][PE] mean and std.dev: (1482.19, 1000.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 404.636 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205378
	[0000][ M::kt_pipeline] read 1205378 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520299, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 483, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (808.36, 750.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.46, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 1386, 2623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6721)
[0000][PE] mean and std.dev: (1799.39, 1467.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 405.254 CPU sec, 22.729 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520042, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (828, 1311, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (1156.50, 579.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1465, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5662)
[0000][PE] mean and std.dev: (1786.48, 1037.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205378 reads in 405.721 CPU sec, 22.718 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 519885, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 1057, 2718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7172)
[0000][PE] mean and std.dev: (1454.54, 1046.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1261, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (1234.25, 604.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 408.030 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519756, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 702, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1003.25, 1031.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.34, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1497, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (1524.80, 617.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 405.565 CPU sec, 22.732 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520055, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 934, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6126)
[0000][PE] mean and std.dev: (1420.38, 1383.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 1046, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (886.25, 419.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 406.568 CPU sec, 22.763 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520247, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 1025, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (1172.77, 1024.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1130, 2992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7650)
[0000][PE] mean and std.dev: (1600.10, 1213.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 406.727 CPU sec, 22.784 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205372
	[0000][ M::kt_pipeline] read 1205372 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520088, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 507, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (714.89, 574.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.85, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (606, 1081, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (1191.50, 698.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 407.753 CPU sec, 22.888 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520047, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 959, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5594)
[0000][PE] mean and std.dev: (1394.27, 1214.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1336, 1441, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (234, 2989)
[0000][PE] mean and std.dev: (1304.85, 482.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205372 reads in 405.116 CPU sec, 22.719 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519978, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 816, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (947.29, 926.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1580, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5291)
[0000][PE] mean and std.dev: (1792.04, 1007.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 404.187 CPU sec, 22.618 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520312, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 822, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6005)
[0000][PE] mean and std.dev: (1326.05, 1287.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1320, 1845, 3035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6465)
[0000][PE] mean and std.dev: (2083.71, 1258.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 401.789 CPU sec, 22.525 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520291, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 872, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (840.74, 637.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.21, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1533, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5286)
[0000][PE] mean and std.dev: (1518.29, 722.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 403.949 CPU sec, 22.604 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519617, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 768, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6480)
[0000][PE] mean and std.dev: (1283.00, 1429.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 1642, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (1618.20, 958.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 405.633 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520567, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 869, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5926)
[0000][PE] mean and std.dev: (1061.47, 924.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1563, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (1618.22, 773.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 404.704 CPU sec, 22.644 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519611, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 910, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (968.33, 674.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1256, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (1138.14, 430.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 407.506 CPU sec, 22.829 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520131, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (672, 1807, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6600)
[0000][PE] mean and std.dev: (1606.14, 1135.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1098, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (1131.10, 595.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 406.923 CPU sec, 22.772 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520002, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 961, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (952.75, 758.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1328, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (1548.55, 902.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 403.043 CPU sec, 22.594 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519716, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (606, 950, 3308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8712)
[0000][PE] mean and std.dev: (1837.04, 2024.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.99, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1489, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6998)
[0000][PE] mean and std.dev: (1745.31, 1035.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 412.657 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520092, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 423, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (622.18, 558.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1239, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1469.88, 935.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 406.362 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519858, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 911, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (942.32, 820.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1192, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (1228.33, 470.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 412.113 CPU sec, 23.103 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520571, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 1187, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (1095.83, 776.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (767, 1540, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7208)
[0000][PE] mean and std.dev: (2060.60, 1642.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9355)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1230, 1496, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (242, 2712)
[0000][PE] mean and std.dev: (1279.50, 450.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 406.639 CPU sec, 22.802 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520437, 12, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 633, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (840.83, 725.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (384, 686, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (865.50, 676.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5080)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1367, 1899, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5882)
[0000][PE] mean and std.dev: (2163.18, 1205.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 409.696 CPU sec, 22.978 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520020, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1179, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6027)
[0000][PE] mean and std.dev: (1280.50, 1192.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1502, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1639.90, 921.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 409.547 CPU sec, 22.897 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520625, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (596, 1316, 2699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6905)
[0000][PE] mean and std.dev: (1751.04, 1640.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1519, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (1503.31, 661.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 409.385 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520127, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 1005, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5626)
[0000][PE] mean and std.dev: (1183.85, 955.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1672, 3084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7400)
[0000][PE] mean and std.dev: (2117.90, 1750.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 413.038 CPU sec, 23.135 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520039, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (770, 1184, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (1327.52, 871.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1263, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (1337.85, 872.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 408.156 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520282, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1032, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6248)
[0000][PE] mean and std.dev: (1370.68, 1208.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1676, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5327)
[0000][PE] mean and std.dev: (1701.95, 1138.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 412.642 CPU sec, 23.176 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519981, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (727, 946, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2944)
[0000][PE] mean and std.dev: (1063.74, 610.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1344, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (1400.06, 901.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 412.277 CPU sec, 23.123 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519896, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 852, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (882.23, 614.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1217, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1293.79, 723.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 411.710 CPU sec, 23.079 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519760, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 1370, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6788)
[0000][PE] mean and std.dev: (1497.60, 1351.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1641, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7005)
[0000][PE] mean and std.dev: (1863.50, 1241.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 412.362 CPU sec, 23.126 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519919, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 804, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2452)
[0000][PE] mean and std.dev: (721.07, 329.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1572, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5958)
[0000][PE] mean and std.dev: (1595.55, 1157.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 412.099 CPU sec, 23.065 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 520126, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 741, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (803.03, 602.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.44, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1411, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (1441.69, 833.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 411.368 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519805, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 826, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (835.25, 736.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1362, 2864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6816)
[0000][PE] mean and std.dev: (1615.26, 901.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 412.738 CPU sec, 23.171 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519623, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 764, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (943.00, 795.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1579, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (1629.33, 830.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 417.028 CPU sec, 23.352 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520114, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1014, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4218)
[0000][PE] mean and std.dev: (1257.12, 1016.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 2160, 3107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7377)
[0000][PE] mean and std.dev: (2234.50, 1800.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 408.993 CPU sec, 22.918 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520269, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 610, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2908)
[0000][PE] mean and std.dev: (808.21, 682.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.50, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1593, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5896)
[0000][PE] mean and std.dev: (1606.95, 908.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 411.359 CPU sec, 23.041 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520370, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (691, 1087, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (1049.36, 624.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1285, 1499, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (1580.22, 730.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 409.910 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519917, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 944, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (851.24, 519.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1517, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1968.33, 1356.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 413.103 CPU sec, 23.152 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520079, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (495, 1355, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7149)
[0000][PE] mean and std.dev: (1809.00, 1505.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 2191, 2939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6557)
[0000][PE] mean and std.dev: (1905.85, 951.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 412.458 CPU sec, 23.218 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520026, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (559, 1129, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (1106.91, 781.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1615, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7214)
[0000][PE] mean and std.dev: (1927.71, 1505.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 413.180 CPU sec, 23.160 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520297, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 876, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4159)
[0000][PE] mean and std.dev: (947.70, 728.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1213, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (1161.71, 673.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 415.376 CPU sec, 23.282 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519741, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 338, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (721.67, 883.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1275, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6202)
[0000][PE] mean and std.dev: (1518.31, 1408.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 412.507 CPU sec, 23.103 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519935, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 944, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6156)
[0000][PE] mean and std.dev: (1159.55, 1003.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (654, 1145, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (1109.33, 723.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 415.140 CPU sec, 23.250 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519903, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 933, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (850.00, 510.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1218, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (1155.17, 556.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 413.007 CPU sec, 23.189 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520048, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 1256, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8544)
[0000][PE] mean and std.dev: (1441.30, 1395.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1371, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1477.69, 989.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 408.666 CPU sec, 22.890 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520050, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1115, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5826)
[0000][PE] mean and std.dev: (1414.96, 1283.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1200, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (1130.63, 423.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 413.809 CPU sec, 23.189 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520392, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 779, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3024)
[0000][PE] mean and std.dev: (764.85, 565.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1149, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (1184.71, 608.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 410.784 CPU sec, 23.007 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519945, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 932, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1031.87, 728.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1399, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4656)
[0000][PE] mean and std.dev: (1695.45, 1082.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6024)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 410.204 CPU sec, 23.003 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520236, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 744, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (968.62, 896.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1999, 2974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6848)
[0000][PE] mean and std.dev: (1976.24, 1333.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 409.336 CPU sec, 22.896 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520157, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 867, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4959)
[0000][PE] mean and std.dev: (1193.88, 1155.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.35, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1309, 1791, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1666.43, 588.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 413.917 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519695, 11, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 803, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (1068.11, 964.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (736, 1724, 4601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12331)
[0000][PE] mean and std.dev: (2659.00, 2444.61)
[0000][PE] low and high boundaries for proper pairs: (1, 16196)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1307, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (1351.42, 816.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 412.061 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520196, 3, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 793, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1200.95, 1300.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1383, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4167)
[0000][PE] mean and std.dev: (1477.84, 776.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 411.099 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520289, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 570, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (799.59, 644.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1302, 1648, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (1746.68, 740.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 408.613 CPU sec, 22.874 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519616, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (570, 1231, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5751)
[0000][PE] mean and std.dev: (1518.32, 1291.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1249, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (1442.38, 698.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 410.577 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519944, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1021, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (1307.95, 1128.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.07, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1573, 3133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7349)
[0000][PE] mean and std.dev: (2150.58, 1729.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 411.335 CPU sec, 22.992 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519935, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (563, 1008, 4546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12512)
[0000][PE] mean and std.dev: (2170.62, 2213.19)
[0000][PE] low and high boundaries for proper pairs: (1, 16495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1300, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (1410.39, 870.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 411.164 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520443, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 949, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6335)
[0000][PE] mean and std.dev: (1391.75, 1459.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.15, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1501, 2895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6737)
[0000][PE] mean and std.dev: (1852.38, 1485.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 410.560 CPU sec, 22.965 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519980, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 961, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (882.82, 615.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1470, 2859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6473)
[0000][PE] mean and std.dev: (1850.24, 1397.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 411.758 CPU sec, 23.046 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520116, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (804, 1232, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (1314.17, 815.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 996, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2426)
[0000][PE] mean and std.dev: (989.67, 470.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 413.266 CPU sec, 23.187 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520712, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1101, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6234)
[0000][PE] mean and std.dev: (1439.68, 1401.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1280, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4916)
[0000][PE] mean and std.dev: (1406.44, 769.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 408.893 CPU sec, 22.888 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520213, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 954, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (1128.30, 832.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1611, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (1534.95, 615.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 410.423 CPU sec, 23.000 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520004, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 472, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6399)
[0000][PE] mean and std.dev: (1170.09, 1381.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1364, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5779)
[0000][PE] mean and std.dev: (1796.65, 1293.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 411.868 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519888, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 848, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5378)
[0000][PE] mean and std.dev: (1060.57, 1036.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (643, 2582, 3204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8326)
[0000][PE] mean and std.dev: (2025.30, 1344.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10887)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1184, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4307)
[0000][PE] mean and std.dev: (1337.82, 845.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 414.285 CPU sec, 23.174 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520196, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 1101, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (1108.88, 818.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.77, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1918, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6018)
[0000][PE] mean and std.dev: (1628.06, 923.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 409.921 CPU sec, 22.962 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520289, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 953, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6434)
[0000][PE] mean and std.dev: (1520.78, 1697.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1399, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4665)
[0000][PE] mean and std.dev: (1519.52, 987.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 410.708 CPU sec, 22.969 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519720, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 782, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5488)
[0000][PE] mean and std.dev: (959.86, 1077.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.26, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1232, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4972)
[0000][PE] mean and std.dev: (1519.94, 826.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 411.181 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519948, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 895, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1220.52, 1127.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1640, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5592)
[0000][PE] mean and std.dev: (1706.89, 1026.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 411.119 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520218, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1006, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (992.68, 761.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1438, 4693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12385)
[0000][PE] mean and std.dev: (2581.12, 2496.18)
[0000][PE] low and high boundaries for proper pairs: (1, 16231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 416.294 CPU sec, 23.283 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519955, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 920, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4677)
[0000][PE] mean and std.dev: (1026.48, 937.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1318, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (1181.53, 631.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 415.487 CPU sec, 23.272 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520172, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 868, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4334)
[0000][PE] mean and std.dev: (1031.59, 852.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1439, 3541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8449)
[0000][PE] mean and std.dev: (2113.16, 1691.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 412.000 CPU sec, 23.054 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520256, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (634, 1000, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (1024.95, 673.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1437, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5639)
[0000][PE] mean and std.dev: (1745.92, 1296.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 410.619 CPU sec, 23.059 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520215, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 919, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (911.17, 870.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.50, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1345, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (1534.50, 902.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 410.634 CPU sec, 22.967 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520157, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (612, 772, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2265)
[0000][PE] mean and std.dev: (795.82, 373.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1566, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1561.24, 892.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 415.852 CPU sec, 23.313 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519942, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 726, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4682)
[0000][PE] mean and std.dev: (1039.00, 870.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (636, 2960, 5707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15849)
[0000][PE] mean and std.dev: (3293.50, 2660.93)
[0000][PE] low and high boundaries for proper pairs: (1, 20920)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1379, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1612.19, 1060.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 414.413 CPU sec, 23.165 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519732, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (540, 1384, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7155)
[0000][PE] mean and std.dev: (1998.96, 1899.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1296, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1518.81, 849.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 418.195 CPU sec, 23.406 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520142, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 899, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6027)
[0000][PE] mean and std.dev: (1307.07, 1226.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.97, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1282, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (1352.94, 632.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 411.176 CPU sec, 23.013 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519874, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 800, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (961.55, 814.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.99, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1431, 1716, 3308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7062)
[0000][PE] mean and std.dev: (2054.62, 1239.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 412.040 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519678, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 758, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5187)
[0000][PE] mean and std.dev: (1124.35, 1109.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 2134, 2948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6626)
[0000][PE] mean and std.dev: (2028.00, 1189.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 412.805 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520154, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 837, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7013)
[0000][PE] mean and std.dev: (1227.04, 1241.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.63, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1705, 3555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8759)
[0000][PE] mean and std.dev: (2105.15, 1817.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 413.257 CPU sec, 23.200 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519799, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 794, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (1173.27, 1131.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.35, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1199, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1369.57, 834.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 413.651 CPU sec, 23.141 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519499, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (532, 969, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (828.47, 576.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.34, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1221, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (1029.20, 502.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 414.549 CPU sec, 23.389 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519909, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (596, 1235, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4064)
[0000][PE] mean and std.dev: (1181.41, 789.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.38, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1237, 1757, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (1590.33, 750.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 416.186 CPU sec, 23.291 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520164, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 672, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (706.65, 553.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1689, 3467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7977)
[0000][PE] mean and std.dev: (2167.31, 1331.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 414.244 CPU sec, 23.228 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520229, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 680, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4669)
[0000][PE] mean and std.dev: (1150.26, 1031.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1392, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (1427.71, 680.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 410.615 CPU sec, 22.962 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519683, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 685, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2152)
[0000][PE] mean and std.dev: (765.65, 453.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1468, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6111)
[0000][PE] mean and std.dev: (1771.81, 917.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 414.105 CPU sec, 23.185 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519920, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 856, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (1031.44, 811.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.91, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1508, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1587.38, 695.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 411.085 CPU sec, 23.039 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520252, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 724, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (849.47, 658.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1168, 1461, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5341)
[0000][PE] mean and std.dev: (1741.31, 935.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 409.340 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520162, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 725, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (927.17, 900.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.35, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1354, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (1418.00, 940.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 408.253 CPU sec, 22.801 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519847, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1061, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1164.42, 815.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1198, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5503)
[0000][PE] mean and std.dev: (1624.89, 1099.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 409.600 CPU sec, 22.924 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520093, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1132, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4677)
[0000][PE] mean and std.dev: (1016.95, 720.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1560, 2694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5824)
[0000][PE] mean and std.dev: (1849.20, 1076.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 406.080 CPU sec, 22.740 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520185, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 1121, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (1123.29, 877.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1339, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4268)
[0000][PE] mean and std.dev: (1329.65, 750.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 412.645 CPU sec, 23.097 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519932, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (706, 922, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1298.83, 1071.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1310, 1833, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5357)
[0000][PE] mean and std.dev: (2066.77, 1006.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 406.439 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520374, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 741, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (1039.41, 1039.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1180, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1449.15, 1014.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 406.807 CPU sec, 22.768 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519804, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 730, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (907.27, 689.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1252, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3429)
[0000][PE] mean and std.dev: (1284.50, 581.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 412.055 CPU sec, 23.041 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520496, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (560, 1088, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (1196.81, 860.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1489, 1872, 3385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7177)
[0000][PE] mean and std.dev: (2477.61, 1557.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 403.160 CPU sec, 22.617 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520811, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 995, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4459)
[0000][PE] mean and std.dev: (1067.53, 752.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.23, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1938, 2748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6270)
[0000][PE] mean and std.dev: (2036.67, 1499.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 401.472 CPU sec, 22.472 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520045, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 607, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2867)
[0000][PE] mean and std.dev: (704.00, 480.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1355, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5867)
[0000][PE] mean and std.dev: (1596.78, 1143.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 408.154 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520044, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (497, 982, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (1163.21, 924.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1451, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1463.45, 684.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 408.101 CPU sec, 22.844 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519778, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 957, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1219.83, 1011.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1472, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (1292.75, 484.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 405.177 CPU sec, 22.700 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520126, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (951, 1417, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5811)
[0000][PE] mean and std.dev: (1804.70, 1443.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1269, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2516)
[0000][PE] mean and std.dev: (1096.95, 340.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 405.411 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519769, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 765, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (1040.80, 881.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1484, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (1686.52, 617.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 408.915 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519858, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 867, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (1228.82, 1120.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1615, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5000)
[0000][PE] mean and std.dev: (1619.91, 872.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 407.985 CPU sec, 22.823 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520276, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 957, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1113.75, 892.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1298, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5496)
[0000][PE] mean and std.dev: (1655.92, 1084.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 404.046 CPU sec, 22.619 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519888, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 1165, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (1148.15, 799.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.79, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1312, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (1476.00, 550.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 406.068 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519631, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 460, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (912.04, 817.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1453, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1719.11, 1154.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 405.794 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520319, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (576, 1569, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6612)
[0000][PE] mean and std.dev: (1733.31, 1718.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1650, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (1563.10, 799.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 405.288 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519761, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 929, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (980.97, 693.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1285, 1873, 4148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9874)
[0000][PE] mean and std.dev: (2683.80, 2182.18)
[0000][PE] low and high boundaries for proper pairs: (1, 12737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 407.442 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520097, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (535, 1084, 2608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6754)
[0000][PE] mean and std.dev: (1293.12, 956.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1397, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (1351.04, 604.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 402.099 CPU sec, 22.497 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519624, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 1058, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5214)
[0000][PE] mean and std.dev: (1370.82, 1220.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.53, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1403, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5186)
[0000][PE] mean and std.dev: (1670.85, 906.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 407.464 CPU sec, 22.751 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520288, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1153, 1412, 2818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6148)
[0000][PE] mean and std.dev: (1912.80, 1495.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1903, 3868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9264)
[0000][PE] mean and std.dev: (2240.82, 1413.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 403.713 CPU sec, 22.606 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520185, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 1215, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (1490.92, 1311.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.27, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 2359, 2612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5580)
[0000][PE] mean and std.dev: (1874.15, 709.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 402.767 CPU sec, 22.589 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520438, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 971, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5822)
[0000][PE] mean and std.dev: (1475.08, 1325.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.29, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1736, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5368)
[0000][PE] mean and std.dev: (1731.74, 998.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 404.095 CPU sec, 22.635 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520283, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 616, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (920.47, 961.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1369, 1528, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (1897.19, 1076.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 401.982 CPU sec, 22.474 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 519670, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1045, 1703, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1623.10, 943.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1304, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (1357.06, 577.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 404.958 CPU sec, 22.677 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520177, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1030, 1330, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (1433.40, 684.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1363, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5495)
[0000][PE] mean and std.dev: (1591.74, 834.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 405.334 CPU sec, 22.682 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519980, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 771, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4515)
[0000][PE] mean and std.dev: (1075.86, 1088.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1416, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5140)
[0000][PE] mean and std.dev: (1609.00, 1052.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 406.683 CPU sec, 22.762 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519954, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (715, 967, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (877.61, 503.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.94, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 1849, 3361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7509)
[0000][PE] mean and std.dev: (2044.90, 1426.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 406.419 CPU sec, 22.781 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519851, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 803, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (957.87, 723.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1619, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (1453.37, 560.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 406.275 CPU sec, 22.728 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519668, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 476, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2483)
[0000][PE] mean and std.dev: (662.88, 422.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1288, 1843, 3279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7261)
[0000][PE] mean and std.dev: (1931.33, 941.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 404.501 CPU sec, 22.650 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520094, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 1262, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1205.76, 836.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.50, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1556, 3074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7530)
[0000][PE] mean and std.dev: (1828.16, 1343.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 405.243 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520979, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 1058, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (855.57, 510.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.31, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1288, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (1204.63, 624.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 402.371 CPU sec, 22.525 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519632, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (467, 1107, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (1296.96, 1014.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1568, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (1646.74, 652.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 408.325 CPU sec, 22.869 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520223, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 747, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (870.00, 666.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.55, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 2332, 3306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7990)
[0000][PE] mean and std.dev: (2276.46, 1695.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 403.877 CPU sec, 22.604 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519758, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 415, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2435)
[0000][PE] mean and std.dev: (566.55, 505.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 1710, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (1706.45, 857.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 407.110 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520221, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 775, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (826.33, 770.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1314, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1542.00, 941.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 405.225 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520079, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (775, 1129, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6625)
[0000][PE] mean and std.dev: (1793.48, 1545.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1445, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (1604.80, 811.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 405.090 CPU sec, 22.685 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205316
	[0000][ M::kt_pipeline] read 1205316 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520128, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 640, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4654)
[0000][PE] mean and std.dev: (957.63, 875.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1187, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1539.41, 960.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 403.025 CPU sec, 22.582 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519908, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (683, 1361, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4589)
[0000][PE] mean and std.dev: (1388.26, 1020.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1500, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1646.60, 817.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205316 reads in 407.838 CPU sec, 22.926 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520291, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (704, 1325, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5111)
[0000][PE] mean and std.dev: (1523.45, 1209.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1065, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (1236.89, 894.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 410.932 CPU sec, 23.101 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519906, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (608, 1624, 2805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7199)
[0000][PE] mean and std.dev: (1830.39, 1493.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1730, 2868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6706)
[0000][PE] mean and std.dev: (1649.12, 1000.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 408.781 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520160, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 919, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (985.44, 652.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1237, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5521)
[0000][PE] mean and std.dev: (1436.00, 941.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 404.453 CPU sec, 22.653 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520085, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 585, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6743)
[0000][PE] mean and std.dev: (1265.59, 1385.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1190, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5304)
[0000][PE] mean and std.dev: (1491.61, 1035.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 403.693 CPU sec, 22.613 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520082, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 1052, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5560)
[0000][PE] mean and std.dev: (1321.48, 1212.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.66, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1347, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (1468.95, 824.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 407.944 CPU sec, 22.869 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520048, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 871, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6076)
[0000][PE] mean and std.dev: (1149.57, 1044.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1185, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1279.56, 677.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 408.966 CPU sec, 22.907 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520238, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 1139, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (981.39, 645.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1462, 2262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4748)
[0000][PE] mean and std.dev: (1661.75, 1036.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 408.378 CPU sec, 22.843 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520094, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 693, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (837.48, 746.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1737, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5073)
[0000][PE] mean and std.dev: (1565.71, 834.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 410.827 CPU sec, 23.022 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519664, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 385, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3022)
[0000][PE] mean and std.dev: (727.04, 671.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.71, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1417, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (1536.06, 781.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 410.633 CPU sec, 22.996 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520295, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 1224, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (1151.42, 719.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1252, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (1317.38, 521.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 410.904 CPU sec, 22.980 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520111, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 889, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (839.22, 700.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1078, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5400)
[0000][PE] mean and std.dev: (1396.12, 965.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 409.887 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520076, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 1098, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (1126.44, 800.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1811, 2940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6392)
[0000][PE] mean and std.dev: (2122.00, 1383.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 410.096 CPU sec, 22.951 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520037, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 875, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6119)
[0000][PE] mean and std.dev: (1510.38, 1545.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1510, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (1472.72, 747.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 408.241 CPU sec, 22.823 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519947, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (715, 1615, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6022)
[0000][PE] mean and std.dev: (1521.04, 1018.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (668, 1023, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (1036.61, 524.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 408.501 CPU sec, 22.938 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520068, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (647, 891, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (1003.27, 668.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.45, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 1972, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (1658.55, 440.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 408.511 CPU sec, 22.839 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520039, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (477, 646, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (838.61, 689.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1035, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5758)
[0000][PE] mean and std.dev: (1570.89, 1163.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 410.254 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520357, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 1074, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4537)
[0000][PE] mean and std.dev: (1011.04, 731.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.48, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1870, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6735)
[0000][PE] mean and std.dev: (1981.92, 1089.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 408.149 CPU sec, 22.856 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520333, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (601, 1202, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (1140.24, 852.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1935, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5637)
[0000][PE] mean and std.dev: (1802.89, 807.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 410.329 CPU sec, 23.051 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520334, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 677, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (880.00, 792.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1295, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5225)
[0000][PE] mean and std.dev: (1679.64, 1176.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 407.760 CPU sec, 22.802 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520369, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 843, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2760)
[0000][PE] mean and std.dev: (881.23, 687.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1162, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6279)
[0000][PE] mean and std.dev: (1615.91, 1336.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 413.643 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519596, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 723, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (983.95, 865.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1412, 2645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5913)
[0000][PE] mean and std.dev: (1821.77, 1278.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 407.098 CPU sec, 22.809 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519842, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 745, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5974)
[0000][PE] mean and std.dev: (1230.96, 1151.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1601, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (1504.59, 832.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 411.781 CPU sec, 23.070 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520125, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 680, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (813.45, 659.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 2099, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5180)
[0000][PE] mean and std.dev: (1946.92, 1038.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 408.570 CPU sec, 22.868 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520029, 3, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 985, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1077.81, 941.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.32, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1619, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1725.00, 1014.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 411.630 CPU sec, 23.007 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520368, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (950, 1529, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (1520.19, 922.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1602, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (1494.00, 708.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 410.628 CPU sec, 22.990 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519785, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 610, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (841.68, 701.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.26, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1714, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (1538.62, 611.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 410.869 CPU sec, 23.000 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205382
	[0000][ M::kt_pipeline] read 1205382 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519973, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (555, 870, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2730)
[0000][PE] mean and std.dev: (690.29, 379.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.27, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1696, 2619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5679)
[0000][PE] mean and std.dev: (1629.83, 877.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 409.721 CPU sec, 22.929 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520147, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 454, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (910.12, 990.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.50, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1351, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1452.59, 1023.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205382 reads in 412.365 CPU sec, 23.106 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519993, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (867, 1031, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (1005.00, 478.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1479, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (1501.52, 747.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 405.929 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519800, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1129, 1813, 3136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7150)
[0000][PE] mean and std.dev: (2094.65, 1540.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.44, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1498, 2731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5725)
[0000][PE] mean and std.dev: (1923.66, 1199.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 410.363 CPU sec, 22.967 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520344, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 556, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (558.27, 459.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.26, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1197, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6700)
[0000][PE] mean and std.dev: (1783.32, 1291.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 405.537 CPU sec, 22.704 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519957, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 859, 2547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6905)
[0000][PE] mean and std.dev: (1439.53, 1447.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1554, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1735.35, 934.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 407.420 CPU sec, 22.794 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519574, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 954, 3056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8356)
[0000][PE] mean and std.dev: (1512.39, 1720.86)
[0000][PE] low and high boundaries for proper pairs: (1, 11006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1551, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5403)
[0000][PE] mean and std.dev: (1690.50, 739.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 413.579 CPU sec, 23.155 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520134, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (478, 1141, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5734)
[0000][PE] mean and std.dev: (1360.40, 1095.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.26, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1448, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6581)
[0000][PE] mean and std.dev: (1867.00, 1401.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 409.618 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519842, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 675, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (816.56, 853.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1428, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (1448.00, 681.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 409.953 CPU sec, 22.951 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519764, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1015, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3280)
[0000][PE] mean and std.dev: (1032.85, 780.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1279, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4117)
[0000][PE] mean and std.dev: (1487.25, 868.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 411.701 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520168, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 820, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5927)
[0000][PE] mean and std.dev: (1240.81, 1081.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.90, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1215, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4950)
[0000][PE] mean and std.dev: (1530.70, 1171.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 410.307 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520155, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1266, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6410)
[0000][PE] mean and std.dev: (1633.04, 1510.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1223, 1941, 2617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5405)
[0000][PE] mean and std.dev: (1831.71, 977.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 410.019 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520190, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 992, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (869.59, 623.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.35, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1562, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4716)
[0000][PE] mean and std.dev: (1583.00, 837.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 408.070 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520036, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1090, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (1066.22, 921.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1190, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1211.83, 579.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 410.161 CPU sec, 22.964 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520424, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 934, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (1043.67, 721.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1689, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5506)
[0000][PE] mean and std.dev: (1542.00, 925.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 408.056 CPU sec, 22.822 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520106, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1072, 2066, 3829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9343)
[0000][PE] mean and std.dev: (2625.12, 2462.51)
[0000][PE] low and high boundaries for proper pairs: (1, 12475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1450, 2794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6976)
[0000][PE] mean and std.dev: (1820.32, 1378.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 411.938 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519982, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 765, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (1082.28, 824.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1286, 1541, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4958)
[0000][PE] mean and std.dev: (1657.80, 899.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 408.033 CPU sec, 22.866 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519795, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 1036, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (1294.76, 988.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1371, 1733, 2853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5817)
[0000][PE] mean and std.dev: (2170.94, 1440.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 410.591 CPU sec, 22.991 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519660, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 1084, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (1138.00, 795.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.45, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1424, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3907)
[0000][PE] mean and std.dev: (1507.43, 709.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 411.081 CPU sec, 23.010 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520143, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 974, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6923)
[0000][PE] mean and std.dev: (1533.17, 1579.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.30, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1676, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4063)
[0000][PE] mean and std.dev: (1701.29, 837.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 412.504 CPU sec, 23.040 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520084, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (660, 994, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1123.48, 807.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1140, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (1251.00, 581.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 411.199 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520261, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (612, 1302, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1289.05, 1043.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1181, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (1401.86, 849.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 408.413 CPU sec, 22.854 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 519821, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 925, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (1089.10, 816.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.86, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1304, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5720)
[0000][PE] mean and std.dev: (1551.25, 1198.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 409.824 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520109, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 653, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (848.11, 699.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1371, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (1142.27, 410.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 408.447 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519910, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 536, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3785)
[0000][PE] mean and std.dev: (1011.93, 956.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.85, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1121, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5942)
[0000][PE] mean and std.dev: (1412.20, 1145.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 409.583 CPU sec, 22.908 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520550, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (690, 869, 3126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7998)
[0000][PE] mean and std.dev: (1927.42, 2071.24)
[0000][PE] low and high boundaries for proper pairs: (1, 10434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1220, 1739, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (1596.76, 842.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 406.824 CPU sec, 22.777 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520205, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 1130, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5071)
[0000][PE] mean and std.dev: (1167.05, 851.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1782, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5703)
[0000][PE] mean and std.dev: (1901.64, 1136.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 406.739 CPU sec, 22.763 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520028, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 783, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (912.00, 758.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1467, 1716, 2981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (2056.00, 1534.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 408.952 CPU sec, 22.878 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520094, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (598, 1214, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7213)
[0000][PE] mean and std.dev: (1718.79, 1512.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1480, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (1306.80, 708.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 409.057 CPU sec, 22.910 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520371, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 460, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (772.07, 717.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1479, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (1515.17, 640.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 409.699 CPU sec, 22.965 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520298, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 1042, 2868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7876)
[0000][PE] mean and std.dev: (1723.48, 1735.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1545, 2718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6228)
[0000][PE] mean and std.dev: (1761.00, 994.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 407.857 CPU sec, 22.817 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519712, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (898, 1410, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1184.69, 714.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1746, 3712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8578)
[0000][PE] mean and std.dev: (2262.12, 1611.86)
[0000][PE] low and high boundaries for proper pairs: (1, 11011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 408.917 CPU sec, 22.895 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519929, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (470, 1060, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (830.38, 459.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.57, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 2071, 2897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6993)
[0000][PE] mean and std.dev: (2133.31, 1660.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 409.335 CPU sec, 22.918 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519979, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 549, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (806.20, 636.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 896)
[0000][PE] mean and std.dev: (511.17, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1560, 4456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11428)
[0000][PE] mean and std.dev: (2386.76, 1945.48)
[0000][PE] low and high boundaries for proper pairs: (1, 14914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 409.576 CPU sec, 22.946 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520396, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (571, 1299, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4735)
[0000][PE] mean and std.dev: (1496.41, 1131.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1539, 2787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5973)
[0000][PE] mean and std.dev: (2123.85, 1513.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 406.957 CPU sec, 22.746 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520238, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 845, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (772.80, 521.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1428, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (1310.32, 402.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 409.309 CPU sec, 22.903 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519638, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 629, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (1102.28, 1095.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1382, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4775)
[0000][PE] mean and std.dev: (1504.87, 721.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 407.675 CPU sec, 22.813 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520176, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 803, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (946.10, 913.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1469, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5071)
[0000][PE] mean and std.dev: (1571.23, 631.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 413.151 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520088, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (503, 728, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2999)
[0000][PE] mean and std.dev: (735.30, 455.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1499, 3311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8009)
[0000][PE] mean and std.dev: (2342.15, 1905.49)
[0000][PE] low and high boundaries for proper pairs: (1, 10358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 412.088 CPU sec, 23.070 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520167, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (536, 1202, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (1312.97, 989.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1593, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (1607.54, 771.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 410.277 CPU sec, 22.977 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520275, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (521, 950, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (1082.46, 784.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1412, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3932)
[0000][PE] mean and std.dev: (1445.05, 602.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 412.905 CPU sec, 23.096 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520152, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1008, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5312)
[0000][PE] mean and std.dev: (1024.72, 843.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1218, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5493)
[0000][PE] mean and std.dev: (1648.11, 1120.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 413.876 CPU sec, 23.213 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519806, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 1161, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (1245.70, 934.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (567, 1641, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5568)
[0000][PE] mean and std.dev: (1520.57, 889.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 412.289 CPU sec, 23.112 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519683, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (588, 1089, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (995.78, 606.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1383, 1996, 3029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6321)
[0000][PE] mean and std.dev: (2044.70, 1318.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 413.084 CPU sec, 23.162 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520099, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 1168, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1082.00, 1026.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.96, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1514, 2904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6674)
[0000][PE] mean and std.dev: (2019.88, 1540.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 410.209 CPU sec, 22.985 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519983, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 793, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (975.62, 1054.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1200, 2607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5899)
[0000][PE] mean and std.dev: (1747.07, 1224.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 410.623 CPU sec, 22.988 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520050, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 906, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4749)
[0000][PE] mean and std.dev: (1095.22, 943.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1801, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5549)
[0000][PE] mean and std.dev: (1825.52, 1157.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 407.960 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520490, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (656, 984, 2839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7205)
[0000][PE] mean and std.dev: (1470.65, 1173.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (530, 1636, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7658)
[0000][PE] mean and std.dev: (2005.35, 1831.06)
[0000][PE] low and high boundaries for proper pairs: (1, 10034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 409.458 CPU sec, 22.945 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519908, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (478, 882, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (971.70, 645.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1565, 2565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5251)
[0000][PE] mean and std.dev: (1845.17, 1131.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 409.441 CPU sec, 22.947 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520285, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 726, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3154)
[0000][PE] mean and std.dev: (825.38, 761.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1514, 4096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9978)
[0000][PE] mean and std.dev: (2545.91, 1959.75)
[0000][PE] low and high boundaries for proper pairs: (1, 12919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 414.554 CPU sec, 23.191 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519699, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (611, 1179, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (1088.19, 664.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.32, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1600, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4982)
[0000][PE] mean and std.dev: (1589.05, 995.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 408.758 CPU sec, 22.908 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520485, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 755, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (1011.83, 901.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1301, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5074)
[0000][PE] mean and std.dev: (1435.64, 815.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 408.277 CPU sec, 22.841 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520307, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 698, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (1213.16, 1026.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1301, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (1280.31, 850.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 410.056 CPU sec, 23.021 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519699, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (512, 998, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1265.48, 1157.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.34, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1371, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1585.56, 788.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 411.216 CPU sec, 23.038 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520160, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (497, 959, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5672)
[0000][PE] mean and std.dev: (1394.52, 1098.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1919, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5102)
[0000][PE] mean and std.dev: (1685.75, 1108.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 411.991 CPU sec, 23.106 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520099, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (525, 1171, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3891)
[0000][PE] mean and std.dev: (1184.45, 913.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1710, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5200)
[0000][PE] mean and std.dev: (1593.61, 976.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 408.315 CPU sec, 22.864 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520414, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 435, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (978.75, 884.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1568, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (1357.81, 646.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 404.698 CPU sec, 22.676 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520244, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 1511, 2853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7733)
[0000][PE] mean and std.dev: (1578.50, 1254.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1543, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4420)
[0000][PE] mean and std.dev: (1567.40, 719.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 408.620 CPU sec, 22.915 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520230, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (720, 1015, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (1258.10, 850.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1367, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (1344.77, 549.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 406.792 CPU sec, 22.778 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519927, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 849, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (977.18, 894.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.91, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1481, 1614, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (1531.38, 666.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 412.960 CPU sec, 23.132 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519670, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 972, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (1050.32, 983.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 2080, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5685)
[0000][PE] mean and std.dev: (2290.71, 1303.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 411.923 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520311, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 1478, 3086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8296)
[0000][PE] mean and std.dev: (1807.80, 1666.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1710, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (1516.95, 830.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 408.809 CPU sec, 22.893 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520156, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (577, 1020, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (930.33, 671.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.90, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1410, 1696, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1652.12, 479.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 410.614 CPU sec, 22.998 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520173, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 395, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2229)
[0000][PE] mean and std.dev: (581.95, 380.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1413, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3786)
[0000][PE] mean and std.dev: (1361.71, 745.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 410.450 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519690, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 1157, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (1219.58, 903.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1603, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6037)
[0000][PE] mean and std.dev: (1437.92, 804.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 410.343 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519746, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (633, 995, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (1259.97, 1054.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.35, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1530, 2288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1568.22, 1140.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 409.945 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520218, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 526, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (801.30, 717.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1319, 3234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7552)
[0000][PE] mean and std.dev: (2160.79, 1810.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 412.242 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520154, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 946, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (1091.10, 939.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1653, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (1583.32, 998.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 411.771 CPU sec, 23.034 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519927, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 922, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (1170.00, 1114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1379, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4503)
[0000][PE] mean and std.dev: (1390.45, 773.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 415.814 CPU sec, 23.308 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519778, 1, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 1240, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4253)
[0000][PE] mean and std.dev: (1002.10, 897.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1281, 1640, 3225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7113)
[0000][PE] mean and std.dev: (2290.97, 1610.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 409.764 CPU sec, 22.945 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520601, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1054, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6444)
[0000][PE] mean and std.dev: (1521.32, 1532.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1346, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6933)
[0000][PE] mean and std.dev: (1779.17, 984.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 405.792 CPU sec, 22.789 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520090, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 1162, 2783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7805)
[0000][PE] mean and std.dev: (1697.11, 1803.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.87, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1690, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (1527.45, 974.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 406.007 CPU sec, 22.720 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519569, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 1029, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1161.62, 1045.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1532, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5224)
[0000][PE] mean and std.dev: (1458.11, 671.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 414.520 CPU sec, 23.265 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519747, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 883, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6327)
[0000][PE] mean and std.dev: (1398.91, 1302.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1962, 3497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8379)
[0000][PE] mean and std.dev: (2277.50, 1452.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 406.292 CPU sec, 22.775 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519670, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 871, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3373)
[0000][PE] mean and std.dev: (927.41, 812.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1241, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4772)
[0000][PE] mean and std.dev: (1214.22, 659.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 411.820 CPU sec, 23.077 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520283, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 939, 3386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9214)
[0000][PE] mean and std.dev: (1686.71, 1514.81)
[0000][PE] low and high boundaries for proper pairs: (1, 12128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1551, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (1558.38, 622.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 409.571 CPU sec, 22.901 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519774, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (880, 1341, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4969)
[0000][PE] mean and std.dev: (1570.23, 1065.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1413, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5129)
[0000][PE] mean and std.dev: (1501.71, 934.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 408.934 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520042, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (776, 1116, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4655)
[0000][PE] mean and std.dev: (1186.47, 804.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1749, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (1468.44, 811.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 410.547 CPU sec, 22.981 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520239, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 853, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3987)
[0000][PE] mean and std.dev: (902.50, 727.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.15, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1345, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (1246.00, 703.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 407.276 CPU sec, 22.807 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520154, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (622, 1026, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (1243.79, 1113.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1252, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (1328.96, 679.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 410.600 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520411, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (576, 1048, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1227.06, 1144.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1612, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (1489.86, 869.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 407.405 CPU sec, 22.777 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520366, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (906, 1315, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1411.78, 710.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 2107, 3015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7037)
[0000][PE] mean and std.dev: (2180.71, 1415.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 404.934 CPU sec, 22.675 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520077, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 662, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (885.17, 694.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (654, 1115, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (1118.60, 611.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 406.397 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520449, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 465, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (829.70, 731.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1111, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (1147.62, 379.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 405.519 CPU sec, 22.719 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520090, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (527, 1075, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5510)
[0000][PE] mean and std.dev: (1427.58, 1179.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1370, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5166)
[0000][PE] mean and std.dev: (1474.95, 805.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 406.986 CPU sec, 22.794 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520149, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 713, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (765.64, 618.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1457, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5270)
[0000][PE] mean and std.dev: (1586.38, 1039.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 410.484 CPU sec, 22.982 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520368, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 937, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (974.39, 713.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1391, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (1503.44, 672.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 408.841 CPU sec, 22.906 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520262, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 450, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (643.19, 509.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.37, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1530, 3250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7192)
[0000][PE] mean and std.dev: (2003.63, 1263.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 408.796 CPU sec, 22.889 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519717, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (486, 1216, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1318.85, 1054.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1347, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (1296.65, 740.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 408.011 CPU sec, 22.848 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520142, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 698, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (1065.13, 964.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1739, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1612.71, 795.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 411.395 CPU sec, 23.024 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519682, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (525, 1063, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1266.30, 1055.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1525, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5341)
[0000][PE] mean and std.dev: (1737.88, 1206.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 407.836 CPU sec, 22.836 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519841, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 958, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4547)
[0000][PE] mean and std.dev: (1100.89, 842.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.16, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1569, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (1649.86, 759.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 410.834 CPU sec, 22.977 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520283, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 626, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2385)
[0000][PE] mean and std.dev: (545.56, 301.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1218, 1771, 2808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5988)
[0000][PE] mean and std.dev: (1882.40, 875.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 404.852 CPU sec, 22.644 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519913, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 882, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3279)
[0000][PE] mean and std.dev: (802.41, 639.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1483, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5439)
[0000][PE] mean and std.dev: (1675.36, 1026.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 408.157 CPU sec, 22.863 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520457, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (777, 1147, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5820)
[0000][PE] mean and std.dev: (1789.16, 1444.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1557, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5636)
[0000][PE] mean and std.dev: (1837.22, 1228.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 404.645 CPU sec, 22.625 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520391, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 988, 3168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8664)
[0000][PE] mean and std.dev: (1876.37, 1994.76)
[0000][PE] low and high boundaries for proper pairs: (1, 11412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1292, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5467)
[0000][PE] mean and std.dev: (1547.45, 1146.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 407.067 CPU sec, 22.758 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519726, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 1297, 3136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8546)
[0000][PE] mean and std.dev: (2022.75, 1945.34)
[0000][PE] low and high boundaries for proper pairs: (1, 11251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.65, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1573, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1355.85, 704.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 409.442 CPU sec, 22.944 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519881, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (815, 982, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1108.62, 623.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1361, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (1397.31, 596.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 408.100 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205374
	[0000][ M::kt_pipeline] read 1205374 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520522, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 509, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3879)
[0000][PE] mean and std.dev: (838.64, 899.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1530, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6306)
[0000][PE] mean and std.dev: (2232.26, 1569.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 411.799 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519911, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 1170, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1252.10, 875.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.57, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1581, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (1424.29, 536.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205374 reads in 411.824 CPU sec, 23.102 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520104, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 847, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5292)
[0000][PE] mean and std.dev: (1320.95, 1146.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1802, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (1618.72, 942.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 405.717 CPU sec, 22.741 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520006, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 883, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (995.68, 736.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1597, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5523)
[0000][PE] mean and std.dev: (1777.07, 911.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 406.307 CPU sec, 22.775 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519752, 11, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1076, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (948.17, 687.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.94, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (250, 792, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7348)
[0000][PE] mean and std.dev: (1101.90, 1026.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9714)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1591, 2624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6056)
[0000][PE] mean and std.dev: (1887.72, 1211.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 406.593 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520240, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 596, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3170)
[0000][PE] mean and std.dev: (854.13, 693.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1387, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (1399.84, 458.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 407.903 CPU sec, 22.822 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519984, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 767, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (1025.25, 943.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1728, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1779.61, 749.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 404.663 CPU sec, 22.680 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520050, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 694, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5837)
[0000][PE] mean and std.dev: (1220.17, 1414.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1725, 3300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7692)
[0000][PE] mean and std.dev: (2316.95, 1737.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 410.013 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520464, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 816, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6257)
[0000][PE] mean and std.dev: (1461.50, 1520.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.88, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (527, 960, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5312)
[0000][PE] mean and std.dev: (1169.08, 804.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 408.109 CPU sec, 22.838 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519748, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 945, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5325)
[0000][PE] mean and std.dev: (1149.07, 1137.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1384, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (1342.30, 598.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 413.142 CPU sec, 23.119 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519870, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 931, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4766)
[0000][PE] mean and std.dev: (1115.80, 942.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1331, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4707)
[0000][PE] mean and std.dev: (1496.47, 862.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 410.443 CPU sec, 22.963 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520131, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 699, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (859.00, 870.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.29, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1724, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (1761.09, 752.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 405.913 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205368
	[0000][ M::kt_pipeline] read 1205368 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520231, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 661, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (797.42, 684.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.90, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1119, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5772)
[0000][PE] mean and std.dev: (1540.96, 1016.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 409.232 CPU sec, 22.876 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520406, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 1281, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6655)
[0000][PE] mean and std.dev: (1488.21, 1421.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1462, 3216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7888)
[0000][PE] mean and std.dev: (2255.86, 1742.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205368 reads in 407.448 CPU sec, 22.801 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520015, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (501, 739, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (786.00, 526.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1689, 2115, 5993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14601)
[0000][PE] mean and std.dev: (3159.00, 2331.16)
[0000][PE] low and high boundaries for proper pairs: (1, 18905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 408.955 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520052, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 1149, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (1220.17, 957.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1635, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4919)
[0000][PE] mean and std.dev: (1581.75, 776.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 409.739 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519683, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 753, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2342)
[0000][PE] mean and std.dev: (749.80, 473.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1570, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1754.19, 855.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 410.578 CPU sec, 22.956 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519825, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (815, 1112, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5576)
[0000][PE] mean and std.dev: (1448.14, 1021.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.44, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1637, 3120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6966)
[0000][PE] mean and std.dev: (2126.55, 1559.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 409.877 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520197, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 842, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1306.21, 1368.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 2307, 2893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6533)
[0000][PE] mean and std.dev: (1964.75, 907.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 410.509 CPU sec, 22.993 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520359, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 872, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (1067.83, 956.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1512, 5053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12887)
[0000][PE] mean and std.dev: (2551.86, 2201.08)
[0000][PE] low and high boundaries for proper pairs: (1, 16804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 411.279 CPU sec, 23.018 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520597, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1249, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6084)
[0000][PE] mean and std.dev: (1477.48, 1389.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1625, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (1742.61, 1050.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 408.988 CPU sec, 22.934 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520540, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 568, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4287)
[0000][PE] mean and std.dev: (744.81, 616.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1372, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (1416.20, 681.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 406.629 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519429, 12, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (636, 1200, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5355)
[0000][PE] mean and std.dev: (1546.00, 1199.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (792, 2669, 5541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15039)
[0000][PE] mean and std.dev: (2808.83, 2293.94)
[0000][PE] low and high boundaries for proper pairs: (1, 19788)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1745, 4810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12390)
[0000][PE] mean and std.dev: (2697.96, 2188.88)
[0000][PE] low and high boundaries for proper pairs: (1, 16180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 412.731 CPU sec, 23.147 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520377, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 932, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5080)
[0000][PE] mean and std.dev: (1008.96, 758.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1273, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (1297.06, 713.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 408.816 CPU sec, 22.970 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520379, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 960, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (958.68, 684.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1499, 1824, 3853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8561)
[0000][PE] mean and std.dev: (2531.43, 1897.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 407.579 CPU sec, 22.837 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520199, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (772, 1235, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (1244.73, 772.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1717, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5727)
[0000][PE] mean and std.dev: (1839.15, 1080.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 409.150 CPU sec, 22.908 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519904, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 900, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (992.81, 663.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1419, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (1502.21, 934.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 411.380 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520192, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1051, 1775, 3406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8116)
[0000][PE] mean and std.dev: (2067.65, 1554.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.20, 120.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (483, 1463, 2862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7620)
[0000][PE] mean and std.dev: (1966.71, 1668.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 409.612 CPU sec, 22.969 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519397, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1215, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7599)
[0000][PE] mean and std.dev: (1473.46, 1294.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.81, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 2232, 3133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7069)
[0000][PE] mean and std.dev: (1786.00, 971.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 413.731 CPU sec, 23.206 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520204, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 959, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5644)
[0000][PE] mean and std.dev: (1294.10, 1072.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1495, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5471)
[0000][PE] mean and std.dev: (1697.00, 1015.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 409.384 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519957, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 1299, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6880)
[0000][PE] mean and std.dev: (1439.90, 1195.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.19, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1352, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5137)
[0000][PE] mean and std.dev: (1803.00, 1167.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 408.669 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519937, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 401, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (835.42, 829.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1121, 3186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7788)
[0000][PE] mean and std.dev: (1948.00, 1775.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 407.743 CPU sec, 22.899 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520226, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1249, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6128)
[0000][PE] mean and std.dev: (1417.50, 1143.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1453, 2921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6331)
[0000][PE] mean and std.dev: (2009.25, 1400.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 410.546 CPU sec, 23.058 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519877, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 1189, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5606)
[0000][PE] mean and std.dev: (1239.89, 1131.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1230, 1686, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1620.53, 797.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 408.127 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520444, 8, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 495, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4692)
[0000][PE] mean and std.dev: (978.48, 988.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1211, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (1209.88, 628.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 402.808 CPU sec, 22.546 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519875, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1094, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (1115.43, 923.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1471, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5992)
[0000][PE] mean and std.dev: (1869.46, 1194.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 409.169 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519903, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 618, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5847)
[0000][PE] mean and std.dev: (1188.44, 1114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.31, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1299, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (1289.37, 655.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 411.953 CPU sec, 23.054 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520434, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1273, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1083.32, 794.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1385, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1349.31, 768.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 407.460 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520312, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (533, 1374, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4961)
[0000][PE] mean and std.dev: (1252.61, 929.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1672, 3081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7203)
[0000][PE] mean and std.dev: (1989.62, 1634.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 409.556 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519558, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 994, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (947.35, 750.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1045, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1322.00, 677.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 418.035 CPU sec, 23.500 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520076, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 730, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2467)
[0000][PE] mean and std.dev: (794.76, 492.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1467, 1754, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4881)
[0000][PE] mean and std.dev: (1914.67, 1171.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 403.221 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519906, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 1126, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (1134.86, 941.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1155, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (1216.41, 485.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 410.978 CPU sec, 23.023 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520403, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 746, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (937.78, 768.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 1140, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (1021.25, 636.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 406.183 CPU sec, 22.763 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520137, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1006, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5081)
[0000][PE] mean and std.dev: (1239.29, 1077.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.33, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1036, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 2049)
[0000][PE] mean and std.dev: (1012.86, 332.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 408.747 CPU sec, 22.886 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520149, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 1103, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6472)
[0000][PE] mean and std.dev: (1418.74, 1248.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1118, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5137)
[0000][PE] mean and std.dev: (1142.27, 495.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 409.547 CPU sec, 22.992 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520034, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 920, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6797)
[0000][PE] mean and std.dev: (1428.15, 1213.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1418, 3274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7768)
[0000][PE] mean and std.dev: (2109.42, 1616.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 406.911 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519956, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 851, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2754)
[0000][PE] mean and std.dev: (709.55, 463.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1695, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5445)
[0000][PE] mean and std.dev: (1595.27, 1077.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 405.584 CPU sec, 22.729 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519871, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 933, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (789.50, 530.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1472, 1854, 2428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1867.82, 827.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 413.328 CPU sec, 23.171 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519775, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (476, 1654, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7574)
[0000][PE] mean and std.dev: (1673.58, 1418.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1478, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5180)
[0000][PE] mean and std.dev: (1801.09, 1095.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 408.894 CPU sec, 22.882 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519745, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 914, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (1009.70, 770.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1375, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1354.90, 704.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 408.502 CPU sec, 22.911 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519879, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 869, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5502)
[0000][PE] mean and std.dev: (1288.53, 1216.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1053, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4716)
[0000][PE] mean and std.dev: (1447.76, 1097.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 410.366 CPU sec, 22.998 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519407, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (637, 1323, 2956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7594)
[0000][PE] mean and std.dev: (1874.30, 1996.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1412, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1505.24, 952.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 405.017 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519488, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1240, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6244)
[0000][PE] mean and std.dev: (1511.41, 1375.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1698, 7288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19810)
[0000][PE] mean and std.dev: (3225.42, 3360.79)
[0000][PE] low and high boundaries for proper pairs: (1, 26071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 410.067 CPU sec, 22.948 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519787, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (877, 1219, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5917)
[0000][PE] mean and std.dev: (1795.85, 1447.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1297, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5185)
[0000][PE] mean and std.dev: (1354.00, 761.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 406.888 CPU sec, 22.772 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520286, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1219, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6420)
[0000][PE] mean and std.dev: (1582.12, 1548.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1709, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4909)
[0000][PE] mean and std.dev: (1584.93, 777.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 406.543 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520203, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 695, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (797.19, 719.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1355, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1625.14, 954.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 405.888 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519765, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 459, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1955)
[0000][PE] mean and std.dev: (526.68, 382.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (431, 2852, 3943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10967)
[0000][PE] mean and std.dev: (2546.10, 2399.09)
[0000][PE] low and high boundaries for proper pairs: (1, 14479)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1212, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (1250.17, 524.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 409.482 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520052, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 1069, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6934)
[0000][PE] mean and std.dev: (1673.89, 1625.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 2002, 3395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8117)
[0000][PE] mean and std.dev: (2412.62, 1692.67)
[0000][PE] low and high boundaries for proper pairs: (1, 10478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 407.399 CPU sec, 22.796 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 519860, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 1333, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1326.08, 967.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 1111, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4187)
[0000][PE] mean and std.dev: (1290.05, 816.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 409.258 CPU sec, 22.908 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520265, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1061, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1228.70, 1119.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.75, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 2370, 3414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7830)
[0000][PE] mean and std.dev: (2349.95, 1287.17)
[0000][PE] low and high boundaries for proper pairs: (1, 10038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 406.777 CPU sec, 22.766 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519955, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (593, 1057, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (1022.14, 674.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1623, 3422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8260)
[0000][PE] mean and std.dev: (2012.04, 1436.28)
[0000][PE] low and high boundaries for proper pairs: (1, 10679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 407.105 CPU sec, 22.794 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519741, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 598, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4122)
[0000][PE] mean and std.dev: (861.95, 824.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.53, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1314, 2307, 3086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6630)
[0000][PE] mean and std.dev: (2118.00, 1025.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 411.884 CPU sec, 23.091 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520089, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 1038, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (965.30, 700.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1246, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4741)
[0000][PE] mean and std.dev: (1560.43, 1123.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 407.109 CPU sec, 22.792 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519932, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 1013, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4809)
[0000][PE] mean and std.dev: (1111.47, 988.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.25, 120.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1359, 1881, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1860.37, 702.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 408.804 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519939, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 990, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (982.33, 702.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.58, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1391, 3486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8378)
[0000][PE] mean and std.dev: (1929.70, 1503.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 407.638 CPU sec, 22.842 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520006, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 978, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (971.74, 617.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1280, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (1547.50, 618.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 407.188 CPU sec, 22.800 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 519976, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 835, 2774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7610)
[0000][PE] mean and std.dev: (1543.77, 1215.98)
[0000][PE] low and high boundaries for proper pairs: (1, 10028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1467, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5593)
[0000][PE] mean and std.dev: (1833.70, 1113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 409.672 CPU sec, 22.961 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519752, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 858, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (951.70, 758.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1253, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (1162.25, 634.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 406.862 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520054, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 488, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2037)
[0000][PE] mean and std.dev: (519.35, 354.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1111, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5036)
[0000][PE] mean and std.dev: (1314.68, 733.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 411.406 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519945, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 863, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (912.36, 911.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.56, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1479, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4287)
[0000][PE] mean and std.dev: (1687.08, 835.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 409.133 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520212, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 594, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (1026.33, 1008.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1202, 1932, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5876)
[0000][PE] mean and std.dev: (1816.54, 893.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 408.460 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519818, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 686, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5190)
[0000][PE] mean and std.dev: (1083.00, 930.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1659, 3632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8686)
[0000][PE] mean and std.dev: (2362.37, 1869.43)
[0000][PE] low and high boundaries for proper pairs: (1, 11213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 416.455 CPU sec, 23.347 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519804, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 384, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (645.00, 567.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1144, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (1263.32, 595.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 411.361 CPU sec, 23.038 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519813, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1050, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5764)
[0000][PE] mean and std.dev: (1362.90, 1171.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1737, 3600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8732)
[0000][PE] mean and std.dev: (2139.06, 1582.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 405.502 CPU sec, 22.727 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520119, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 833, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1075.67, 941.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1311, 1764, 2668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5382)
[0000][PE] mean and std.dev: (1812.44, 1050.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 405.049 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520322, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1092, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (1137.61, 776.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.76, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1601, 2930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6880)
[0000][PE] mean and std.dev: (1979.83, 1531.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 406.627 CPU sec, 22.775 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519573, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 661, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (1024.84, 916.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1767, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5895)
[0000][PE] mean and std.dev: (1981.96, 1157.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 412.757 CPU sec, 23.140 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519795, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1187, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (1133.92, 1099.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.15, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1501, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (1359.62, 563.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 412.153 CPU sec, 23.084 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519602, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 706, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (730.89, 507.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1239, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (1234.70, 628.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 405.163 CPU sec, 22.709 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520225, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 846, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (1097.09, 916.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1672, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5301)
[0000][PE] mean and std.dev: (1995.05, 1170.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 407.781 CPU sec, 22.838 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520206, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 510, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (827.06, 782.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1389, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5488)
[0000][PE] mean and std.dev: (1863.22, 1247.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 405.965 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520403, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 770, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5394)
[0000][PE] mean and std.dev: (1099.33, 858.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1945, 2651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (2003.39, 926.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 404.091 CPU sec, 22.616 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520021, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 1288, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (1261.35, 1144.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 1218, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5315)
[0000][PE] mean and std.dev: (1526.36, 1066.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 408.423 CPU sec, 22.863 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519734, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 798, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3085)
[0000][PE] mean and std.dev: (822.77, 669.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1399, 1663, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (1627.36, 594.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 407.811 CPU sec, 22.898 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520269, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 612, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1024.40, 907.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1359, 2315, 3050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6432)
[0000][PE] mean and std.dev: (1958.14, 1073.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 403.856 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519614, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 909, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1100.00, 796.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1382, 1950, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (1796.05, 784.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 408.313 CPU sec, 22.899 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519954, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 533, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (1032.33, 879.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1761, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (1762.00, 981.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 406.939 CPU sec, 22.756 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520340, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (585, 1426, 3340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8850)
[0000][PE] mean and std.dev: (1959.36, 1764.21)
[0000][PE] low and high boundaries for proper pairs: (1, 11605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.26, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1354, 1893, 2819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5749)
[0000][PE] mean and std.dev: (1829.69, 835.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 404.349 CPU sec, 22.630 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519380, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (540, 1110, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (1144.17, 738.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1099, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (1582.44, 1277.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 404.135 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520448, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 1200, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6859)
[0000][PE] mean and std.dev: (1544.45, 1345.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1517, 3030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7278)
[0000][PE] mean and std.dev: (1673.53, 1043.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 401.901 CPU sec, 22.479 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520205, 11, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 1010, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6497)
[0000][PE] mean and std.dev: (1375.79, 1196.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.30, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (364, 952, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5956)
[0000][PE] mean and std.dev: (1125.36, 965.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7820)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1466, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (1516.15, 807.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 405.752 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520253, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1002, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6332)
[0000][PE] mean and std.dev: (1440.43, 1386.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1427, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (1496.33, 791.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 406.038 CPU sec, 22.731 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520718, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (489, 1033, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (1021.28, 866.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1331, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (1347.46, 727.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 409.085 CPU sec, 22.899 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519896, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 745, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4780)
[0000][PE] mean and std.dev: (1238.95, 1178.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1077, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6330)
[0000][PE] mean and std.dev: (1680.24, 1357.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 404.263 CPU sec, 22.618 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520126, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 711, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (1086.24, 989.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1364, 3039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6793)
[0000][PE] mean and std.dev: (1791.87, 1025.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 404.755 CPU sec, 22.656 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519513, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (524, 1406, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4856)
[0000][PE] mean and std.dev: (1378.46, 1112.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.32, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1317, 1732, 2934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1719.39, 779.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 405.335 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519960, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 538, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (918.33, 953.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1325, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (1452.35, 862.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 402.126 CPU sec, 22.503 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520442, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (666, 1256, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4833)
[0000][PE] mean and std.dev: (1329.65, 915.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1095, 2505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6183)
[0000][PE] mean and std.dev: (1279.25, 824.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 404.357 CPU sec, 22.660 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520326, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (759, 1373, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (1393.53, 844.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1438, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1435.07, 553.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 402.911 CPU sec, 22.542 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520387, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 643, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2703)
[0000][PE] mean and std.dev: (729.28, 588.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1304, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1194.94, 409.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 404.265 CPU sec, 22.640 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520153, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (634, 1211, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4837)
[0000][PE] mean and std.dev: (1391.48, 1129.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1490, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (1482.82, 634.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 403.890 CPU sec, 22.582 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519840, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 811, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4910)
[0000][PE] mean and std.dev: (1080.87, 835.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1213, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (1207.42, 616.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 404.639 CPU sec, 22.694 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519936, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 897, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (1055.59, 831.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (204, 2870, 5101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14895)
[0000][PE] mean and std.dev: (2483.00, 2530.80)
[0000][PE] low and high boundaries for proper pairs: (1, 19792)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1170, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (1265.95, 631.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 405.773 CPU sec, 22.759 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519709, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (554, 929, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3236)
[0000][PE] mean and std.dev: (964.87, 604.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1743, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (1961.48, 1140.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 406.159 CPU sec, 22.759 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519673, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 1557, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7066)
[0000][PE] mean and std.dev: (1515.65, 1473.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1194, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6028)
[0000][PE] mean and std.dev: (1497.56, 883.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 410.371 CPU sec, 22.952 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520332, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 968, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6495)
[0000][PE] mean and std.dev: (1381.18, 1183.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1373, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (1663.65, 910.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 407.224 CPU sec, 22.834 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520186, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 845, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7127)
[0000][PE] mean and std.dev: (1315.88, 1218.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.58, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1810, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5413)
[0000][PE] mean and std.dev: (1660.79, 873.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 407.812 CPU sec, 22.833 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519880, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (628, 924, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1113.64, 875.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1292, 1567, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (1678.00, 861.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 408.453 CPU sec, 22.841 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519634, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 862, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5618)
[0000][PE] mean and std.dev: (1346.81, 1208.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1494, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5040)
[0000][PE] mean and std.dev: (1395.48, 774.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 412.357 CPU sec, 23.144 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520247, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 874, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5108)
[0000][PE] mean and std.dev: (1166.69, 1112.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1246, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (1346.67, 846.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 406.168 CPU sec, 22.740 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520419, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1112, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7020)
[0000][PE] mean and std.dev: (1277.09, 1135.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1384, 1609, 3321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7195)
[0000][PE] mean and std.dev: (1939.06, 833.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 404.408 CPU sec, 22.643 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520412, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 955, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (1189.36, 938.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1129, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3663)
[0000][PE] mean and std.dev: (1240.57, 478.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 404.498 CPU sec, 22.629 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519771, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 746, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (823.86, 583.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1411, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6002)
[0000][PE] mean and std.dev: (1724.86, 1194.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 407.776 CPU sec, 22.825 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520285, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 631, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (744.32, 516.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1734, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (1414.28, 854.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 404.714 CPU sec, 22.627 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519927, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 575, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (986.14, 796.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1144, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4772)
[0000][PE] mean and std.dev: (1415.35, 1040.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 404.698 CPU sec, 22.666 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519956, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 953, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (1197.44, 1004.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1138, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (1161.58, 796.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 408.355 CPU sec, 22.842 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520222, 11, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (607, 1144, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5452)
[0000][PE] mean and std.dev: (1330.70, 895.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.57, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (657, 1849, 3152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8142)
[0000][PE] mean and std.dev: (1901.55, 1386.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10637)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1581, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1590.82, 774.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 406.553 CPU sec, 22.733 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519883, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 926, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (1096.14, 897.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1339, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (1297.26, 812.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 406.995 CPU sec, 22.770 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520154, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 975, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4505)
[0000][PE] mean and std.dev: (990.84, 695.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1380, 1605, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (208, 3138)
[0000][PE] mean and std.dev: (1559.32, 553.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 404.386 CPU sec, 22.630 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519790, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 485, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (888.83, 927.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1219, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (1355.89, 753.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 403.676 CPU sec, 22.591 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520155, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 661, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (789.68, 666.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1593, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4625)
[0000][PE] mean and std.dev: (1541.50, 792.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 406.612 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520340, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (555, 1214, 2765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7185)
[0000][PE] mean and std.dev: (1682.05, 1483.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1396, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5263)
[0000][PE] mean and std.dev: (1831.16, 1197.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 403.045 CPU sec, 22.580 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520507, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 798, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (804.25, 577.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.38, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1374, 1669, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 3276)
[0000][PE] mean and std.dev: (1667.45, 505.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 403.241 CPU sec, 22.552 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519941, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (654, 997, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (862.30, 499.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.87, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1496, 2789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6393)
[0000][PE] mean and std.dev: (1637.91, 984.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 403.771 CPU sec, 22.593 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519945, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 786, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2813)
[0000][PE] mean and std.dev: (820.04, 586.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (512.09, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1543, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5071)
[0000][PE] mean and std.dev: (1755.71, 1260.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 402.560 CPU sec, 22.522 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520436, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 514, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2772)
[0000][PE] mean and std.dev: (666.50, 529.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1463, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (1224.33, 591.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 400.509 CPU sec, 22.417 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520033, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 844, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1281.95, 1140.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.28, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1571, 3692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9428)
[0000][PE] mean and std.dev: (2780.67, 2744.29)
[0000][PE] low and high boundaries for proper pairs: (1, 13758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 403.215 CPU sec, 22.558 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519860, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 915, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4757)
[0000][PE] mean and std.dev: (972.75, 864.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.28, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1648, 2902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6660)
[0000][PE] mean and std.dev: (2004.11, 1346.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 403.782 CPU sec, 22.606 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520415, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 942, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (999.72, 802.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1827, 2192, 4928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11130)
[0000][PE] mean and std.dev: (2941.55, 2109.86)
[0000][PE] low and high boundaries for proper pairs: (1, 14231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 407.193 CPU sec, 22.833 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519834, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 575, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (961.35, 775.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1336, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3544)
[0000][PE] mean and std.dev: (1267.83, 692.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 404.943 CPU sec, 22.662 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519949, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 533, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (849.62, 808.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 2004, 3463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8325)
[0000][PE] mean and std.dev: (2412.18, 1876.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 405.310 CPU sec, 22.678 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520161, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 982, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4495)
[0000][PE] mean and std.dev: (1108.04, 927.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.30, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1374, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6097)
[0000][PE] mean and std.dev: (1658.42, 1102.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 404.690 CPU sec, 22.681 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520042, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (689, 1641, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5816)
[0000][PE] mean and std.dev: (1636.05, 1342.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1767, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (1806.65, 1129.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 406.819 CPU sec, 22.771 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520281, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 869, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (1040.15, 761.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1265, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1343.57, 669.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 406.904 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519990, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (681, 1132, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (1072.35, 750.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1268, 1543, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4766)
[0000][PE] mean and std.dev: (1694.19, 970.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 405.495 CPU sec, 22.719 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520549, 5, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 646, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (833.52, 709.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.32, 120.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1173, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1383.09, 830.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 405.306 CPU sec, 22.670 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520272, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 990, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6006)
[0000][PE] mean and std.dev: (1460.19, 1392.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1375, 1615, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (303, 2983)
[0000][PE] mean and std.dev: (1537.94, 441.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 406.557 CPU sec, 22.724 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520226, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1187, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (1121.15, 912.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.31, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1440, 2270, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4962)
[0000][PE] mean and std.dev: (2134.82, 994.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 407.231 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520323, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 917, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (963.92, 683.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1396, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6001)
[0000][PE] mean and std.dev: (1661.68, 1091.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 402.577 CPU sec, 22.529 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520028, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 645, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6033)
[0000][PE] mean and std.dev: (1286.13, 1262.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.23, 120.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 1709, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1654.50, 846.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 400.786 CPU sec, 22.431 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519947, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (622, 1034, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (1002.54, 532.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1294, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (1424.07, 804.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 401.474 CPU sec, 22.483 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520408, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (559, 1160, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5338)
[0000][PE] mean and std.dev: (1369.30, 1041.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1410, 3005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7367)
[0000][PE] mean and std.dev: (1559.00, 1014.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 411.041 CPU sec, 23.003 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520499, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 957, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1045.23, 811.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1417, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (1503.18, 714.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 403.751 CPU sec, 22.623 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520269, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 496, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (1020.13, 1131.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.87, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1800, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5486)
[0000][PE] mean and std.dev: (1813.86, 1104.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 408.078 CPU sec, 22.852 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520218, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 885, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4693)
[0000][PE] mean and std.dev: (1043.88, 886.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1339, 1538, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (131, 3151)
[0000][PE] mean and std.dev: (1546.29, 524.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 405.069 CPU sec, 22.647 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520370, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1219, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (1237.76, 959.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1550, 2683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6309)
[0000][PE] mean and std.dev: (1940.60, 1291.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 407.464 CPU sec, 22.813 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519870, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 1024, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1102.38, 791.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1595, 2657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5631)
[0000][PE] mean and std.dev: (1757.10, 922.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 405.591 CPU sec, 22.716 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520021, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1328, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5290)
[0000][PE] mean and std.dev: (1365.36, 1144.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1630, 2855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6295)
[0000][PE] mean and std.dev: (2038.38, 1572.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 409.653 CPU sec, 22.920 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520489, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (675, 1083, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6132)
[0000][PE] mean and std.dev: (1426.16, 940.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1504, 1813, 3178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6526)
[0000][PE] mean and std.dev: (2271.82, 1504.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 402.165 CPU sec, 22.488 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520319, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 876, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1013.12, 769.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1396, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5108)
[0000][PE] mean and std.dev: (1530.38, 941.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 407.726 CPU sec, 22.858 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520128, 3, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 890, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1116.57, 940.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1552, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4999)
[0000][PE] mean and std.dev: (1789.94, 1040.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 406.827 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519921, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (569, 1548, 2655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6827)
[0000][PE] mean and std.dev: (1827.00, 1556.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.49, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1883, 3893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9475)
[0000][PE] mean and std.dev: (2457.57, 1906.28)
[0000][PE] low and high boundaries for proper pairs: (1, 12266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 409.832 CPU sec, 23.031 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519825, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (649, 1010, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2902)
[0000][PE] mean and std.dev: (921.31, 522.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1601, 3855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9295)
[0000][PE] mean and std.dev: (2436.06, 1746.64)
[0000][PE] low and high boundaries for proper pairs: (1, 12015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 406.080 CPU sec, 22.727 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520341, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 1123, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4677)
[0000][PE] mean and std.dev: (1152.50, 722.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1966, 2655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6363)
[0000][PE] mean and std.dev: (1797.00, 1166.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 415.268 CPU sec, 23.247 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520056, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 589, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4384)
[0000][PE] mean and std.dev: (909.88, 745.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1253, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5304)
[0000][PE] mean and std.dev: (1649.65, 1186.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 405.297 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519404, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (547, 1124, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1235.82, 1118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1777, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6452)
[0000][PE] mean and std.dev: (2042.13, 1577.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 410.940 CPU sec, 23.016 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520512, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (797, 1245, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (1369.09, 1002.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 2096, 2712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6478)
[0000][PE] mean and std.dev: (2109.69, 1469.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 403.172 CPU sec, 22.562 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520012, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 561, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (886.68, 760.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1558, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1632.08, 706.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 412.898 CPU sec, 23.111 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519951, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (737, 1097, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (1165.96, 779.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1260, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (1318.44, 578.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 411.559 CPU sec, 23.078 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519987, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 900, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4584)
[0000][PE] mean and std.dev: (989.94, 780.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.04, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1303, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (1305.10, 582.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 414.854 CPU sec, 23.241 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520039, 2, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 850, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5346)
[0000][PE] mean and std.dev: (1087.92, 1053.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.04, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1222, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4788)
[0000][PE] mean and std.dev: (1472.10, 1066.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 412.326 CPU sec, 23.102 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519984, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 903, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (864.50, 702.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (878, 4227, 5786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15602)
[0000][PE] mean and std.dev: (3463.30, 2263.67)
[0000][PE] low and high boundaries for proper pairs: (1, 20510)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1293, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3364)
[0000][PE] mean and std.dev: (1285.68, 653.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 409.449 CPU sec, 22.933 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519779, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 616, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (1154.39, 970.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1246, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (1390.73, 819.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 411.554 CPU sec, 23.037 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520061, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 929, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4449)
[0000][PE] mean and std.dev: (1113.48, 951.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1433, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6443)
[0000][PE] mean and std.dev: (1641.00, 1189.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 411.267 CPU sec, 23.035 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520082, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 990, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5513)
[0000][PE] mean and std.dev: (1147.46, 867.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (468, 2342, 3982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11010)
[0000][PE] mean and std.dev: (2187.70, 1814.87)
[0000][PE] low and high boundaries for proper pairs: (1, 14524)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1183, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (1287.86, 529.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 411.581 CPU sec, 23.012 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520022, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 738, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (845.79, 587.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1171, 2540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5602)
[0000][PE] mean and std.dev: (1674.15, 1136.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 413.036 CPU sec, 23.124 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520147, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 492, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2607)
[0000][PE] mean and std.dev: (709.29, 653.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1292, 1832, 4694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11498)
[0000][PE] mean and std.dev: (2620.90, 1872.27)
[0000][PE] low and high boundaries for proper pairs: (1, 14900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 410.635 CPU sec, 22.979 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519899, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 597, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (809.74, 691.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1551, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (1460.79, 545.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 409.414 CPU sec, 22.945 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520652, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (696, 1151, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6888)
[0000][PE] mean and std.dev: (1551.27, 1381.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1379, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (1446.30, 810.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 407.999 CPU sec, 22.852 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519673, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1046, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1231.68, 1131.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1609, 3732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9166)
[0000][PE] mean and std.dev: (2636.80, 2315.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 409.872 CPU sec, 22.913 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519631, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 872, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (1043.17, 877.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.31, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 1084, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3280)
[0000][PE] mean and std.dev: (1037.38, 544.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 409.610 CPU sec, 22.941 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520329, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 736, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4836)
[0000][PE] mean and std.dev: (1026.67, 964.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1280, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (136, 2316)
[0000][PE] mean and std.dev: (1191.25, 276.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 408.792 CPU sec, 22.877 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520028, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 874, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3627)
[0000][PE] mean and std.dev: (944.09, 698.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1400, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1461.46, 734.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 406.415 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520001, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 1063, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5272)
[0000][PE] mean and std.dev: (1286.86, 1160.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 1551, 4023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9619)
[0000][PE] mean and std.dev: (2481.57, 1879.98)
[0000][PE] low and high boundaries for proper pairs: (1, 12417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 407.821 CPU sec, 22.810 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519777, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (515, 876, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (1111.16, 829.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1134, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (1179.58, 635.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 415.071 CPU sec, 23.259 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520048, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 1164, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (1332.47, 1155.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.31, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1900, 2540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5428)
[0000][PE] mean and std.dev: (1862.86, 974.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 410.353 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520147, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 1078, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (923.95, 705.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1947, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6132)
[0000][PE] mean and std.dev: (2171.80, 1554.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 410.044 CPU sec, 22.966 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519808, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (700, 1180, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (1181.18, 598.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.31, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1027, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4333)
[0000][PE] mean and std.dev: (995.21, 587.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 411.667 CPU sec, 23.063 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520118, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 621, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4559)
[0000][PE] mean and std.dev: (1042.33, 993.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 2042, 4111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10159)
[0000][PE] mean and std.dev: (2763.14, 2263.70)
[0000][PE] low and high boundaries for proper pairs: (1, 13183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 410.144 CPU sec, 22.944 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519622, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (717, 1452, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5601)
[0000][PE] mean and std.dev: (1616.03, 1199.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1304, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5499)
[0000][PE] mean and std.dev: (1886.64, 1297.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 411.867 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519801, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 719, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (868.46, 731.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1074, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1278.11, 811.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 407.877 CPU sec, 22.830 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520149, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (804, 1228, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5610)
[0000][PE] mean and std.dev: (1594.74, 1150.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1402, 2429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5283)
[0000][PE] mean and std.dev: (1492.65, 670.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 409.827 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520074, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (725, 1205, 2518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6104)
[0000][PE] mean and std.dev: (1535.04, 1026.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1802, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1502.89, 639.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 408.992 CPU sec, 22.877 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520603, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (543, 1146, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5346)
[0000][PE] mean and std.dev: (1188.83, 947.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.72, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1729, 2818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6410)
[0000][PE] mean and std.dev: (1792.10, 1015.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 411.023 CPU sec, 23.028 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520012, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 920, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5638)
[0000][PE] mean and std.dev: (1337.88, 1213.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.62, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1659, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (1649.68, 929.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 407.713 CPU sec, 22.881 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520102, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 717, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (1082.38, 926.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1527, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (1358.83, 568.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 404.419 CPU sec, 22.625 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520211, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (697, 1256, 2769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6913)
[0000][PE] mean and std.dev: (1665.41, 1538.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1449, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6181)
[0000][PE] mean and std.dev: (1716.10, 1264.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 407.849 CPU sec, 22.801 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520475, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 987, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (1101.65, 897.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1826, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4743)
[0000][PE] mean and std.dev: (1720.59, 836.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 404.713 CPU sec, 22.668 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519836, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 617, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (730.17, 581.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1129, 2465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6095)
[0000][PE] mean and std.dev: (1670.50, 1257.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 409.728 CPU sec, 22.902 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520679, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 677, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (1028.33, 918.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.93, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1351, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3956)
[0000][PE] mean and std.dev: (1428.89, 754.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 404.119 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520121, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 659, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5325)
[0000][PE] mean and std.dev: (1384.50, 1416.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1485, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (1255.25, 350.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 408.473 CPU sec, 22.899 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519840, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 1081, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (1201.39, 901.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.28, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1299, 2573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6143)
[0000][PE] mean and std.dev: (1741.70, 1313.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 408.530 CPU sec, 22.867 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520207, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 482, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (735.76, 627.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1419, 2751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (1708.12, 1053.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 406.729 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520275, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (715, 1738, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6061)
[0000][PE] mean and std.dev: (1732.56, 1277.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1523, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5837)
[0000][PE] mean and std.dev: (1495.05, 943.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 404.333 CPU sec, 22.635 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519793, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (752, 1141, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (1002.50, 579.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1028, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (1148.95, 745.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 405.761 CPU sec, 22.726 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520272, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 611, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2738)
[0000][PE] mean and std.dev: (804.70, 587.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.21, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1190, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5881)
[0000][PE] mean and std.dev: (1612.08, 1157.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 406.427 CPU sec, 22.754 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520443, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 1770, 2607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6817)
[0000][PE] mean and std.dev: (1543.04, 1167.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1605, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7415)
[0000][PE] mean and std.dev: (1791.44, 1344.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 404.175 CPU sec, 22.613 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520102, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 758, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5587)
[0000][PE] mean and std.dev: (1126.83, 1130.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1332, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (1220.00, 614.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 405.348 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520359, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 944, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5455)
[0000][PE] mean and std.dev: (1256.59, 1121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.64, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1325, 1914, 3946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9188)
[0000][PE] mean and std.dev: (2765.42, 2385.18)
[0000][PE] low and high boundaries for proper pairs: (1, 12306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 404.930 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519593, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 799, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (1125.81, 1008.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1843, 3550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8556)
[0000][PE] mean and std.dev: (2491.50, 2022.13)
[0000][PE] low and high boundaries for proper pairs: (1, 11059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 408.706 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519875, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 644, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (732.14, 665.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1365, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5000)
[0000][PE] mean and std.dev: (1397.84, 638.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 404.235 CPU sec, 22.634 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519819, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 833, 2303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6409)
[0000][PE] mean and std.dev: (1077.74, 1068.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1514, 2790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6682)
[0000][PE] mean and std.dev: (1632.94, 1199.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 408.002 CPU sec, 22.844 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520320, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1454, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (1141.03, 817.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1215, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5742)
[0000][PE] mean and std.dev: (1596.45, 1008.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 404.109 CPU sec, 22.675 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520354, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 1132, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5341)
[0000][PE] mean and std.dev: (1103.70, 1067.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1177, 2943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6951)
[0000][PE] mean and std.dev: (1776.32, 1120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 406.319 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519887, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 1115, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (1010.00, 649.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1389, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6793)
[0000][PE] mean and std.dev: (1471.00, 988.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 406.629 CPU sec, 22.737 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520017, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 1445, 3057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8427)
[0000][PE] mean and std.dev: (1966.60, 1836.02)
[0000][PE] low and high boundaries for proper pairs: (1, 11112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1406, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (1570.96, 747.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 404.987 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519784, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (621, 1336, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4890)
[0000][PE] mean and std.dev: (1397.79, 943.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.52, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1301, 2583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6533)
[0000][PE] mean and std.dev: (1649.92, 1494.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 411.713 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519576, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1316, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6443)
[0000][PE] mean and std.dev: (1465.18, 1416.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1243, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (1110.14, 451.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 407.378 CPU sec, 22.806 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520528, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (846, 1244, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5244)
[0000][PE] mean and std.dev: (1469.89, 1159.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1374, 1687, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (1618.19, 664.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 410.102 CPU sec, 22.994 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519804, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 851, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (1096.29, 990.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1535, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (1302.04, 536.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 411.991 CPU sec, 23.098 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520117, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (646, 867, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (1006.37, 618.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1644, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (1494.38, 864.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 405.402 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519815, 10, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 739, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (687.83, 464.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.91, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (662, 1408, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4934)
[0000][PE] mean and std.dev: (1231.56, 790.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6358)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1378, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3987)
[0000][PE] mean and std.dev: (1514.96, 775.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 408.389 CPU sec, 22.873 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520240, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 1548, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6448)
[0000][PE] mean and std.dev: (1652.05, 1224.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1264, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5823)
[0000][PE] mean and std.dev: (1595.44, 1186.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 409.477 CPU sec, 22.972 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519935, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 785, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (1070.91, 874.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.31, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1572, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5459)
[0000][PE] mean and std.dev: (1867.48, 1311.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 406.725 CPU sec, 22.848 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520352, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 937, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (969.46, 758.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.91, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1524, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (1439.19, 681.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 405.200 CPU sec, 22.681 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520506, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (534, 1211, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5499)
[0000][PE] mean and std.dev: (1429.22, 1207.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1645, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5987)
[0000][PE] mean and std.dev: (1709.00, 1445.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 402.447 CPU sec, 22.570 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520176, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 927, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (857.90, 657.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.18, 120.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1152, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5165)
[0000][PE] mean and std.dev: (1416.20, 859.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 405.340 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519963, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (698, 1009, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (1226.45, 815.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1458, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5657)
[0000][PE] mean and std.dev: (1803.91, 1153.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 407.620 CPU sec, 22.785 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520371, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 968, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5079)
[0000][PE] mean and std.dev: (1245.74, 1069.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1374, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1471.45, 808.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 403.545 CPU sec, 22.598 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520220, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1838, 3288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9086)
[0000][PE] mean and std.dev: (2105.86, 1806.37)
[0000][PE] low and high boundaries for proper pairs: (1, 11985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1869, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (1695.74, 1031.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 404.553 CPU sec, 22.619 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519580, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 945, 3901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10879)
[0000][PE] mean and std.dev: (1950.05, 2201.09)
[0000][PE] low and high boundaries for proper pairs: (1, 14368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1364, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (1389.65, 574.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 408.888 CPU sec, 22.911 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520498, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 948, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5438)
[0000][PE] mean and std.dev: (1318.17, 1312.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1571, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4609)
[0000][PE] mean and std.dev: (1560.60, 932.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 407.364 CPU sec, 22.791 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519807, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 793, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4686)
[0000][PE] mean and std.dev: (1016.05, 794.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1168, 1687, 3722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8830)
[0000][PE] mean and std.dev: (2118.14, 1446.13)
[0000][PE] low and high boundaries for proper pairs: (1, 11384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 405.623 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519904, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 832, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7035)
[0000][PE] mean and std.dev: (1447.05, 1492.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1430, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (1460.62, 755.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 409.917 CPU sec, 22.948 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519783, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (764, 1275, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5030)
[0000][PE] mean and std.dev: (1355.70, 952.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1622, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (1628.36, 692.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 407.881 CPU sec, 22.806 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520106, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (657, 1215, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6474)
[0000][PE] mean and std.dev: (1725.70, 1559.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1402, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3844)
[0000][PE] mean and std.dev: (1485.06, 624.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 406.657 CPU sec, 22.779 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520238, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 1238, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (1080.00, 917.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 2145, 4052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10658)
[0000][PE] mean and std.dev: (2164.50, 1650.66)
[0000][PE] low and high boundaries for proper pairs: (1, 13961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 405.177 CPU sec, 22.643 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519596, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 888, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (1119.82, 925.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1163, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2960)
[0000][PE] mean and std.dev: (1245.87, 659.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 406.567 CPU sec, 22.766 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520224, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 1386, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (1139.26, 857.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1393, 1542, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (413, 2863)
[0000][PE] mean and std.dev: (1563.14, 568.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 405.147 CPU sec, 22.646 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520480, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (527, 1251, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5552)
[0000][PE] mean and std.dev: (1343.68, 1073.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1353, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (1345.76, 570.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 405.715 CPU sec, 22.758 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520348, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 506, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6506)
[0000][PE] mean and std.dev: (1000.06, 1137.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.23, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1802, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5658)
[0000][PE] mean and std.dev: (1825.95, 1000.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 403.124 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519768, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 800, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4638)
[0000][PE] mean and std.dev: (1176.94, 1157.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1456, 2809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6747)
[0000][PE] mean and std.dev: (1854.69, 1520.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 403.877 CPU sec, 22.623 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519543, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 601, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (1082.59, 932.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.83, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1657, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5557)
[0000][PE] mean and std.dev: (1596.88, 789.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 407.164 CPU sec, 22.800 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520132, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 729, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (960.32, 733.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1310, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5070)
[0000][PE] mean and std.dev: (1634.91, 1120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 402.095 CPU sec, 22.500 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519705, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 674, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (850.00, 656.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1825, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (1485.00, 667.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 406.335 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520131, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 475, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (777.41, 764.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1386, 2931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6865)
[0000][PE] mean and std.dev: (2190.21, 1916.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 408.227 CPU sec, 22.825 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519781, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 870, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5023)
[0000][PE] mean and std.dev: (1081.50, 991.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1084, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2797)
[0000][PE] mean and std.dev: (1155.53, 561.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 406.372 CPU sec, 22.720 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519846, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 794, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (863.65, 708.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1711, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (1712.13, 842.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 409.457 CPU sec, 22.950 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519973, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (516, 1134, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (1135.62, 765.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1274, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (1315.64, 646.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 404.232 CPU sec, 22.625 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519971, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (828, 1103, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (1062.96, 485.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1623, 2623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5775)
[0000][PE] mean and std.dev: (1799.83, 1138.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 404.532 CPU sec, 22.635 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519625, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 589, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (734.00, 638.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1828, 4122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10424)
[0000][PE] mean and std.dev: (2743.88, 2141.40)
[0000][PE] low and high boundaries for proper pairs: (1, 13575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 404.451 CPU sec, 22.666 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519860, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (780, 1305, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4458)
[0000][PE] mean and std.dev: (1249.36, 717.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1583, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5019)
[0000][PE] mean and std.dev: (1782.50, 926.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 402.921 CPU sec, 22.558 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519968, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (547, 1267, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5449)
[0000][PE] mean and std.dev: (1323.44, 923.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.25, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1603, 2887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6111)
[0000][PE] mean and std.dev: (1873.05, 1202.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 404.855 CPU sec, 22.662 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519983, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1354, 5028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14274)
[0000][PE] mean and std.dev: (2434.29, 2681.29)
[0000][PE] low and high boundaries for proper pairs: (1, 18897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1309, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (1464.28, 704.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 405.668 CPU sec, 22.743 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519844, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (490, 943, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (952.88, 616.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1283, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5871)
[0000][PE] mean and std.dev: (1620.68, 1256.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 404.834 CPU sec, 22.642 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520267, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 1195, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6398)
[0000][PE] mean and std.dev: (1431.44, 1119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1403, 4436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10982)
[0000][PE] mean and std.dev: (2317.74, 1939.25)
[0000][PE] low and high boundaries for proper pairs: (1, 14255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 408.785 CPU sec, 22.893 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520361, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 1024, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (1070.14, 708.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1064, 2986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7260)
[0000][PE] mean and std.dev: (1596.26, 1453.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 405.599 CPU sec, 22.705 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520063, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 1041, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4165)
[0000][PE] mean and std.dev: (1196.14, 960.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 1817, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (1730.83, 886.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 409.273 CPU sec, 22.933 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520483, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (626, 1034, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6317)
[0000][PE] mean and std.dev: (1508.03, 1295.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1665, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (1821.62, 1077.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 400.973 CPU sec, 22.452 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519812, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 1355, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5293)
[0000][PE] mean and std.dev: (1280.72, 914.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (553, 1060, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5725)
[0000][PE] mean and std.dev: (1288.37, 929.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 407.446 CPU sec, 22.827 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520225, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 338, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1881)
[0000][PE] mean and std.dev: (449.29, 317.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1538, 1784, 2740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5144)
[0000][PE] mean and std.dev: (2182.05, 1138.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 402.056 CPU sec, 22.491 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519340, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 939, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (980.05, 752.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 2064, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4919)
[0000][PE] mean and std.dev: (1877.56, 644.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 404.628 CPU sec, 22.657 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520035, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (641, 1008, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4202)
[0000][PE] mean and std.dev: (1223.36, 889.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.91, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1101, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4849)
[0000][PE] mean and std.dev: (1338.55, 830.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 403.476 CPU sec, 22.553 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519533, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 630, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3191)
[0000][PE] mean and std.dev: (701.85, 573.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (127, 2925, 3521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10309)
[0000][PE] mean and std.dev: (2514.50, 2741.16)
[0000][PE] low and high boundaries for proper pairs: (1, 13703)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 2194, 3419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8175)
[0000][PE] mean and std.dev: (2205.26, 1615.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 404.183 CPU sec, 22.624 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519886, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 684, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5453)
[0000][PE] mean and std.dev: (1025.19, 1123.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1180, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4909)
[0000][PE] mean and std.dev: (1400.15, 999.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 407.436 CPU sec, 22.787 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520236, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 1183, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6064)
[0000][PE] mean and std.dev: (1341.40, 1246.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 1228, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4373)
[0000][PE] mean and std.dev: (1116.19, 620.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 403.436 CPU sec, 22.536 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519902, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 1323, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4372)
[0000][PE] mean and std.dev: (1148.65, 667.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1311, 2424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5548)
[0000][PE] mean and std.dev: (1468.39, 892.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 400.201 CPU sec, 22.364 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520547, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 817, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (834.19, 483.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1130, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (1108.62, 422.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 399.171 CPU sec, 22.408 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520229, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (474, 731, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (774.14, 377.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1163, 3025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7173)
[0000][PE] mean and std.dev: (1954.85, 1696.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 401.187 CPU sec, 22.443 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519901, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 751, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (1086.00, 1048.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1198, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5162)
[0000][PE] mean and std.dev: (1644.50, 1283.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 404.295 CPU sec, 22.628 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519811, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 1005, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8301)
[0000][PE] mean and std.dev: (1643.45, 1698.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.72, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1385, 2831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7167)
[0000][PE] mean and std.dev: (1812.90, 1584.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 404.532 CPU sec, 22.626 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519999, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (724, 976, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4597)
[0000][PE] mean and std.dev: (1136.57, 833.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1245, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (1263.35, 843.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 406.566 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519932, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1085, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (1179.45, 1050.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1200, 3119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7647)
[0000][PE] mean and std.dev: (1748.22, 1274.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 401.561 CPU sec, 22.491 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520222, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (537, 690, 2262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (1543.27, 1733.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 1673, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5582)
[0000][PE] mean and std.dev: (1803.00, 1034.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 403.822 CPU sec, 22.589 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520323, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 549, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6597)
[0000][PE] mean and std.dev: (1172.73, 1087.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1391, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (1364.36, 635.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 403.342 CPU sec, 22.603 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519892, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 674, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (889.38, 772.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1515, 3465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7979)
[0000][PE] mean and std.dev: (2199.69, 1896.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 403.362 CPU sec, 22.589 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520133, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1073, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (1081.41, 753.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1228, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (1166.78, 717.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 400.982 CPU sec, 22.477 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520108, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 554, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4753)
[0000][PE] mean and std.dev: (895.17, 794.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1325, 3602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9000)
[0000][PE] mean and std.dev: (2357.13, 2242.04)
[0000][PE] low and high boundaries for proper pairs: (1, 11699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 404.918 CPU sec, 22.746 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520469, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (594, 1093, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6087)
[0000][PE] mean and std.dev: (1591.75, 1368.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1320, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (1221.00, 791.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 401.721 CPU sec, 22.476 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520106, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 931, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4669)
[0000][PE] mean and std.dev: (1143.29, 1103.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1675, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5440)
[0000][PE] mean and std.dev: (2025.59, 1224.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 402.149 CPU sec, 22.490 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520406, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 719, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5644)
[0000][PE] mean and std.dev: (1263.96, 1223.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1507, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3282)
[0000][PE] mean and std.dev: (1360.75, 545.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 401.069 CPU sec, 22.443 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520079, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 763, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5276)
[0000][PE] mean and std.dev: (1071.61, 976.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1023, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (1190.73, 615.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 402.380 CPU sec, 22.524 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520089, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 943, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (997.81, 712.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1616, 2934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6812)
[0000][PE] mean and std.dev: (1900.24, 1457.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 405.128 CPU sec, 22.712 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519815, 8, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 516, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (910.76, 912.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1167, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5365)
[0000][PE] mean and std.dev: (1473.19, 899.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 404.378 CPU sec, 22.662 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520089, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (546, 1025, 2937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7719)
[0000][PE] mean and std.dev: (1808.48, 1883.49)
[0000][PE] low and high boundaries for proper pairs: (1, 10110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1546, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6343)
[0000][PE] mean and std.dev: (1999.05, 1436.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 404.905 CPU sec, 22.680 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520084, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 1010, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5560)
[0000][PE] mean and std.dev: (1260.22, 1125.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1495, 2523, 3874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8632)
[0000][PE] mean and std.dev: (2427.55, 1424.16)
[0000][PE] low and high boundaries for proper pairs: (1, 11011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 405.233 CPU sec, 22.680 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520180, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 749, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4809)
[0000][PE] mean and std.dev: (1274.64, 1177.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1636, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5416)
[0000][PE] mean and std.dev: (1624.40, 1146.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 402.965 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519684, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 999, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5613)
[0000][PE] mean and std.dev: (1477.11, 1470.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (473, 1047, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (995.38, 577.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 406.544 CPU sec, 22.745 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520065, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 810, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (995.19, 864.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1651, 3383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7961)
[0000][PE] mean and std.dev: (2015.55, 1524.03)
[0000][PE] low and high boundaries for proper pairs: (1, 10250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 402.802 CPU sec, 22.512 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520070, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (819, 979, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2595)
[0000][PE] mean and std.dev: (980.67, 564.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1611, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1465.92, 649.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 403.753 CPU sec, 22.613 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520115, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (657, 900, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1363.35, 1168.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1766, 2796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6086)
[0000][PE] mean and std.dev: (1973.88, 1034.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 403.055 CPU sec, 22.577 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520570, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (517, 770, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6268)
[0000][PE] mean and std.dev: (1314.94, 1051.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1089, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (1358.87, 842.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 401.083 CPU sec, 22.463 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519796, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 920, 3546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9904)
[0000][PE] mean and std.dev: (2416.38, 2805.68)
[0000][PE] low and high boundaries for proper pairs: (1, 13639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1016, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (1114.59, 692.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 400.675 CPU sec, 22.503 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519987, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 903, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (900.92, 703.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1260, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (1363.52, 797.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 403.441 CPU sec, 22.580 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520085, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1201, 1788, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5848)
[0000][PE] mean and std.dev: (1762.69, 1132.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.83, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1259, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (1241.26, 640.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 401.244 CPU sec, 22.487 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520038, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 953, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (771.86, 557.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1670, 3109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6999)
[0000][PE] mean and std.dev: (1944.88, 1161.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 401.598 CPU sec, 22.472 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519857, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 1388, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5246)
[0000][PE] mean and std.dev: (1420.86, 1062.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 2077, 3822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8982)
[0000][PE] mean and std.dev: (2437.58, 1336.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 403.677 CPU sec, 22.581 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520139, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (522, 1105, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5967)
[0000][PE] mean and std.dev: (1380.78, 1256.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.24, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 1307, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (1126.79, 703.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 400.621 CPU sec, 22.469 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520322, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 991, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6087)
[0000][PE] mean and std.dev: (1104.40, 909.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1572, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1654.96, 956.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 403.558 CPU sec, 22.603 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519647, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 891, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2819)
[0000][PE] mean and std.dev: (852.97, 645.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.35, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1515, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (1718.33, 892.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 402.748 CPU sec, 22.592 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520105, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (678, 1268, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4635)
[0000][PE] mean and std.dev: (1386.88, 899.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1438, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (1401.54, 557.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 406.340 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520448, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 1162, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5981)
[0000][PE] mean and std.dev: (1266.29, 979.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.69, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1896, 3102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7010)
[0000][PE] mean and std.dev: (2057.11, 1261.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 401.644 CPU sec, 22.499 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519729, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (580, 1023, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1096.00, 713.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1546, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1546.35, 850.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 406.585 CPU sec, 22.785 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520243, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (574, 1189, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (1027.78, 623.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1286, 2943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6903)
[0000][PE] mean and std.dev: (1596.53, 1379.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 399.855 CPU sec, 22.376 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519547, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 696, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3497)
[0000][PE] mean and std.dev: (889.33, 680.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1506, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1540.53, 868.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 401.186 CPU sec, 22.458 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519442, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1208, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5313)
[0000][PE] mean and std.dev: (1342.32, 1049.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.31, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1231, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5081)
[0000][PE] mean and std.dev: (1595.50, 876.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 407.410 CPU sec, 22.808 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519447, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 724, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5251)
[0000][PE] mean and std.dev: (1076.81, 955.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1438, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (1534.54, 876.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 404.577 CPU sec, 22.649 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520032, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 942, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (936.67, 774.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1277, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (1194.90, 536.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 401.684 CPU sec, 22.507 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519808, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 633, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (753.71, 657.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1372, 3662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8986)
[0000][PE] mean and std.dev: (2176.05, 1961.89)
[0000][PE] low and high boundaries for proper pairs: (1, 11648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 402.973 CPU sec, 22.563 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520022, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 874, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4929)
[0000][PE] mean and std.dev: (1151.64, 1007.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1074, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (1496.52, 1097.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 402.628 CPU sec, 22.529 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520248, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 650, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (642.48, 463.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1150, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4854)
[0000][PE] mean and std.dev: (1534.33, 993.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 403.791 CPU sec, 22.633 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520133, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 998, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (1031.60, 721.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.29, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1466, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (1698.40, 821.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 404.239 CPU sec, 22.611 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519695, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 809, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6539)
[0000][PE] mean and std.dev: (1403.68, 1509.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1655, 2061, 2670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (1764.71, 745.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 401.645 CPU sec, 22.490 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520367, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (669, 972, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5433)
[0000][PE] mean and std.dev: (1326.37, 813.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1301, 1742, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (1609.25, 523.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 401.299 CPU sec, 22.451 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519645, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1301, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1171.90, 1019.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 892, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (962.50, 492.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 408.187 CPU sec, 22.825 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520081, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (673, 1379, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6124)
[0000][PE] mean and std.dev: (1670.35, 1358.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1459, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (1702.65, 836.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 407.128 CPU sec, 22.785 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520088, 7, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (441, 1136, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (1231.61, 1084.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1733, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1715.72, 893.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 401.272 CPU sec, 22.437 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520337, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 1034, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (1227.96, 1062.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1222, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (1279.14, 661.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 408.849 CPU sec, 22.910 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520474, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (598, 980, 3997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10795)
[0000][PE] mean and std.dev: (2234.91, 2338.89)
[0000][PE] low and high boundaries for proper pairs: (1, 14194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 405.798 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519658, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 1215, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6043)
[0000][PE] mean and std.dev: (1444.62, 1385.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1090, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (1158.15, 637.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 405.806 CPU sec, 22.693 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519689, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 434, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (824.43, 638.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.21, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1367, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (1532.24, 852.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 403.933 CPU sec, 22.604 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519801, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 719, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (806.21, 619.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1466, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4490)
[0000][PE] mean and std.dev: (1517.73, 778.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 404.028 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520081, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 389, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (985.25, 861.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1364, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5439)
[0000][PE] mean and std.dev: (1415.50, 755.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 403.602 CPU sec, 22.623 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519733, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1037, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (1106.67, 889.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1071, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (1108.94, 724.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 405.448 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520113, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 727, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4223)
[0000][PE] mean and std.dev: (1028.55, 1047.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 1641, 3092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6864)
[0000][PE] mean and std.dev: (1845.94, 1297.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 402.857 CPU sec, 22.577 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519731, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (606, 1088, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (1021.90, 525.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1285, 1779, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4015)
[0000][PE] mean and std.dev: (1662.38, 863.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 417.230 CPU sec, 23.399 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519962, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 978, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7261)
[0000][PE] mean and std.dev: (1808.09, 1970.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1474, 3515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8373)
[0000][PE] mean and std.dev: (2063.00, 1562.24)
[0000][PE] low and high boundaries for proper pairs: (1, 10802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 409.980 CPU sec, 22.919 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519304, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (648, 1247, 3142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8130)
[0000][PE] mean and std.dev: (1683.94, 1182.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1018, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (1018.31, 417.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 402.202 CPU sec, 22.503 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520059, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 1076, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5783)
[0000][PE] mean and std.dev: (1266.16, 1227.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 409.353 CPU sec, 22.943 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520233, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 644, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2350)
[0000][PE] mean and std.dev: (752.32, 546.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.15, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1114, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (1310.94, 704.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 401.611 CPU sec, 22.470 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520674, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 785, 3085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8521)
[0000][PE] mean and std.dev: (1513.95, 1806.58)
[0000][PE] low and high boundaries for proper pairs: (1, 11239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1369, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6435)
[0000][PE] mean and std.dev: (1722.46, 1286.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 401.156 CPU sec, 22.445 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520014, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (710, 949, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (1076.12, 723.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.49, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1629, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (1543.75, 775.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 407.317 CPU sec, 22.782 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520302, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 849, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4486)
[0000][PE] mean and std.dev: (996.80, 702.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.71, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1309, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (1242.13, 743.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 400.343 CPU sec, 22.496 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520099, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 727, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (805.08, 621.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.48, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1549, 2521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5585)
[0000][PE] mean and std.dev: (1497.92, 871.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 404.808 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520057, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 611, 2945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8197)
[0000][PE] mean and std.dev: (1513.23, 1615.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1034, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (1190.00, 767.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 400.462 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520253, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 901, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4627)
[0000][PE] mean and std.dev: (988.35, 888.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1616, 3637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8589)
[0000][PE] mean and std.dev: (2154.19, 1901.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 402.764 CPU sec, 22.545 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519711, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 1315, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (1120.92, 831.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.10, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 1492, 2932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7378)
[0000][PE] mean and std.dev: (2063.77, 1768.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 403.360 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520047, 11, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (613, 1387, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (1499.79, 1001.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1355, 2952, 6157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15761)
[0000][PE] mean and std.dev: (3585.55, 3222.69)
[0000][PE] low and high boundaries for proper pairs: (1, 20563)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1634, 3129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6923)
[0000][PE] mean and std.dev: (2109.07, 1452.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 400.831 CPU sec, 22.429 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519677, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 455, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3302)
[0000][PE] mean and std.dev: (611.43, 491.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1356, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (1582.73, 772.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 399.140 CPU sec, 22.353 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520204, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 908, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (1075.40, 882.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1668, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6115)
[0000][PE] mean and std.dev: (1781.00, 1127.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 398.945 CPU sec, 22.367 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520046, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 1169, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1140.50, 1174.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1267, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (1330.71, 542.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 401.699 CPU sec, 22.452 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520245, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (610, 853, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (1029.10, 737.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1402, 2424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5126)
[0000][PE] mean and std.dev: (1586.32, 792.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 402.269 CPU sec, 22.506 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 519721, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 1046, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (1063.70, 795.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.28, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1322, 2915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6579)
[0000][PE] mean and std.dev: (1902.24, 1440.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 404.112 CPU sec, 22.624 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520282, 10, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 882, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5220)
[0000][PE] mean and std.dev: (1079.96, 1013.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (69, 934, 3595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10647)
[0000][PE] mean and std.dev: (1655.00, 1934.49)
[0000][PE] low and high boundaries for proper pairs: (1, 14173)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1530, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (1506.61, 703.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 398.930 CPU sec, 22.304 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520147, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 589, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4329)
[0000][PE] mean and std.dev: (919.56, 741.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1302, 1580, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (28, 3213)
[0000][PE] mean and std.dev: (1525.84, 592.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 400.941 CPU sec, 22.460 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519731, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (871, 1158, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6088)
[0000][PE] mean and std.dev: (1654.35, 1270.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1408, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (1494.18, 1003.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 405.815 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520464, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 935, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (922.29, 804.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1632, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6410)
[0000][PE] mean and std.dev: (1949.55, 1444.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 401.122 CPU sec, 22.491 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519993, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1017, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1191.58, 889.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 1770, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5175)
[0000][PE] mean and std.dev: (1804.84, 771.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 404.226 CPU sec, 22.634 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520635, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 679, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (943.34, 743.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1335, 2734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6696)
[0000][PE] mean and std.dev: (1548.17, 971.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 403.302 CPU sec, 22.547 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520137, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (517, 787, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3046)
[0000][PE] mean and std.dev: (901.03, 631.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1444, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5069)
[0000][PE] mean and std.dev: (1469.83, 800.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 406.455 CPU sec, 22.779 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520222, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 296, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (340.47, 264.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.53, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 2308, 3267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7741)
[0000][PE] mean and std.dev: (2088.53, 1273.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 404.751 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520207, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (715, 970, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (1043.10, 705.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1154, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1150.29, 622.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 405.159 CPU sec, 22.672 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520066, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1001, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3719)
[0000][PE] mean and std.dev: (1076.46, 815.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1755, 4363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11431)
[0000][PE] mean and std.dev: (2352.06, 1726.58)
[0000][PE] low and high boundaries for proper pairs: (1, 14965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 401.649 CPU sec, 22.475 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519884, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 1056, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5137)
[0000][PE] mean and std.dev: (1194.50, 1127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1545, 3015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6773)
[0000][PE] mean and std.dev: (1942.19, 1167.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 408.201 CPU sec, 22.904 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519945, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 960, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (1037.25, 747.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1155, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1192.00, 570.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 411.520 CPU sec, 23.026 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520140, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 691, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1161.52, 1138.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (591, 1332, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (1373.35, 773.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 406.281 CPU sec, 22.886 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520471, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (535, 941, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (1148.74, 899.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.48, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1718, 2670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5996)
[0000][PE] mean and std.dev: (1877.20, 1106.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 405.733 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519799, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (547, 1313, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (1259.50, 867.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1359, 1600, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5730)
[0000][PE] mean and std.dev: (1931.93, 1055.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 401.205 CPU sec, 22.476 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520184, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 570, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4461)
[0000][PE] mean and std.dev: (929.00, 939.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1592, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (1695.71, 812.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 402.027 CPU sec, 22.474 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520771, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1140, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5074)
[0000][PE] mean and std.dev: (1357.08, 1200.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1353, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (1348.24, 685.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 401.245 CPU sec, 22.455 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520480, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 561, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1968)
[0000][PE] mean and std.dev: (557.25, 407.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 992, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (1107.06, 578.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 402.535 CPU sec, 22.557 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519598, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 984, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5404)
[0000][PE] mean and std.dev: (1320.56, 1067.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1511, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (1509.77, 791.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 407.633 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520142, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (507, 1294, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1372.35, 1135.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1126, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (1356.41, 713.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 401.967 CPU sec, 22.512 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520390, 6, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (802, 1067, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (1137.37, 715.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1437, 2939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6785)
[0000][PE] mean and std.dev: (1952.85, 1508.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 403.449 CPU sec, 22.566 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519463, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 700, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (1167.28, 1377.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1174, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4874)
[0000][PE] mean and std.dev: (1301.45, 780.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 401.296 CPU sec, 22.450 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520428, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 866, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (953.13, 741.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1108, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (1308.88, 707.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 401.549 CPU sec, 22.470 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520174, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 666, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (718.25, 546.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 2333, 3604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8346)
[0000][PE] mean and std.dev: (2467.00, 1502.03)
[0000][PE] low and high boundaries for proper pairs: (1, 10717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 403.581 CPU sec, 22.564 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519913, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 998, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (904.43, 684.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1372, 2133, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5212)
[0000][PE] mean and std.dev: (2040.50, 1083.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 400.779 CPU sec, 22.413 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520253, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 773, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (894.81, 832.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.33, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1472, 4256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11178)
[0000][PE] mean and std.dev: (2369.19, 2002.41)
[0000][PE] low and high boundaries for proper pairs: (1, 14639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 400.931 CPU sec, 22.455 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519405, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 830, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (845.38, 627.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.35, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 402.443 CPU sec, 22.503 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520350, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 628, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (701.91, 546.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.76, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1244, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (1275.50, 556.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 401.042 CPU sec, 22.470 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519986, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (761, 1312, 2977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7409)
[0000][PE] mean and std.dev: (1867.46, 1652.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.99, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1417, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1446.56, 717.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 400.698 CPU sec, 22.451 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519802, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1033, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5424)
[0000][PE] mean and std.dev: (1293.30, 1035.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1378, 1748, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6574)
[0000][PE] mean and std.dev: (2271.89, 1572.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 403.011 CPU sec, 22.603 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520357, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 1030, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (1025.81, 781.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1107, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5385)
[0000][PE] mean and std.dev: (1568.26, 1065.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 403.279 CPU sec, 22.566 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519861, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (672, 1177, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3246)
[0000][PE] mean and std.dev: (1084.61, 684.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1536, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (1511.13, 754.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 402.337 CPU sec, 22.524 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519855, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 661, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (1021.93, 992.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1544, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5680)
[0000][PE] mean and std.dev: (1649.58, 1168.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 404.969 CPU sec, 22.685 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520057, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1013, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (1120.50, 1040.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1327, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (1433.94, 711.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 404.630 CPU sec, 22.661 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520091, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1021, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5070)
[0000][PE] mean and std.dev: (1237.41, 1043.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1740, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6974)
[0000][PE] mean and std.dev: (2059.85, 1546.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 400.744 CPU sec, 22.443 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520049, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (856, 1255, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4825)
[0000][PE] mean and std.dev: (1288.19, 663.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.52, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1325, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (1302.95, 433.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 401.249 CPU sec, 22.484 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520038, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1125, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1377.37, 1219.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1660, 3850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9000)
[0000][PE] mean and std.dev: (2495.33, 1861.70)
[0000][PE] low and high boundaries for proper pairs: (1, 11575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 404.583 CPU sec, 22.660 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519623, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 1041, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6003)
[0000][PE] mean and std.dev: (1373.54, 1331.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.27, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1631, 2947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6729)
[0000][PE] mean and std.dev: (1937.41, 1112.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 402.827 CPU sec, 22.548 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520234, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1073, 1295, 3026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6932)
[0000][PE] mean and std.dev: (2027.40, 1610.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1345, 2004, 2747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5551)
[0000][PE] mean and std.dev: (2087.64, 1103.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 402.584 CPU sec, 22.543 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519817, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 850, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (780.84, 605.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1511, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4642)
[0000][PE] mean and std.dev: (1641.59, 895.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 400.929 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519682, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 722, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (765.94, 596.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1761, 3082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7146)
[0000][PE] mean and std.dev: (2068.25, 1605.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 407.006 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520310, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 605, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5877)
[0000][PE] mean and std.dev: (1151.63, 1270.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.80, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1640, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1770.52, 991.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 399.007 CPU sec, 22.330 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519906, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 763, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4492)
[0000][PE] mean and std.dev: (824.29, 685.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1242, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3986)
[0000][PE] mean and std.dev: (1082.75, 558.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 406.622 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520222, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 751, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (762.48, 510.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1247, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (1326.44, 670.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 404.009 CPU sec, 22.625 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 519632, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 998, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1000.73, 844.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1390, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (1400.82, 494.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 403.227 CPU sec, 22.602 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519970, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 1035, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (961.36, 671.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1178, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (1234.29, 472.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 402.219 CPU sec, 22.528 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519902, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (438, 1391, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6588)
[0000][PE] mean and std.dev: (1738.68, 1644.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1622, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5072)
[0000][PE] mean and std.dev: (1801.05, 1126.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 411.512 CPU sec, 23.108 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520034, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 735, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (846.79, 707.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1351, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6029)
[0000][PE] mean and std.dev: (1619.57, 1097.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 398.315 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520392, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 1272, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (1048.23, 738.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1474, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1711.43, 1046.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 406.858 CPU sec, 22.812 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520299, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 788, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (1050.56, 997.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1342, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (1589.50, 951.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 410.877 CPU sec, 23.029 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520191, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 665, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (697.65, 570.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.21, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1271, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1340.85, 879.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 405.241 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519701, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 573, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (837.22, 722.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1702, 2904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6448)
[0000][PE] mean and std.dev: (1970.67, 1089.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 404.118 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520200, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 901, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6065)
[0000][PE] mean and std.dev: (1491.34, 1497.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.21, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1555, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5353)
[0000][PE] mean and std.dev: (1629.88, 1112.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 407.871 CPU sec, 22.814 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519577, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (752, 1062, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (1303.08, 922.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1430, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (1526.29, 810.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 407.592 CPU sec, 22.825 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 520107, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (512, 1022, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (1211.60, 929.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 2096, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5651)
[0000][PE] mean and std.dev: (2147.79, 1485.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 410.059 CPU sec, 23.025 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520020, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (512, 773, 2941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7799)
[0000][PE] mean and std.dev: (1535.74, 1660.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1367, 2419, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5351)
[0000][PE] mean and std.dev: (2079.64, 1016.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 401.110 CPU sec, 22.453 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520163, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 865, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (977.96, 575.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1324, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3672)
[0000][PE] mean and std.dev: (1194.11, 727.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 407.096 CPU sec, 22.781 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520382, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 688, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (888.12, 610.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.76, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1330, 2954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6736)
[0000][PE] mean and std.dev: (1824.19, 1253.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 404.160 CPU sec, 22.685 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519565, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 944, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7759)
[0000][PE] mean and std.dev: (1565.09, 1566.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.87, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1248, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (1409.53, 661.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 409.953 CPU sec, 22.996 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520451, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (677, 1176, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5342)
[0000][PE] mean and std.dev: (1401.77, 1173.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.27, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1599, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1149.92, 555.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 403.910 CPU sec, 22.636 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520290, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (813, 1037, 2708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6498)
[0000][PE] mean and std.dev: (1655.22, 1190.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1451, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (1598.67, 774.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 404.595 CPU sec, 22.673 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520021, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 590, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (757.74, 659.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (571, 1194, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4342)
[0000][PE] mean and std.dev: (1236.00, 767.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 405.726 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520073, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 528, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4677)
[0000][PE] mean and std.dev: (974.84, 973.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1322, 1858, 3111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6689)
[0000][PE] mean and std.dev: (2282.39, 1506.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 406.598 CPU sec, 22.772 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520175, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (714, 1125, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5940)
[0000][PE] mean and std.dev: (1577.39, 1356.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1157, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (1254.20, 685.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 409.589 CPU sec, 22.913 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520530, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (653, 1355, 3074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7916)
[0000][PE] mean and std.dev: (1742.07, 1423.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1859, 3346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7820)
[0000][PE] mean and std.dev: (2426.53, 1864.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 407.513 CPU sec, 22.814 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519757, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 968, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5888)
[0000][PE] mean and std.dev: (1276.78, 1272.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1332, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1269.36, 840.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 411.447 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520191, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 949, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (1250.64, 1115.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1530, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (1429.50, 579.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 406.524 CPU sec, 22.795 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520170, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 778, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (984.12, 716.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1491, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6002)
[0000][PE] mean and std.dev: (1890.61, 1439.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 410.385 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520107, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 868, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1067.00, 1057.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1555, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (1521.83, 887.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 406.928 CPU sec, 22.771 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520066, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 524, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (896.70, 854.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1373, 1713, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5348)
[0000][PE] mean and std.dev: (1688.33, 755.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 404.276 CPU sec, 22.626 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519316, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (552, 1120, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5511)
[0000][PE] mean and std.dev: (1270.79, 1020.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1293, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5346)
[0000][PE] mean and std.dev: (1755.79, 1331.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 411.888 CPU sec, 23.055 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520149, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 1044, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5738)
[0000][PE] mean and std.dev: (1220.94, 848.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (564, 1995, 4107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11193)
[0000][PE] mean and std.dev: (2510.10, 2247.08)
[0000][PE] low and high boundaries for proper pairs: (1, 14736)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1258, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (1216.00, 573.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 406.030 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520081, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 510, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2512)
[0000][PE] mean and std.dev: (752.32, 643.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1402, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (1479.80, 867.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 402.764 CPU sec, 22.551 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520374, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 958, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (1033.42, 744.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1502, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (1367.10, 827.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 405.822 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519755, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 769, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (913.81, 640.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1290, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (1225.46, 428.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 412.608 CPU sec, 23.092 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520288, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 918, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6639)
[0000][PE] mean and std.dev: (1444.27, 1583.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1361, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4583)
[0000][PE] mean and std.dev: (1244.91, 617.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 407.587 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520132, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1185, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (1182.96, 966.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.91, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1354, 2708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6034)
[0000][PE] mean and std.dev: (1754.00, 1178.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 410.203 CPU sec, 22.944 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519847, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 902, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7178)
[0000][PE] mean and std.dev: (1397.27, 1749.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.77, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1238, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6370)
[0000][PE] mean and std.dev: (1517.41, 1063.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 407.953 CPU sec, 22.857 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519965, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 963, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (1055.96, 833.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (612, 1134, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5619)
[0000][PE] mean and std.dev: (1399.45, 1002.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 407.490 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520504, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 790, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3147)
[0000][PE] mean and std.dev: (857.73, 688.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.20, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1477, 4875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12415)
[0000][PE] mean and std.dev: (2364.31, 2041.47)
[0000][PE] low and high boundaries for proper pairs: (1, 16185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 406.444 CPU sec, 22.724 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520305, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 878, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5099)
[0000][PE] mean and std.dev: (1239.44, 1087.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1471, 3376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7884)
[0000][PE] mean and std.dev: (2122.30, 1674.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 405.518 CPU sec, 22.707 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520281, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 1246, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4082)
[0000][PE] mean and std.dev: (1102.38, 735.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1279, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (1273.30, 813.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 409.695 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520435, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 542, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (949.45, 788.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1529, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5783)
[0000][PE] mean and std.dev: (1807.69, 1062.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 407.959 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 519763, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 522, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4980)
[0000][PE] mean and std.dev: (883.49, 885.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1768, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5591)
[0000][PE] mean and std.dev: (1874.83, 1180.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 410.202 CPU sec, 23.043 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520136, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 772, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (902.85, 971.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1416, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1750.45, 1059.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 409.105 CPU sec, 22.900 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519902, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 731, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (926.67, 783.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.49, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1430, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (1321.56, 805.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 411.998 CPU sec, 23.085 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519802, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 957, 2639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7119)
[0000][PE] mean and std.dev: (1582.91, 1654.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1938, 2955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6577)
[0000][PE] mean and std.dev: (1866.52, 1093.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 411.504 CPU sec, 23.010 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520378, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 863, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3522)
[0000][PE] mean and std.dev: (1047.82, 826.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1527, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (1524.38, 698.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 406.330 CPU sec, 22.771 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519552, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 916, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (948.27, 753.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1521, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (1370.17, 522.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 408.716 CPU sec, 22.892 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519899, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (651, 1222, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5397)
[0000][PE] mean and std.dev: (1266.68, 1055.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1275, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3810)
[0000][PE] mean and std.dev: (1395.68, 875.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 409.213 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520521, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (515, 918, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3653)
[0000][PE] mean and std.dev: (973.32, 744.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1437, 2578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5408)
[0000][PE] mean and std.dev: (1337.50, 628.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 407.552 CPU sec, 22.830 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519513, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 709, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (858.40, 717.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1444, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1365.54, 786.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 410.963 CPU sec, 23.149 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520361, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 753, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (932.41, 744.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1210, 3103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7239)
[0000][PE] mean and std.dev: (2300.90, 1824.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 407.234 CPU sec, 22.843 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520079, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 675, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (897.87, 864.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.35, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1246, 2626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6244)
[0000][PE] mean and std.dev: (1568.73, 1184.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 404.725 CPU sec, 22.661 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520195, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 1222, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5779)
[0000][PE] mean and std.dev: (1366.42, 1108.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (512.11, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1357, 1523, 2886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5944)
[0000][PE] mean and std.dev: (1767.94, 905.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 404.945 CPU sec, 22.660 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520029, 10, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 704, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4573)
[0000][PE] mean and std.dev: (1055.74, 946.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.58, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 816, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (630.00, 540.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1171, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4202)
[0000][PE] mean and std.dev: (1343.37, 850.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 404.671 CPU sec, 22.636 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519932, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (846, 1177, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (1221.05, 853.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1830, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6356)
[0000][PE] mean and std.dev: (1890.94, 1424.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 406.200 CPU sec, 22.760 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520418, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1100, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (1162.88, 842.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1687, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4822)
[0000][PE] mean and std.dev: (1535.81, 834.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 405.569 CPU sec, 22.746 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520178, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 880, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (867.06, 671.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1494, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (1420.87, 801.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 403.242 CPU sec, 22.564 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520165, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (642, 900, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3252)
[0000][PE] mean and std.dev: (1012.86, 646.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1544, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (1732.79, 967.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 404.649 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520117, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1065, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5290)
[0000][PE] mean and std.dev: (1132.07, 1011.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.97, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1320, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (1171.00, 605.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 405.548 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520035, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1214, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5117)
[0000][PE] mean and std.dev: (1110.26, 807.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1393, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (1262.89, 490.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 405.775 CPU sec, 22.716 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520243, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 896, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6112)
[0000][PE] mean and std.dev: (1300.92, 1213.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1186, 3010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6938)
[0000][PE] mean and std.dev: (2049.75, 1810.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 405.151 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520249, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 860, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (933.79, 660.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 1128, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (1098.08, 642.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 404.914 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520136, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 959, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4594)
[0000][PE] mean and std.dev: (1135.38, 934.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1959, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4902)
[0000][PE] mean and std.dev: (1863.73, 882.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 402.595 CPU sec, 22.513 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520192, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (575, 987, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5540)
[0000][PE] mean and std.dev: (1306.73, 1070.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1954, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4637)
[0000][PE] mean and std.dev: (1619.86, 663.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 405.280 CPU sec, 22.685 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519876, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 496, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2957)
[0000][PE] mean and std.dev: (728.55, 661.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 965, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (1111.04, 652.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 407.613 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520195, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 448, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (1037.52, 1105.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1384, 1969, 4142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9658)
[0000][PE] mean and std.dev: (2733.15, 2204.22)
[0000][PE] low and high boundaries for proper pairs: (1, 12416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 402.098 CPU sec, 22.575 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520183, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 990, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (1142.81, 877.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 2210, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5253)
[0000][PE] mean and std.dev: (1750.72, 983.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 401.646 CPU sec, 22.504 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520051, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 835, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (1187.65, 1076.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1199, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5564)
[0000][PE] mean and std.dev: (1668.32, 935.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 401.546 CPU sec, 22.457 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519897, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1014, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (970.96, 698.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.27, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1220, 1477, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1632.47, 671.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 403.922 CPU sec, 22.606 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519913, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 899, 3002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8290)
[0000][PE] mean and std.dev: (1573.84, 1690.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.88, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1461, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (1464.05, 806.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 404.511 CPU sec, 22.647 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519860, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 820, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3572)
[0000][PE] mean and std.dev: (822.07, 537.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.95, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1352, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3713)
[0000][PE] mean and std.dev: (1497.78, 750.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 409.082 CPU sec, 22.953 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205388
	[0000][ M::kt_pipeline] read 1205388 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520340, 10, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (753, 1415, 3544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9126)
[0000][PE] mean and std.dev: (2185.67, 2131.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (484, 912, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7069)
[0000][PE] mean and std.dev: (1977.40, 2214.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10834)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1317, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (1299.04, 651.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 405.054 CPU sec, 22.683 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519930, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (526, 1104, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4957)
[0000][PE] mean and std.dev: (1404.26, 1174.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.73, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1196, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5946)
[0000][PE] mean and std.dev: (1657.22, 1163.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205388 reads in 405.412 CPU sec, 22.709 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520040, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 819, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (1196.35, 1000.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.48, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1572, 2056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4026)
[0000][PE] mean and std.dev: (1595.83, 704.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 405.337 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520463, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (523, 1240, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (1321.11, 1011.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1582, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5412)
[0000][PE] mean and std.dev: (1593.41, 1084.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 401.610 CPU sec, 22.504 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519865, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 591, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (1090.41, 1090.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.80, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1264, 3237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7997)
[0000][PE] mean and std.dev: (1912.56, 1450.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 406.152 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519965, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 456, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (692.30, 582.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.34, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1439, 2855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6785)
[0000][PE] mean and std.dev: (2047.11, 1557.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 405.156 CPU sec, 22.673 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520225, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1061, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5868)
[0000][PE] mean and std.dev: (1374.69, 1282.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1441, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (1665.59, 881.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 404.530 CPU sec, 22.648 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519895, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (728, 977, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (1133.29, 718.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1464, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (1547.75, 753.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 400.071 CPU sec, 22.422 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519709, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1010, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (1217.19, 1297.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.58, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1306, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4622)
[0000][PE] mean and std.dev: (1439.44, 1003.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 407.870 CPU sec, 22.871 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519660, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 861, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (1589.53, 1613.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1485, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5254)
[0000][PE] mean and std.dev: (1594.32, 824.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 406.071 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519944, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 825, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1204.31, 1086.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1522, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6340)
[0000][PE] mean and std.dev: (1590.74, 914.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 404.980 CPU sec, 22.669 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519942, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 542, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6100)
[0000][PE] mean and std.dev: (1113.07, 1016.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.37, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1429, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (1431.29, 853.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 404.495 CPU sec, 22.603 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520055, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 938, 2756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7586)
[0000][PE] mean and std.dev: (1477.04, 1310.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1173, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5019)
[0000][PE] mean and std.dev: (1338.38, 754.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 403.713 CPU sec, 22.639 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520342, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 1251, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5216)
[0000][PE] mean and std.dev: (1261.35, 1026.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1055, 2772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6556)
[0000][PE] mean and std.dev: (1776.50, 1583.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 406.065 CPU sec, 22.760 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520092, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 859, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5419)
[0000][PE] mean and std.dev: (1124.97, 978.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.56, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1296, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3834)
[0000][PE] mean and std.dev: (1216.89, 755.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 405.817 CPU sec, 22.702 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520038, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 835, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5719)
[0000][PE] mean and std.dev: (1208.74, 1027.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.88, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1598, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5371)
[0000][PE] mean and std.dev: (1644.61, 805.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 406.148 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520104, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 787, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1000.80, 834.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1305, 1844, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (1772.32, 846.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 405.640 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520099, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 935, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (934.10, 748.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.32, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1198, 2965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7309)
[0000][PE] mean and std.dev: (1736.50, 1377.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 403.494 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520189, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 674, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4804)
[0000][PE] mean and std.dev: (1130.30, 1048.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1475, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1509.44, 882.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 404.993 CPU sec, 22.657 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519858, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (568, 732, 3883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10513)
[0000][PE] mean and std.dev: (1864.19, 2264.80)
[0000][PE] low and high boundaries for proper pairs: (1, 13828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.38, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1798, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5798)
[0000][PE] mean and std.dev: (1822.46, 963.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 408.674 CPU sec, 22.993 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520079, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 947, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6104)
[0000][PE] mean and std.dev: (1231.08, 1008.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1476, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1927.50, 1247.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 403.552 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519592, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 662, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5795)
[0000][PE] mean and std.dev: (1218.29, 1206.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1838, 2901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7065)
[0000][PE] mean and std.dev: (2233.14, 1682.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 403.949 CPU sec, 22.596 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520234, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 827, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (960.76, 729.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1123, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (1108.53, 539.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 403.280 CPU sec, 22.549 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520386, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (828, 1490, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (1455.08, 892.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1633, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (1949.87, 1432.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 403.405 CPU sec, 22.619 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520163, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 939, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (1344.39, 1300.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1358, 2630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5456)
[0000][PE] mean and std.dev: (1717.30, 807.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 403.803 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520314, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 814, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (1001.88, 702.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.60, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1619, 3457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8009)
[0000][PE] mean and std.dev: (2102.17, 1459.24)
[0000][PE] low and high boundaries for proper pairs: (1, 10285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 402.589 CPU sec, 22.509 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519887, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (512, 1279, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6740)
[0000][PE] mean and std.dev: (1663.90, 1350.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1686, 4092, 5493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13107)
[0000][PE] mean and std.dev: (3937.70, 2735.80)
[0000][PE] low and high boundaries for proper pairs: (1, 16914)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1487, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (1492.22, 876.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 406.430 CPU sec, 22.758 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520367, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 828, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (854.78, 619.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1307, 1487, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (1634.18, 828.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 402.224 CPU sec, 22.561 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520457, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 895, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3104)
[0000][PE] mean and std.dev: (941.24, 573.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.46, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1571, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (1753.37, 977.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 404.635 CPU sec, 22.642 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519652, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1032, 2963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8181)
[0000][PE] mean and std.dev: (1608.48, 1418.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1289, 1863, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5828)
[0000][PE] mean and std.dev: (1876.41, 1091.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 403.931 CPU sec, 22.630 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520291, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1269, 1451, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 3036)
[0000][PE] mean and std.dev: (1392.65, 620.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.30, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1372, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (1171.18, 438.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 405.224 CPU sec, 22.670 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205330
	[0000][ M::kt_pipeline] read 1205330 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519880, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (681, 1174, 2885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7293)
[0000][PE] mean and std.dev: (1553.17, 1431.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1269, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (1249.65, 505.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 405.374 CPU sec, 22.644 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520066, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 809, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (714.00, 383.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.87, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 2372, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5264)
[0000][PE] mean and std.dev: (2075.00, 947.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205330 reads in 403.461 CPU sec, 22.596 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519786, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 757, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (886.17, 785.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1430, 2959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6335)
[0000][PE] mean and std.dev: (1822.93, 950.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 403.905 CPU sec, 22.661 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519809, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 1104, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4958)
[0000][PE] mean and std.dev: (1351.62, 1170.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (463, 893, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (1046.33, 786.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 403.652 CPU sec, 22.589 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520106, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 433, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3209)
[0000][PE] mean and std.dev: (693.71, 699.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1903, 3391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8063)
[0000][PE] mean and std.dev: (2417.30, 1786.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 404.057 CPU sec, 22.600 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520455, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 787, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5803)
[0000][PE] mean and std.dev: (1148.15, 994.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1439, 2681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6129)
[0000][PE] mean and std.dev: (1627.84, 969.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 402.313 CPU sec, 22.550 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519530, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (795, 980, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (1105.35, 708.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1424, 2737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1663.38, 767.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 406.010 CPU sec, 22.745 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520152, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 733, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5771)
[0000][PE] mean and std.dev: (1016.20, 923.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1284, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5364)
[0000][PE] mean and std.dev: (1867.87, 1232.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 408.133 CPU sec, 22.875 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519953, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 871, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (1186.56, 1023.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1261, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (1350.46, 724.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 404.287 CPU sec, 22.611 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520223, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 845, 2684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7064)
[0000][PE] mean and std.dev: (1401.25, 1375.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.57, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1354, 1703, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1686.50, 550.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 406.409 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520028, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 720, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (1164.45, 1115.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1854, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5192)
[0000][PE] mean and std.dev: (1503.17, 915.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 403.646 CPU sec, 22.568 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520133, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 855, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6011)
[0000][PE] mean and std.dev: (1149.75, 1025.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1735, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5466)
[0000][PE] mean and std.dev: (1611.87, 678.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 400.226 CPU sec, 22.384 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520473, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 966, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (1267.73, 1045.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1686, 3084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7160)
[0000][PE] mean and std.dev: (2058.04, 1476.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 403.144 CPU sec, 22.569 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520213, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 1206, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (1201.36, 941.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1810, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (1885.93, 1092.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 404.248 CPU sec, 22.629 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520009, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 452, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (742.79, 630.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1822, 3183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7807)
[0000][PE] mean and std.dev: (2127.09, 1646.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 403.683 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519826, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 565, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1664)
[0000][PE] mean and std.dev: (578.00, 425.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.45, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1724, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (1364.53, 521.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 405.891 CPU sec, 22.727 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520153, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 774, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (810.74, 619.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1024, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3252)
[0000][PE] mean and std.dev: (1188.50, 815.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 400.292 CPU sec, 22.403 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520327, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 928, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4861)
[0000][PE] mean and std.dev: (1311.74, 1118.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1574, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5474)
[0000][PE] mean and std.dev: (1732.27, 1048.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 403.118 CPU sec, 22.543 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520180, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 565, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (913.09, 859.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1648, 3189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7053)
[0000][PE] mean and std.dev: (2022.33, 1410.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 406.959 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519833, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 965, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4483)
[0000][PE] mean and std.dev: (1230.47, 972.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1365, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (1270.36, 647.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 405.144 CPU sec, 22.693 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519903, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 908, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (809.15, 555.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1493, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7171)
[0000][PE] mean and std.dev: (1960.00, 1512.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 404.092 CPU sec, 22.589 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519562, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 570, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4086)
[0000][PE] mean and std.dev: (978.81, 893.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.34, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1228, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5298)
[0000][PE] mean and std.dev: (1506.00, 1007.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 410.798 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519623, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 921, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (987.30, 819.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1329, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (1444.04, 679.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 404.594 CPU sec, 22.633 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519945, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 956, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (1047.37, 833.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1336, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (1771.21, 1212.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 406.523 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520011, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 904, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7375)
[0000][PE] mean and std.dev: (1624.15, 1711.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1359, 3296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8356)
[0000][PE] mean and std.dev: (1917.39, 1496.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 403.601 CPU sec, 22.626 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520528, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (908, 1247, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6443)
[0000][PE] mean and std.dev: (1713.50, 1372.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.51, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1248, 2773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6773)
[0000][PE] mean and std.dev: (1782.43, 1537.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 401.450 CPU sec, 22.545 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520146, 10, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (496, 967, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (1187.52, 1019.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1429, 4389, 5553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13801)
[0000][PE] mean and std.dev: (3774.20, 2693.02)
[0000][PE] low and high boundaries for proper pairs: (1, 17925)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1190, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1378.62, 835.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 406.640 CPU sec, 22.797 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519776, 8, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1129, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1052.86, 841.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1203, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6128)
[0000][PE] mean and std.dev: (1585.57, 976.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 405.171 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519918, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 724, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1009.59, 790.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1464, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5593)
[0000][PE] mean and std.dev: (1360.90, 773.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 405.031 CPU sec, 22.674 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519844, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 1094, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (1010.62, 572.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1256, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1396.00, 560.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 406.717 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520164, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1006, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (1054.38, 752.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1566, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (1556.14, 532.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 403.225 CPU sec, 22.621 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520098, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (478, 981, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (985.35, 722.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1533, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5402)
[0000][PE] mean and std.dev: (1333.94, 648.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 400.971 CPU sec, 22.459 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519909, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (519, 868, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (849.26, 491.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1539, 3432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8284)
[0000][PE] mean and std.dev: (2167.41, 1886.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 405.230 CPU sec, 22.686 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520189, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (730, 1068, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2617)
[0000][PE] mean and std.dev: (975.55, 563.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (85, 470, 6083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18079)
[0000][PE] mean and std.dev: (3098.70, 3800.85)
[0000][PE] low and high boundaries for proper pairs: (1, 24077)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1316, 1576, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5315)
[0000][PE] mean and std.dev: (1737.30, 956.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 404.336 CPU sec, 22.620 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519744, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 816, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (941.06, 813.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.87, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1505, 3338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7886)
[0000][PE] mean and std.dev: (2090.38, 1653.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 403.692 CPU sec, 22.597 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519763, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 643, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (819.15, 632.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (499, 1482, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (1405.81, 976.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 404.249 CPU sec, 22.607 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520184, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 780, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1052.78, 1003.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1530, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (1647.81, 938.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 404.646 CPU sec, 22.643 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519699, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 680, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1039.80, 1042.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1675, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5806)
[0000][PE] mean and std.dev: (1754.82, 1417.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 403.229 CPU sec, 22.575 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520174, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 1221, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6655)
[0000][PE] mean and std.dev: (1660.22, 1627.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.84, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 2245, 2843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6507)
[0000][PE] mean and std.dev: (2068.69, 1176.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 400.785 CPU sec, 22.415 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519967, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 558, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (793.96, 609.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1185, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5924)
[0000][PE] mean and std.dev: (1443.32, 1002.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 402.687 CPU sec, 22.535 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519846, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1003, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (912.21, 562.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1434, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (1582.68, 815.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 403.807 CPU sec, 22.582 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520125, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 999, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4589)
[0000][PE] mean and std.dev: (1258.93, 942.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1420, 1673, 2711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5293)
[0000][PE] mean and std.dev: (1776.23, 1086.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 402.554 CPU sec, 22.538 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520236, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (840, 1075, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (1120.55, 701.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 403.230 CPU sec, 22.537 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519752, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 1228, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5327)
[0000][PE] mean and std.dev: (1047.90, 827.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1734, 2453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5701)
[0000][PE] mean and std.dev: (1811.92, 1211.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 407.161 CPU sec, 22.796 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519999, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (514, 1137, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (993.45, 603.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1463, 3968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9704)
[0000][PE] mean and std.dev: (2641.42, 2556.16)
[0000][PE] low and high boundaries for proper pairs: (1, 12866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 399.493 CPU sec, 22.348 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519440, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 704, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (706.75, 520.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1363, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3234)
[0000][PE] mean and std.dev: (1499.72, 586.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 410.925 CPU sec, 23.013 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520401, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 750, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4707)
[0000][PE] mean and std.dev: (989.72, 730.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1518, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4726)
[0000][PE] mean and std.dev: (1475.31, 862.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 408.792 CPU sec, 22.880 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519948, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 863, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (1118.22, 1015.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1601, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (1437.88, 553.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 407.252 CPU sec, 22.784 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520351, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 575, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5933)
[0000][PE] mean and std.dev: (1235.24, 1377.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.28, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1315, 1924, 2995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6355)
[0000][PE] mean and std.dev: (2043.23, 1289.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 408.145 CPU sec, 22.832 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520447, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (861, 1337, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (1320.93, 677.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1310, 1916, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1774.70, 765.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 402.680 CPU sec, 22.509 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205390
	[0000][ M::kt_pipeline] read 1205390 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519752, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 999, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (1062.38, 803.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1834, 2702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5980)
[0000][PE] mean and std.dev: (1908.11, 916.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 404.372 CPU sec, 22.659 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520143, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 985, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3564)
[0000][PE] mean and std.dev: (890.69, 686.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1090, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5227)
[0000][PE] mean and std.dev: (1474.08, 913.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205390 reads in 408.245 CPU sec, 22.868 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519897, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 516, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (571.00, 396.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1275, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5414)
[0000][PE] mean and std.dev: (1318.53, 887.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 405.997 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520365, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (507, 1107, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6222)
[0000][PE] mean and std.dev: (1447.16, 1393.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1252, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1054.44, 610.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 403.395 CPU sec, 22.558 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519639, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 562, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2614)
[0000][PE] mean and std.dev: (579.86, 418.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1790, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (1823.74, 1374.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 408.392 CPU sec, 22.838 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205348
	[0000][ M::kt_pipeline] read 1205348 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519775, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 844, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (998.65, 695.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1690, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5402)
[0000][PE] mean and std.dev: (1911.07, 1213.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 406.291 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520118, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 1015, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (1062.00, 800.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1514, 2797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6539)
[0000][PE] mean and std.dev: (1745.69, 1070.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205348 reads in 409.009 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520016, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 1078, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5675)
[0000][PE] mean and std.dev: (1378.61, 1104.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1347, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4601)
[0000][PE] mean and std.dev: (1531.46, 906.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 408.904 CPU sec, 22.902 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520068, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 644, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (975.29, 868.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 2076, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6691)
[0000][PE] mean and std.dev: (1834.00, 1091.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 405.902 CPU sec, 22.727 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520357, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (497, 735, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1107.63, 818.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1346, 2680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6634)
[0000][PE] mean and std.dev: (1719.43, 1328.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 407.236 CPU sec, 22.800 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520498, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 653, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4935)
[0000][PE] mean and std.dev: (1017.92, 867.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1502, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (1483.57, 774.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 405.921 CPU sec, 22.720 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520012, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1370, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6990)
[0000][PE] mean and std.dev: (1384.44, 1102.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1562, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (1369.88, 655.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 405.344 CPU sec, 22.692 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520361, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (716, 1346, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6965)
[0000][PE] mean and std.dev: (1972.57, 1728.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1146, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4486)
[0000][PE] mean and std.dev: (1355.50, 743.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 402.619 CPU sec, 22.529 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520517, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 925, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5903)
[0000][PE] mean and std.dev: (1383.78, 1338.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.86, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1346, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1434.32, 825.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 404.458 CPU sec, 22.642 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520535, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 573, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (784.36, 594.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1113, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (1218.48, 693.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 407.019 CPU sec, 22.832 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519796, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (654, 953, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (1091.83, 753.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1569, 2607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5705)
[0000][PE] mean and std.dev: (1680.36, 1145.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 408.013 CPU sec, 22.876 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519785, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (441, 1314, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1567.77, 1375.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (546, 1197, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6561)
[0000][PE] mean and std.dev: (1739.22, 1579.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 407.553 CPU sec, 22.864 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520094, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 399, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (924.60, 1009.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1181, 2431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1714.22, 1268.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 410.717 CPU sec, 23.040 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519589, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 746, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (944.23, 754.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1951, 4102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9792)
[0000][PE] mean and std.dev: (2725.03, 2175.47)
[0000][PE] low and high boundaries for proper pairs: (1, 12637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 407.101 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519885, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (555, 1081, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4635)
[0000][PE] mean and std.dev: (1112.43, 798.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1213, 4429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11695)
[0000][PE] mean and std.dev: (2269.48, 2101.49)
[0000][PE] low and high boundaries for proper pairs: (1, 15328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 406.567 CPU sec, 22.824 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520754, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 859, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (916.38, 759.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1315, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (1412.75, 709.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 401.468 CPU sec, 22.522 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519858, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 826, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (844.50, 636.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 988, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (1252.56, 757.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 404.927 CPU sec, 22.705 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520159, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (641, 974, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1071.14, 726.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1382, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (1529.69, 882.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 408.039 CPU sec, 22.839 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520013, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 2264, 2552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7014)
[0000][PE] mean and std.dev: (1708.38, 1424.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 896)
[0000][PE] mean and std.dev: (511.11, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1209, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (1389.90, 1049.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 406.751 CPU sec, 22.770 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519809, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 1199, 2685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7199)
[0000][PE] mean and std.dev: (1391.64, 1152.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1187, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (1158.94, 570.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 406.655 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519871, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 646, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4384)
[0000][PE] mean and std.dev: (941.30, 916.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1075, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (1281.14, 749.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 405.496 CPU sec, 22.709 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520145, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 573, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4785)
[0000][PE] mean and std.dev: (1105.11, 990.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1597, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (1571.46, 736.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 407.363 CPU sec, 22.804 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520366, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (544, 915, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (992.56, 575.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.27, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1375, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5360)
[0000][PE] mean and std.dev: (1472.35, 978.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 405.036 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520495, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (503, 1079, 2761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7277)
[0000][PE] mean and std.dev: (1521.00, 1368.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1580, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5617)
[0000][PE] mean and std.dev: (1727.55, 1117.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 407.283 CPU sec, 22.833 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519838, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (441, 832, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5448)
[0000][PE] mean and std.dev: (1285.83, 1326.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.14, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1845, 3189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7303)
[0000][PE] mean and std.dev: (1991.43, 1397.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 404.759 CPU sec, 22.656 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519574, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 453, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5488)
[0000][PE] mean and std.dev: (994.67, 1152.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.62, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1365, 1695, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3810)
[0000][PE] mean and std.dev: (1707.11, 740.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 406.178 CPU sec, 22.791 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519804, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 770, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (777.59, 609.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1557, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1723.26, 1006.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 407.878 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520544, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 1047, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (1158.20, 773.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1354, 1740, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5980)
[0000][PE] mean and std.dev: (2079.43, 1111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 406.269 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519784, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (618, 1318, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5634)
[0000][PE] mean and std.dev: (1419.39, 1185.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.88, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1302, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1594.47, 977.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 414.896 CPU sec, 23.367 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519885, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 1027, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6381)
[0000][PE] mean and std.dev: (1183.50, 1024.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1431, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3186)
[0000][PE] mean and std.dev: (1504.68, 612.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 407.935 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520484, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 662, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6456)
[0000][PE] mean and std.dev: (1262.39, 1373.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.30, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1379, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5839)
[0000][PE] mean and std.dev: (1846.15, 1413.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 404.426 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520146, 9, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (508, 1048, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (953.23, 512.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.48, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1379, 3209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7821)
[0000][PE] mean and std.dev: (2136.15, 1767.04)
[0000][PE] low and high boundaries for proper pairs: (1, 10127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 406.114 CPU sec, 22.875 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519574, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 631, 2737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7427)
[0000][PE] mean and std.dev: (1343.11, 1540.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.35, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1863, 3997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9993)
[0000][PE] mean and std.dev: (2107.46, 1486.52)
[0000][PE] low and high boundaries for proper pairs: (1, 12991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 406.622 CPU sec, 22.851 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519818, 13, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (476, 1074, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1325.40, 1032.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (730, 1686, 3761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9823)
[0000][PE] mean and std.dev: (2136.23, 1850.74)
[0000][PE] low and high boundaries for proper pairs: (1, 12854)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1068, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2225)
[0000][PE] mean and std.dev: (967.94, 381.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 411.352 CPU sec, 23.158 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519781, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (573, 798, 3111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8187)
[0000][PE] mean and std.dev: (1703.31, 1889.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1469, 3102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7072)
[0000][PE] mean and std.dev: (1885.95, 1305.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 407.096 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520065, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 1304, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5267)
[0000][PE] mean and std.dev: (1367.43, 1012.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1653, 3061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6931)
[0000][PE] mean and std.dev: (2068.20, 1143.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 407.057 CPU sec, 22.878 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520126, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (591, 992, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6150)
[0000][PE] mean and std.dev: (1238.17, 1217.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1500, 2924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6566)
[0000][PE] mean and std.dev: (1668.67, 1100.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 405.947 CPU sec, 22.846 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520082, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 819, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (926.05, 701.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1342, 3020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7284)
[0000][PE] mean and std.dev: (1705.08, 1133.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 407.692 CPU sec, 22.903 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519230, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 876, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5193)
[0000][PE] mean and std.dev: (1243.67, 1279.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1765, 3154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7194)
[0000][PE] mean and std.dev: (1775.17, 1063.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 409.967 CPU sec, 23.064 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520270, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 1520, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5072)
[0000][PE] mean and std.dev: (1471.05, 1237.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.92, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1607, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1556.93, 845.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 412.703 CPU sec, 23.223 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519775, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 931, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5006)
[0000][PE] mean and std.dev: (1047.13, 1020.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.90, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1170, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (1624.47, 1057.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 411.158 CPU sec, 23.157 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520056, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1058, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1120.61, 1021.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1364, 2777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5993)
[0000][PE] mean and std.dev: (1664.79, 1144.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 407.606 CPU sec, 22.917 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519829, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 680, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (738.03, 469.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.38, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1255, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (1358.42, 704.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 407.134 CPU sec, 22.866 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520494, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 647, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1065.72, 1051.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1220, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4984)
[0000][PE] mean and std.dev: (1577.43, 969.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 404.960 CPU sec, 22.835 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519894, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 950, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5292)
[0000][PE] mean and std.dev: (1243.10, 1147.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1203, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (1327.24, 832.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 403.664 CPU sec, 22.558 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519685, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 951, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5375)
[0000][PE] mean and std.dev: (1239.64, 1026.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1733, 5737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15597)
[0000][PE] mean and std.dev: (2778.70, 2766.16)
[0000][PE] low and high boundaries for proper pairs: (1, 20527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 403.168 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520546, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 589, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3551)
[0000][PE] mean and std.dev: (744.68, 652.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.53, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1431, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1432.93, 819.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 406.438 CPU sec, 22.774 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519914, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 811, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (899.18, 701.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 896)
[0000][PE] mean and std.dev: (511.04, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (597, 1309, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (1337.07, 830.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 406.512 CPU sec, 22.772 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520242, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 545, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (1016.43, 896.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.92, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1775, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6936)
[0000][PE] mean and std.dev: (1706.94, 1057.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 405.143 CPU sec, 22.684 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519937, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 1111, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6811)
[0000][PE] mean and std.dev: (1366.81, 1300.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1605, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5526)
[0000][PE] mean and std.dev: (1647.61, 1104.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 407.170 CPU sec, 22.813 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519888, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 575, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4636)
[0000][PE] mean and std.dev: (1026.23, 1100.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1169, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4726)
[0000][PE] mean and std.dev: (1659.11, 1130.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 406.107 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520425, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 637, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (602.62, 475.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 1590, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (1483.52, 724.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 401.349 CPU sec, 22.447 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519870, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (716, 1109, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1168.00, 814.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.80, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1523, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (1387.17, 439.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 407.597 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520402, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 1117, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1193.26, 967.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1285, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (1294.30, 699.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 402.321 CPU sec, 22.574 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519753, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (808, 1776, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5944)
[0000][PE] mean and std.dev: (1777.55, 1049.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.22, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1563, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (1677.23, 881.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 404.781 CPU sec, 22.671 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520098, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (587, 1158, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (1180.24, 716.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1293, 1779, 3183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6963)
[0000][PE] mean and std.dev: (1893.42, 1242.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 403.950 CPU sec, 22.656 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520293, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (711, 1133, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6942)
[0000][PE] mean and std.dev: (1504.56, 1327.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.19, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1541, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1658.47, 1074.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 403.344 CPU sec, 22.567 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520159, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (651, 1301, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (1152.81, 702.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1664, 3469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8383)
[0000][PE] mean and std.dev: (2186.41, 1528.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 402.148 CPU sec, 22.520 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520561, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 522, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2483)
[0000][PE] mean and std.dev: (487.56, 267.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1357, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1279.96, 790.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 400.899 CPU sec, 22.471 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520167, 11, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 800, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (780.12, 547.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 896)
[0000][PE] mean and std.dev: (511.10, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (867, 1579, 3450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8616)
[0000][PE] mean and std.dev: (2139.40, 1889.17)
[0000][PE] low and high boundaries for proper pairs: (1, 11199)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1404, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5281)
[0000][PE] mean and std.dev: (1549.77, 866.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 406.675 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520446, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 927, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6404)
[0000][PE] mean and std.dev: (1401.08, 1364.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1262, 2817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6373)
[0000][PE] mean and std.dev: (1750.50, 1304.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 403.609 CPU sec, 22.605 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519765, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 945, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (897.48, 568.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1588, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4886)
[0000][PE] mean and std.dev: (1808.72, 975.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 406.329 CPU sec, 22.787 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519717, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 1376, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5684)
[0000][PE] mean and std.dev: (1426.35, 1091.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.88, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1525, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1474.88, 769.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 407.772 CPU sec, 22.850 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520066, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 764, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5950)
[0000][PE] mean and std.dev: (1250.53, 1104.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1440, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5319)
[0000][PE] mean and std.dev: (1690.00, 1254.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 404.566 CPU sec, 22.676 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519910, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (541, 992, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (1059.23, 768.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1321, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (1372.08, 666.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 407.884 CPU sec, 22.834 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520475, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1101, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5164)
[0000][PE] mean and std.dev: (1280.96, 976.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1694, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5129)
[0000][PE] mean and std.dev: (1558.11, 928.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 403.360 CPU sec, 22.637 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519582, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 419, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (634.11, 584.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1554, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6573)
[0000][PE] mean and std.dev: (1936.62, 1212.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 404.472 CPU sec, 22.629 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520270, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (785, 1330, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4712)
[0000][PE] mean and std.dev: (1219.05, 737.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.35, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (617, 3936, 5073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13985)
[0000][PE] mean and std.dev: (3246.90, 2509.35)
[0000][PE] low and high boundaries for proper pairs: (1, 18441)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1366, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4555)
[0000][PE] mean and std.dev: (1542.61, 890.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 400.414 CPU sec, 22.439 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519825, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1012, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6598)
[0000][PE] mean and std.dev: (1482.43, 1386.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1348, 2959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6781)
[0000][PE] mean and std.dev: (1927.36, 1285.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 404.916 CPU sec, 22.673 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519921, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 1276, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5002)
[0000][PE] mean and std.dev: (1273.61, 1075.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1379, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (1116.72, 414.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 403.364 CPU sec, 22.572 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519808, 6, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 776, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5074)
[0000][PE] mean and std.dev: (1014.19, 864.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1404, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5658)
[0000][PE] mean and std.dev: (1555.91, 844.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 403.731 CPU sec, 22.609 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519802, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 469, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (562.44, 404.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1337, 1699, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4961)
[0000][PE] mean and std.dev: (1713.50, 632.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 401.395 CPU sec, 22.482 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520073, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 423, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (748.20, 698.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1622, 3195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7413)
[0000][PE] mean and std.dev: (2038.50, 1292.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 402.398 CPU sec, 22.530 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520331, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (701, 1166, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4043)
[0000][PE] mean and std.dev: (1325.69, 856.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1360, 2876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6928)
[0000][PE] mean and std.dev: (1709.15, 1220.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 404.540 CPU sec, 22.652 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519955, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1081, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (1190.44, 866.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1342, 2087, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5218)
[0000][PE] mean and std.dev: (2116.47, 1135.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 402.039 CPU sec, 22.488 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520192, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 1319, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5605)
[0000][PE] mean and std.dev: (1462.74, 1325.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.33, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1175, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4196)
[0000][PE] mean and std.dev: (1423.17, 826.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 402.302 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520077, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1342, 4129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11757)
[0000][PE] mean and std.dev: (2305.85, 2548.70)
[0000][PE] low and high boundaries for proper pairs: (1, 15571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 1490, 2645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1842.89, 1101.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 402.118 CPU sec, 22.545 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519758, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (584, 883, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (1023.83, 729.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1335, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1535.24, 1017.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 404.393 CPU sec, 22.670 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519941, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 826, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1065.79, 842.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.33, 120.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1491, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (1698.13, 926.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 399.980 CPU sec, 22.355 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520426, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 1211, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (1119.88, 749.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1347, 3429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8149)
[0000][PE] mean and std.dev: (2008.14, 1591.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 400.636 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520302, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 865, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (882.44, 549.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 1754, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3443)
[0000][PE] mean and std.dev: (1705.04, 553.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 401.108 CPU sec, 22.446 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519572, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 906, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5078)
[0000][PE] mean and std.dev: (1208.82, 997.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1512, 3812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9618)
[0000][PE] mean and std.dev: (2687.61, 2857.92)
[0000][PE] low and high boundaries for proper pairs: (1, 14119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 399.029 CPU sec, 22.341 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520049, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 942, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (1109.48, 964.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1451, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1437.00, 852.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 399.256 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519359, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 758, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2866)
[0000][PE] mean and std.dev: (737.81, 424.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.30, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1533, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5781)
[0000][PE] mean and std.dev: (1681.57, 879.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 401.522 CPU sec, 22.483 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520277, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 858, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3660)
[0000][PE] mean and std.dev: (957.56, 832.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1294, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5146)
[0000][PE] mean and std.dev: (1429.79, 926.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 401.625 CPU sec, 22.479 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520266, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 1156, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5825)
[0000][PE] mean and std.dev: (1513.67, 1351.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1371, 3648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8902)
[0000][PE] mean and std.dev: (2250.76, 2008.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 401.045 CPU sec, 22.444 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520475, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1488, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7723)
[0000][PE] mean and std.dev: (1858.69, 1676.81)
[0000][PE] low and high boundaries for proper pairs: (1, 10183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1344, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2875)
[0000][PE] mean and std.dev: (1150.33, 529.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 401.323 CPU sec, 22.449 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519998, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (779, 1171, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4043)
[0000][PE] mean and std.dev: (1381.39, 994.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1389, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (1373.16, 741.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 406.545 CPU sec, 22.754 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519755, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 854, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (1100.25, 822.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1558, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5472)
[0000][PE] mean and std.dev: (1598.43, 918.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 405.972 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520134, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 380, 614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1342)
[0000][PE] mean and std.dev: (454.92, 297.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1341, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (1537.33, 942.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 400.796 CPU sec, 22.426 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520468, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 822, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5087)
[0000][PE] mean and std.dev: (1023.32, 823.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1367, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (1356.50, 694.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 402.297 CPU sec, 22.525 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520193, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 744, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6203)
[0000][PE] mean and std.dev: (1258.74, 1425.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1303, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1590.39, 933.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 400.883 CPU sec, 22.436 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520154, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (788, 1103, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4454)
[0000][PE] mean and std.dev: (1267.92, 904.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1274, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (1482.05, 844.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 399.719 CPU sec, 22.381 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520519, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 1104, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4274)
[0000][PE] mean and std.dev: (1171.28, 839.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1164, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (1152.13, 520.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 404.151 CPU sec, 22.662 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519961, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 898, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4064)
[0000][PE] mean and std.dev: (1076.27, 827.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1288, 2645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6067)
[0000][PE] mean and std.dev: (1555.20, 1001.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 405.926 CPU sec, 22.750 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519919, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (772, 1147, 2804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6868)
[0000][PE] mean and std.dev: (1644.68, 1490.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.97, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1302, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5285)
[0000][PE] mean and std.dev: (1650.29, 1039.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 402.914 CPU sec, 22.581 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519849, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (516, 1083, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (1085.41, 728.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.32, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1496, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (1550.79, 975.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 401.972 CPU sec, 22.528 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519486, 7, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (557, 1083, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6074)
[0000][PE] mean and std.dev: (1624.76, 1457.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.28, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1432, 3098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7462)
[0000][PE] mean and std.dev: (2158.16, 1971.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 403.397 CPU sec, 22.589 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519417, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 566, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4165)
[0000][PE] mean and std.dev: (838.90, 799.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1274, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5469)
[0000][PE] mean and std.dev: (1472.55, 998.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 402.913 CPU sec, 22.563 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520118, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 548, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (1094.00, 1028.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 1741, 3537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8021)
[0000][PE] mean and std.dev: (2031.38, 1211.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 400.054 CPU sec, 22.429 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519936, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 706, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5269)
[0000][PE] mean and std.dev: (1157.00, 1064.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.32, 120.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1471, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1575.86, 897.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 400.011 CPU sec, 22.397 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520249, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 1162, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (1025.66, 619.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1325, 2747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6151)
[0000][PE] mean and std.dev: (1779.47, 1209.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 403.351 CPU sec, 22.563 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520371, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 815, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1057.80, 924.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1495, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4995)
[0000][PE] mean and std.dev: (1713.16, 1036.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 398.554 CPU sec, 22.294 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519947, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (641, 1023, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (1082.67, 682.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.51, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1811, 3099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6925)
[0000][PE] mean and std.dev: (2222.29, 1663.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 404.595 CPU sec, 22.655 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520042, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 969, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (1141.20, 1021.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1387, 4410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11152)
[0000][PE] mean and std.dev: (2259.46, 1573.94)
[0000][PE] low and high boundaries for proper pairs: (1, 14523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 400.979 CPU sec, 22.472 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520039, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 1017, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (1160.72, 780.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1528, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5640)
[0000][PE] mean and std.dev: (1772.06, 1094.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 401.859 CPU sec, 22.471 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519894, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 734, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2484)
[0000][PE] mean and std.dev: (684.41, 435.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1689, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4339)
[0000][PE] mean and std.dev: (1461.88, 612.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 403.417 CPU sec, 22.560 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519380, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 853, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (1223.38, 1085.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1506, 3919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9743)
[0000][PE] mean and std.dev: (2315.31, 2384.47)
[0000][PE] low and high boundaries for proper pairs: (1, 12655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 406.151 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519792, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 867, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (965.77, 868.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.84, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1455, 2960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6980)
[0000][PE] mean and std.dev: (1803.11, 1414.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 402.924 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519975, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 691, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2366)
[0000][PE] mean and std.dev: (679.04, 479.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1601, 1826, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5219)
[0000][PE] mean and std.dev: (1921.82, 938.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 402.040 CPU sec, 22.500 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520221, 1, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (524, 1270, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4958)
[0000][PE] mean and std.dev: (1431.43, 1343.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1401, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (1410.37, 690.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 396.489 CPU sec, 22.236 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519794, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 941, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5551)
[0000][PE] mean and std.dev: (980.00, 862.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (657, 1237, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5760)
[0000][PE] mean and std.dev: (1506.73, 958.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 403.721 CPU sec, 22.623 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519717, 0, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (519, 1155, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (1007.86, 612.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.47, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1618, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4944)
[0000][PE] mean and std.dev: (1720.03, 850.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 401.903 CPU sec, 22.535 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520175, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 629, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2646)
[0000][PE] mean and std.dev: (696.59, 451.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 2055, 3480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8136)
[0000][PE] mean and std.dev: (2332.90, 1753.79)
[0000][PE] low and high boundaries for proper pairs: (1, 10464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 399.970 CPU sec, 22.389 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519884, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 969, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7734)
[0000][PE] mean and std.dev: (1626.29, 1677.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1753, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4888)
[0000][PE] mean and std.dev: (1738.71, 892.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 402.517 CPU sec, 22.530 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519876, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 897, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4676)
[0000][PE] mean and std.dev: (1105.91, 992.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 1186, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5580)
[0000][PE] mean and std.dev: (1156.73, 726.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 400.155 CPU sec, 22.400 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519732, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 940, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3844)
[0000][PE] mean and std.dev: (1033.74, 885.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1882, 5310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14094)
[0000][PE] mean and std.dev: (2643.90, 2148.82)
[0000][PE] low and high boundaries for proper pairs: (1, 18486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 402.810 CPU sec, 22.581 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520261, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 746, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (951.33, 720.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1706, 3579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8433)
[0000][PE] mean and std.dev: (2297.38, 1565.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 403.202 CPU sec, 22.534 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520107, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 774, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (985.54, 803.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1494, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (1356.17, 678.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 399.575 CPU sec, 22.396 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519951, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 721, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (922.10, 899.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.28, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1268, 3100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7474)
[0000][PE] mean and std.dev: (1761.60, 1145.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 403.551 CPU sec, 22.617 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520040, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 658, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (675.86, 442.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1340, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5053)
[0000][PE] mean and std.dev: (1775.24, 1177.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 399.637 CPU sec, 22.423 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519717, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1247, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1045.68, 794.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (616, 1591, 3558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9442)
[0000][PE] mean and std.dev: (2236.62, 2212.81)
[0000][PE] low and high boundaries for proper pairs: (1, 12384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 401.046 CPU sec, 22.467 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519942, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1130, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7966)
[0000][PE] mean and std.dev: (1615.54, 1574.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1459, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (1421.50, 688.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 398.221 CPU sec, 22.300 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520408, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (576, 1226, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5790)
[0000][PE] mean and std.dev: (1405.83, 1206.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1419, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6588)
[0000][PE] mean and std.dev: (2033.68, 1463.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 399.160 CPU sec, 22.417 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520245, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 579, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (777.14, 621.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1759, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1637.36, 764.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 400.445 CPU sec, 22.430 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520092, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 428, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (772.25, 892.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1800, 2923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6639)
[0000][PE] mean and std.dev: (2178.48, 1630.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 399.368 CPU sec, 22.361 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520041, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 955, 4079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11835)
[0000][PE] mean and std.dev: (2422.92, 3054.22)
[0000][PE] low and high boundaries for proper pairs: (1, 15713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1525, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5395)
[0000][PE] mean and std.dev: (1785.33, 1407.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 399.193 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520294, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 420, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (873.00, 772.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.34, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1420, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5415)
[0000][PE] mean and std.dev: (1617.36, 854.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 398.884 CPU sec, 22.328 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520443, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (477, 953, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3048)
[0000][PE] mean and std.dev: (917.50, 569.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1630, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (1502.75, 700.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 398.625 CPU sec, 22.322 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520280, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 978, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (957.77, 755.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1345, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (1536.19, 678.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 397.846 CPU sec, 22.288 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520186, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 810, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (983.24, 937.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1196, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1479.06, 1026.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 400.811 CPU sec, 22.453 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520420, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 714, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (926.72, 824.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1048, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (1017.00, 432.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 396.046 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520250, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 605, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4948)
[0000][PE] mean and std.dev: (896.70, 851.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1686, 3654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8720)
[0000][PE] mean and std.dev: (2529.20, 2180.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 398.018 CPU sec, 22.265 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520202, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 946, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (931.04, 636.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1579, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5076)
[0000][PE] mean and std.dev: (1590.55, 1113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 401.433 CPU sec, 22.488 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520131, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 915, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3785)
[0000][PE] mean and std.dev: (1118.50, 811.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1323, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (1514.36, 932.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 400.196 CPU sec, 22.423 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520113, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (490, 854, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3076)
[0000][PE] mean and std.dev: (890.25, 482.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1338, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6527)
[0000][PE] mean and std.dev: (1498.88, 977.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 398.241 CPU sec, 22.320 real sec
[0000] Calling mem_process_seqs.., task: 1098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519934, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (543, 966, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5067)
[0000][PE] mean and std.dev: (1405.38, 1181.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1208, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5484)
[0000][PE] mean and std.dev: (1313.71, 893.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 401.043 CPU sec, 22.464 real sec
[0000] Calling mem_process_seqs.., task: 1099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519849, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 847, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (898.52, 669.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1387, 1870, 3287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7087)
[0000][PE] mean and std.dev: (2364.89, 1317.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 399.420 CPU sec, 22.381 real sec
[0000] Calling mem_process_seqs.., task: 1100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520089, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 683, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (981.72, 992.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.32, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 1167, 2969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7673)
[0000][PE] mean and std.dev: (1633.10, 1427.69)
[0000][PE] low and high boundaries for proper pairs: (1, 10025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 399.570 CPU sec, 22.407 real sec
[0000] Calling mem_process_seqs.., task: 1101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519766, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 863, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (1202.88, 1101.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1850, 2952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7016)
[0000][PE] mean and std.dev: (1814.08, 1205.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 403.948 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 1102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519521, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (522, 895, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3381)
[0000][PE] mean and std.dev: (940.04, 627.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1246, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (1424.05, 806.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 398.493 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 1103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520036, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 1360, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5827)
[0000][PE] mean and std.dev: (1519.38, 1396.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (539, 1304, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (1293.54, 994.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 401.391 CPU sec, 22.496 real sec
[0000] Calling mem_process_seqs.., task: 1104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519941, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 507, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (867.60, 804.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1520, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5055)
[0000][PE] mean and std.dev: (1649.25, 938.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 404.290 CPU sec, 22.681 real sec
[0000] Calling mem_process_seqs.., task: 1105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520372, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 984, 3258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9036)
[0000][PE] mean and std.dev: (1704.05, 1647.47)
[0000][PE] low and high boundaries for proper pairs: (1, 11925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1358, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (1414.89, 787.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 398.829 CPU sec, 22.306 real sec
[0000] Calling mem_process_seqs.., task: 1106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520136, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 918, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (803.00, 533.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1259, 3375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8487)
[0000][PE] mean and std.dev: (2351.89, 2013.76)
[0000][PE] low and high boundaries for proper pairs: (1, 11043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 397.640 CPU sec, 22.252 real sec
[0000] Calling mem_process_seqs.., task: 1107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519462, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 790, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (782.00, 456.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 1598, 2617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (1963.91, 1070.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 400.191 CPU sec, 22.441 real sec
[0000] Calling mem_process_seqs.., task: 1108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519695, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 750, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (824.24, 587.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1216, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (1147.95, 653.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 397.685 CPU sec, 22.252 real sec
[0000] Calling mem_process_seqs.., task: 1109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519971, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (570, 1023, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6279)
[0000][PE] mean and std.dev: (1735.18, 1737.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1089, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1589.62, 1267.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 397.888 CPU sec, 22.292 real sec
[0000] Calling mem_process_seqs.., task: 1110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519273, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 544, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (770.40, 769.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1392, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1555.25, 1026.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 405.568 CPU sec, 22.703 real sec
[0000] Calling mem_process_seqs.., task: 1111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519940, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 897, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7693)
[0000][PE] mean and std.dev: (1333.55, 1324.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1350, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4838)
[0000][PE] mean and std.dev: (1634.53, 1067.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 396.690 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 1112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519828, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (706, 790, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (825.90, 441.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1411, 3068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6962)
[0000][PE] mean and std.dev: (1965.25, 1434.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 398.984 CPU sec, 22.345 real sec
[0000] Calling mem_process_seqs.., task: 1113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520115, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 1096, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1192.11, 989.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1845, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (1622.64, 797.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 396.074 CPU sec, 22.173 real sec
[0000] Calling mem_process_seqs.., task: 1114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519862, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 863, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (913.76, 688.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1514, 1910, 3558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7646)
[0000][PE] mean and std.dev: (2174.67, 1441.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9690)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1254, 2152, 4089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9759)
[0000][PE] mean and std.dev: (2814.90, 2214.51)
[0000][PE] low and high boundaries for proper pairs: (1, 12594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 398.228 CPU sec, 22.325 real sec
[0000] Calling mem_process_seqs.., task: 1115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520283, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 797, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5793)
[0000][PE] mean and std.dev: (1380.00, 1163.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1686, 2911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6241)
[0000][PE] mean and std.dev: (2117.64, 1224.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 398.697 CPU sec, 22.331 real sec
[0000] Calling mem_process_seqs.., task: 1116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520260, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (605, 1899, 3100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8090)
[0000][PE] mean and std.dev: (2050.15, 1809.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.84, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1542, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (1815.64, 1216.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 395.220 CPU sec, 22.161 real sec
[0000] Calling mem_process_seqs.., task: 1117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520316, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 1196, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6594)
[0000][PE] mean and std.dev: (1502.76, 1477.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1134, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (1244.65, 546.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 399.160 CPU sec, 22.355 real sec
[0000] Calling mem_process_seqs.., task: 1118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520248, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 797, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (974.15, 770.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (551, 1021, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6380)
[0000][PE] mean and std.dev: (1371.90, 1196.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 399.404 CPU sec, 22.378 real sec
[0000] Calling mem_process_seqs.., task: 1119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520032, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 898, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5089)
[0000][PE] mean and std.dev: (1038.09, 892.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.25, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1212, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (1340.36, 833.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 396.889 CPU sec, 22.246 real sec
[0000] Calling mem_process_seqs.., task: 1120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520243, 11, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (578, 836, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (937.83, 648.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (298, 3939, 6980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20344)
[0000][PE] mean and std.dev: (3622.18, 3444.52)
[0000][PE] low and high boundaries for proper pairs: (1, 27026)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1257, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (1204.29, 537.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 402.386 CPU sec, 22.533 real sec
[0000] Calling mem_process_seqs.., task: 1121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519706, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 749, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (944.10, 870.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1145, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (1225.45, 546.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 402.807 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 1122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520089, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (515, 897, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1232.18, 907.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1189, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6194)
[0000][PE] mean and std.dev: (1521.67, 888.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 399.746 CPU sec, 22.406 real sec
[0000] Calling mem_process_seqs.., task: 1123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 519937, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 757, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (767.05, 569.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1416, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (1463.50, 683.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 399.458 CPU sec, 22.405 real sec
[0000] Calling mem_process_seqs.., task: 1124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520131, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (438, 1246, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6084)
[0000][PE] mean and std.dev: (1415.75, 1259.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1484, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7116)
[0000][PE] mean and std.dev: (1740.71, 1293.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 398.221 CPU sec, 22.365 real sec
[0000] Calling mem_process_seqs.., task: 1125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520101, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (496, 965, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1204.19, 920.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1468, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5480)
[0000][PE] mean and std.dev: (1529.45, 925.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 398.749 CPU sec, 22.353 real sec
[0000] Calling mem_process_seqs.., task: 1126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 519888, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 1345, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5528)
[0000][PE] mean and std.dev: (1399.27, 1196.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.27, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1517, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1623.48, 835.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 402.978 CPU sec, 22.584 real sec
[0000] Calling mem_process_seqs.., task: 1127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520022, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 869, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (1271.45, 1146.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1302, 1423, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (44, 3189)
[0000][PE] mean and std.dev: (1417.06, 387.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 401.898 CPU sec, 22.538 real sec
[0000] Calling mem_process_seqs.., task: 1128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519595, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (501, 830, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2400)
[0000][PE] mean and std.dev: (822.70, 505.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1400, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (1582.35, 893.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 400.384 CPU sec, 22.432 real sec
[0000] Calling mem_process_seqs.., task: 1129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519803, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 1268, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6014)
[0000][PE] mean and std.dev: (1648.55, 1505.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1358, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (1276.43, 626.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 397.936 CPU sec, 22.264 real sec
[0000] Calling mem_process_seqs.., task: 1130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520159, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 902, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (1098.57, 838.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1160, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (1229.89, 562.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 398.148 CPU sec, 22.287 real sec
[0000] Calling mem_process_seqs.., task: 1131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519877, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 1027, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6914)
[0000][PE] mean and std.dev: (1599.12, 1709.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1643, 3127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7383)
[0000][PE] mean and std.dev: (1990.30, 1282.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 401.092 CPU sec, 22.439 real sec
[0000] Calling mem_process_seqs.., task: 1132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520155, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 1052, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6096)
[0000][PE] mean and std.dev: (1320.45, 1124.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1508, 3448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8330)
[0000][PE] mean and std.dev: (2066.68, 1536.79)
[0000][PE] low and high boundaries for proper pairs: (1, 10771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 405.083 CPU sec, 22.658 real sec
[0000] Calling mem_process_seqs.., task: 1133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520049, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 1142, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5119)
[0000][PE] mean and std.dev: (1248.17, 1144.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1227, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5088)
[0000][PE] mean and std.dev: (1634.38, 1239.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 394.169 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 1134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519998, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1212, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6403)
[0000][PE] mean and std.dev: (1692.82, 1416.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1416, 1947, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (1689.82, 662.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 398.695 CPU sec, 22.313 real sec
[0000] Calling mem_process_seqs.., task: 1135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519907, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 904, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (721.06, 626.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.82, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1297, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (1272.43, 628.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 396.543 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 1136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519987, 3, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 845, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1097.87, 972.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1792, 2908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6766)
[0000][PE] mean and std.dev: (1982.33, 1323.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 402.208 CPU sec, 22.518 real sec
[0000] Calling mem_process_seqs.., task: 1137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520055, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (667, 931, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5023)
[0000][PE] mean and std.dev: (1411.48, 1147.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.95, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 398.081 CPU sec, 22.293 real sec
[0000] Calling mem_process_seqs.., task: 1138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520207, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1387, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5589)
[0000][PE] mean and std.dev: (1360.83, 987.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1301, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5554)
[0000][PE] mean and std.dev: (1620.31, 990.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 404.011 CPU sec, 22.630 real sec
[0000] Calling mem_process_seqs.., task: 1139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519945, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 962, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (1060.45, 805.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (571, 1668, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1457.61, 877.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 399.355 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 1140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520038, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 741, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (974.20, 871.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.85, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1494, 1777, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (158, 3498)
[0000][PE] mean and std.dev: (1798.92, 617.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 402.813 CPU sec, 22.561 real sec
[0000] Calling mem_process_seqs.., task: 1141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519892, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1107, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4462)
[0000][PE] mean and std.dev: (1181.52, 939.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.35, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1411, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4389)
[0000][PE] mean and std.dev: (1427.33, 812.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 406.452 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 1142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520169, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 556, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6090)
[0000][PE] mean and std.dev: (1161.96, 1348.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1484, 1712, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (1706.79, 719.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 397.746 CPU sec, 22.278 real sec
[0000] Calling mem_process_seqs.., task: 1143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519851, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 1203, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5216)
[0000][PE] mean and std.dev: (1305.39, 1023.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.95, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1072, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (1123.56, 383.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 402.599 CPU sec, 22.540 real sec
[0000] Calling mem_process_seqs.., task: 1144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1204988
	[0000][ M::kt_pipeline] read 1204988 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519960, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 776, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4420)
[0000][PE] mean and std.dev: (898.65, 847.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1519, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6024)
[0000][PE] mean and std.dev: (1894.55, 1377.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 401.700 CPU sec, 22.491 real sec
[0000] Calling mem_process_seqs.., task: 1145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519669, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 904, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5983)
[0000][PE] mean and std.dev: (1013.86, 986.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.34, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1456, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5912)
[0000][PE] mean and std.dev: (1632.72, 985.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204988 reads in 403.326 CPU sec, 22.589 real sec
[0000] Calling mem_process_seqs.., task: 1146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520124, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 874, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (948.24, 619.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.67, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1411, 1607, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (1736.74, 834.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 404.898 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 1147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520145, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1020, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1217.89, 1025.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1353, 1853, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6024)
[0000][PE] mean and std.dev: (2116.65, 1220.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 401.206 CPU sec, 22.473 real sec
[0000] Calling mem_process_seqs.., task: 1148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520190, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 650, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (1079.81, 1029.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1515, 2796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6290)
[0000][PE] mean and std.dev: (1899.15, 1321.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 401.725 CPU sec, 22.471 real sec
[0000] Calling mem_process_seqs.., task: 1149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519900, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 1191, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6498)
[0000][PE] mean and std.dev: (1420.50, 1574.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1393, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (1417.31, 669.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 400.130 CPU sec, 22.392 real sec
[0000] Calling mem_process_seqs.., task: 1150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520199, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 959, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7121)
[0000][PE] mean and std.dev: (1178.62, 962.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1526, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4862)
[0000][PE] mean and std.dev: (1645.24, 833.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 403.431 CPU sec, 22.591 real sec
[0000] Calling mem_process_seqs.., task: 1151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520307, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 1281, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1228.52, 1018.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1324, 1801, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (1859.32, 978.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 400.158 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 1152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519558, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 708, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (838.40, 677.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1302, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (1305.00, 543.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 404.473 CPU sec, 22.646 real sec
[0000] Calling mem_process_seqs.., task: 1153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519953, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 899, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (1037.26, 973.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.07, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1737, 3014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6586)
[0000][PE] mean and std.dev: (2138.31, 1333.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 403.044 CPU sec, 22.554 real sec
[0000] Calling mem_process_seqs.., task: 1154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520233, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (591, 1236, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5877)
[0000][PE] mean and std.dev: (1547.45, 1198.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1247, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4219)
[0000][PE] mean and std.dev: (1351.94, 784.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 400.753 CPU sec, 22.439 real sec
[0000] Calling mem_process_seqs.., task: 1155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520104, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 1124, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (1349.40, 1043.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 837, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (981.62, 514.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 401.243 CPU sec, 22.450 real sec
[0000] Calling mem_process_seqs.., task: 1156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519460, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (539, 1422, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5372)
[0000][PE] mean and std.dev: (1476.24, 1076.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 2015, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6256)
[0000][PE] mean and std.dev: (2000.85, 1211.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 404.182 CPU sec, 22.639 real sec
[0000] Calling mem_process_seqs.., task: 1157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520088, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 1453, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4661)
[0000][PE] mean and std.dev: (1335.67, 1001.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.13, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1364, 2584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5526)
[0000][PE] mean and std.dev: (1759.04, 975.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 402.540 CPU sec, 22.548 real sec
[0000] Calling mem_process_seqs.., task: 1158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519666, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 613, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (931.71, 859.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.45, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1325, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (1288.48, 407.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 400.497 CPU sec, 22.420 real sec
[0000] Calling mem_process_seqs.., task: 1159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520080, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 889, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (794.32, 582.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.49, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1822, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6302)
[0000][PE] mean and std.dev: (1633.55, 969.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 401.144 CPU sec, 22.502 real sec
[0000] Calling mem_process_seqs.., task: 1160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520170, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (514, 915, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1185.38, 834.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1359, 1697, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (1758.22, 689.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 401.020 CPU sec, 22.448 real sec
[0000] Calling mem_process_seqs.., task: 1161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520437, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 1112, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5893)
[0000][PE] mean and std.dev: (1247.67, 1198.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1545, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5053)
[0000][PE] mean and std.dev: (1349.80, 738.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 402.675 CPU sec, 22.644 real sec
[0000] Calling mem_process_seqs.., task: 1162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520317, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 1157, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (1102.03, 918.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1071, 3656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9156)
[0000][PE] mean and std.dev: (2036.21, 2034.98)
[0000][PE] low and high boundaries for proper pairs: (1, 11906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 401.695 CPU sec, 22.529 real sec
[0000] Calling mem_process_seqs.., task: 1163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519913, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 605, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2818)
[0000][PE] mean and std.dev: (771.36, 564.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1598, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (1465.37, 780.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 399.994 CPU sec, 22.367 real sec
[0000] Calling mem_process_seqs.., task: 1164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520559, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (703, 1131, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1333.70, 828.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.44, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 1243, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4353)
[0000][PE] mean and std.dev: (1114.12, 596.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 400.335 CPU sec, 22.438 real sec
[0000] Calling mem_process_seqs.., task: 1165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520223, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1144, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6297)
[0000][PE] mean and std.dev: (1374.45, 1028.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1267, 1472, 2680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5506)
[0000][PE] mean and std.dev: (1617.56, 758.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 397.687 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 1166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519948, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (605, 1718, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6533)
[0000][PE] mean and std.dev: (1851.44, 1493.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1138, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (1306.28, 785.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 399.452 CPU sec, 22.387 real sec
[0000] Calling mem_process_seqs.., task: 1167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520066, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (636, 1699, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5781)
[0000][PE] mean and std.dev: (1500.15, 1177.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1359, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (1425.04, 660.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 403.252 CPU sec, 22.581 real sec
[0000] Calling mem_process_seqs.., task: 1168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520470, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 814, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (927.00, 738.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1286, 1623, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4220)
[0000][PE] mean and std.dev: (1587.00, 596.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 398.472 CPU sec, 22.312 real sec
[0000] Calling mem_process_seqs.., task: 1169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519797, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 1223, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1129.11, 836.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1141, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4799)
[0000][PE] mean and std.dev: (1501.00, 1081.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 399.424 CPU sec, 22.371 real sec
[0000] Calling mem_process_seqs.., task: 1170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519850, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 1122, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4532)
[0000][PE] mean and std.dev: (1078.50, 745.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1117, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4515)
[0000][PE] mean and std.dev: (1331.16, 922.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 400.779 CPU sec, 22.417 real sec
[0000] Calling mem_process_seqs.., task: 1171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520037, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 722, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (1076.74, 1072.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.24, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1173, 3321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8241)
[0000][PE] mean and std.dev: (1909.81, 1891.17)
[0000][PE] low and high boundaries for proper pairs: (1, 10701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 400.897 CPU sec, 22.470 real sec
[0000] Calling mem_process_seqs.., task: 1172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520334, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 504, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (990.17, 965.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1791, 3817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9491)
[0000][PE] mean and std.dev: (2240.25, 1831.11)
[0000][PE] low and high boundaries for proper pairs: (1, 12328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 398.438 CPU sec, 22.301 real sec
[0000] Calling mem_process_seqs.., task: 1173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519679, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 1009, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (988.78, 701.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1205, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (1178.29, 523.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 402.411 CPU sec, 22.528 real sec
[0000] Calling mem_process_seqs.., task: 1174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519917, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1028, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5491)
[0000][PE] mean and std.dev: (1119.94, 927.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.84, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1133, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (1285.95, 681.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 402.233 CPU sec, 22.525 real sec
[0000] Calling mem_process_seqs.., task: 1175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519976, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 599, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (896.16, 754.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1326, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (1302.38, 543.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 401.513 CPU sec, 22.548 real sec
[0000] Calling mem_process_seqs.., task: 1176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520352, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 918, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (886.29, 548.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1442, 2860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6202)
[0000][PE] mean and std.dev: (1858.86, 1262.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 398.271 CPU sec, 22.308 real sec
[0000] Calling mem_process_seqs.., task: 1177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520415, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 658, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (969.19, 849.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.14, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1692, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5910)
[0000][PE] mean and std.dev: (1701.56, 886.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 402.294 CPU sec, 22.505 real sec
[0000] Calling mem_process_seqs.., task: 1178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520330, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 1090, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (1109.67, 972.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.34, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 2430, 2869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6247)
[0000][PE] mean and std.dev: (2171.71, 1180.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 399.455 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 1179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519429, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 800, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5902)
[0000][PE] mean and std.dev: (1260.24, 1130.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1723, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (1680.95, 730.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 404.409 CPU sec, 22.629 real sec
[0000] Calling mem_process_seqs.., task: 1180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519754, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (839, 1370, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (1358.42, 826.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.46, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1504, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5516)
[0000][PE] mean and std.dev: (1669.84, 1062.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 400.992 CPU sec, 22.463 real sec
[0000] Calling mem_process_seqs.., task: 1181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519509, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 666, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1000.46, 869.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.44, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1329, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4505)
[0000][PE] mean and std.dev: (1444.00, 887.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 401.770 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 1182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519814, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 837, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5660)
[0000][PE] mean and std.dev: (1231.04, 1250.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1744, 2850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6252)
[0000][PE] mean and std.dev: (2159.26, 1286.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 399.686 CPU sec, 22.373 real sec
[0000] Calling mem_process_seqs.., task: 1183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520049, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 677, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (882.44, 645.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1130, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (1272.46, 544.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 404.765 CPU sec, 22.697 real sec
[0000] Calling mem_process_seqs.., task: 1184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520223, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 532, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (730.90, 729.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1236, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (1258.00, 533.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 400.874 CPU sec, 22.424 real sec
[0000] Calling mem_process_seqs.., task: 1185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520115, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 598, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4122)
[0000][PE] mean and std.dev: (993.60, 911.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1131, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (1221.80, 711.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 400.936 CPU sec, 22.494 real sec
[0000] Calling mem_process_seqs.., task: 1186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520538, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (686, 1001, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (1224.95, 814.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1520, 3113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7097)
[0000][PE] mean and std.dev: (1975.00, 1293.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 406.741 CPU sec, 22.812 real sec
[0000] Calling mem_process_seqs.., task: 1187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519975, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (655, 1187, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (1068.33, 666.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1321, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4683)
[0000][PE] mean and std.dev: (1498.60, 917.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 400.315 CPU sec, 22.462 real sec
[0000] Calling mem_process_seqs.., task: 1188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520470, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 921, 3312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9084)
[0000][PE] mean and std.dev: (1904.42, 1962.79)
[0000][PE] low and high boundaries for proper pairs: (1, 11970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.45, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1457, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5139)
[0000][PE] mean and std.dev: (1615.75, 850.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 397.541 CPU sec, 22.251 real sec
[0000] Calling mem_process_seqs.., task: 1189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519925, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 1100, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4811)
[0000][PE] mean and std.dev: (1179.28, 962.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1420, 2780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6498)
[0000][PE] mean and std.dev: (1719.65, 1136.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 400.523 CPU sec, 22.411 real sec
[0000] Calling mem_process_seqs.., task: 1190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519885, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 632, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4812)
[0000][PE] mean and std.dev: (1246.00, 1262.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1719, 2674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1703.00, 964.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 401.613 CPU sec, 22.511 real sec
[0000] Calling mem_process_seqs.., task: 1191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519683, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 1271, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5044)
[0000][PE] mean and std.dev: (1389.06, 1095.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1275, 3209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7453)
[0000][PE] mean and std.dev: (1783.67, 1312.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 405.658 CPU sec, 22.709 real sec
[0000] Calling mem_process_seqs.., task: 1192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520322, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 801, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2870)
[0000][PE] mean and std.dev: (902.16, 635.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 1537, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4549)
[0000][PE] mean and std.dev: (1399.32, 880.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 403.219 CPU sec, 22.599 real sec
[0000] Calling mem_process_seqs.., task: 1193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520070, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 895, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5495)
[0000][PE] mean and std.dev: (1040.05, 921.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1250, 1855, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5102)
[0000][PE] mean and std.dev: (1607.55, 692.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 403.676 CPU sec, 22.588 real sec
[0000] Calling mem_process_seqs.., task: 1194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519995, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 1170, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5977)
[0000][PE] mean and std.dev: (1333.92, 1002.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1133, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (1301.56, 823.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 403.648 CPU sec, 22.650 real sec
[0000] Calling mem_process_seqs.., task: 1195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520134, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (613, 977, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (908.37, 507.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1310, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4460)
[0000][PE] mean and std.dev: (1619.48, 881.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 399.986 CPU sec, 22.412 real sec
[0000] Calling mem_process_seqs.., task: 1196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520341, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 1025, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (1226.43, 930.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1265, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (406, 2131)
[0000][PE] mean and std.dev: (1250.83, 332.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 400.975 CPU sec, 22.480 real sec
[0000] Calling mem_process_seqs.., task: 1197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520503, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 766, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6354)
[0000][PE] mean and std.dev: (1379.23, 1300.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1103, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (1208.46, 626.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 399.737 CPU sec, 22.424 real sec
[0000] Calling mem_process_seqs.., task: 1198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520233, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 1029, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (1090.37, 808.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.92, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1571, 1799, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (1661.21, 388.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 400.199 CPU sec, 22.414 real sec
[0000] Calling mem_process_seqs.., task: 1199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205344
	[0000][ M::kt_pipeline] read 1205344 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520181, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 658, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (997.36, 822.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 1696, 3187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7009)
[0000][PE] mean and std.dev: (2353.20, 1760.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 404.274 CPU sec, 22.649 real sec
[0000] Calling mem_process_seqs.., task: 1200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519816, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 912, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (1079.72, 817.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1238, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1557.54, 1071.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205344 reads in 403.779 CPU sec, 22.626 real sec
[0000] Calling mem_process_seqs.., task: 1201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520160, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 625, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (898.16, 745.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.92, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1370, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (1608.85, 888.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 402.849 CPU sec, 22.590 real sec
[0000] Calling mem_process_seqs.., task: 1202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519799, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 1026, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3866)
[0000][PE] mean and std.dev: (1091.93, 830.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.44, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1704, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5241)
[0000][PE] mean and std.dev: (1660.68, 654.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 399.491 CPU sec, 22.368 real sec
[0000] Calling mem_process_seqs.., task: 1203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519965, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (536, 947, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1247.21, 984.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1388, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4015)
[0000][PE] mean and std.dev: (1313.00, 562.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 402.700 CPU sec, 22.530 real sec
[0000] Calling mem_process_seqs.., task: 1204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519934, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 596, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2487)
[0000][PE] mean and std.dev: (598.05, 369.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1652, 2067, 3828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8180)
[0000][PE] mean and std.dev: (2461.73, 1437.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 403.721 CPU sec, 22.638 real sec
[0000] Calling mem_process_seqs.., task: 1205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519722, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1149, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6545)
[0000][PE] mean and std.dev: (1251.05, 1001.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1740, 2888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1727.95, 884.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 399.952 CPU sec, 22.438 real sec
[0000] Calling mem_process_seqs.., task: 1206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520035, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 727, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (646.40, 445.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (464, 1097, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6143)
[0000][PE] mean and std.dev: (1472.32, 1358.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 402.443 CPU sec, 22.518 real sec
[0000] Calling mem_process_seqs.., task: 1207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520240, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 871, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (811.00, 558.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.71, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 2108, 4682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12144)
[0000][PE] mean and std.dev: (2514.41, 2373.45)
[0000][PE] low and high boundaries for proper pairs: (1, 15875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 401.010 CPU sec, 22.469 real sec
[0000] Calling mem_process_seqs.., task: 1208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520028, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 504, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (662.87, 598.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.12, 120.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1537, 2654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6022)
[0000][PE] mean and std.dev: (1318.36, 780.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 404.935 CPU sec, 22.635 real sec
[0000] Calling mem_process_seqs.., task: 1209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519793, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 901, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7077)
[0000][PE] mean and std.dev: (1564.16, 1485.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1318, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4399)
[0000][PE] mean and std.dev: (1483.08, 960.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 401.307 CPU sec, 22.479 real sec
[0000] Calling mem_process_seqs.., task: 1210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520160, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 947, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4811)
[0000][PE] mean and std.dev: (1066.82, 993.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1337, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (1571.28, 1033.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 400.167 CPU sec, 22.457 real sec
[0000] Calling mem_process_seqs.., task: 1211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519952, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 527, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2652)
[0000][PE] mean and std.dev: (769.34, 597.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1323, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (1335.36, 783.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 403.707 CPU sec, 22.589 real sec
[0000] Calling mem_process_seqs.., task: 1212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520130, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (907, 1300, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (1415.26, 696.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1721, 3315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7723)
[0000][PE] mean and std.dev: (2012.53, 1378.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 401.400 CPU sec, 22.465 real sec
[0000] Calling mem_process_seqs.., task: 1213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519754, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (621, 779, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (1104.17, 747.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.66, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1459, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5976)
[0000][PE] mean and std.dev: (1599.33, 986.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 404.840 CPU sec, 22.690 real sec
[0000] Calling mem_process_seqs.., task: 1214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519555, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 1042, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5337)
[0000][PE] mean and std.dev: (1216.09, 1084.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1122, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6633)
[0000][PE] mean and std.dev: (1626.05, 1272.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 401.511 CPU sec, 22.502 real sec
[0000] Calling mem_process_seqs.., task: 1215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520070, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1068, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (975.24, 665.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1631, 3242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7470)
[0000][PE] mean and std.dev: (2328.05, 1545.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 399.173 CPU sec, 22.376 real sec
[0000] Calling mem_process_seqs.., task: 1216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520224, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (535, 1486, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5002)
[0000][PE] mean and std.dev: (1614.11, 1162.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1647, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (1559.14, 796.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 399.251 CPU sec, 22.349 real sec
[0000] Calling mem_process_seqs.., task: 1217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520008, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 922, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3975)
[0000][PE] mean and std.dev: (933.72, 752.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1447, 1732, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5341)
[0000][PE] mean and std.dev: (1980.75, 1051.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 401.948 CPU sec, 22.524 real sec
[0000] Calling mem_process_seqs.., task: 1218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519839, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (727, 1208, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (1266.56, 862.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 1644, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4705)
[0000][PE] mean and std.dev: (1804.32, 819.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 404.411 CPU sec, 22.656 real sec
[0000] Calling mem_process_seqs.., task: 1219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520047, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1199, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5080)
[0000][PE] mean and std.dev: (1170.79, 928.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.31, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (381, 2751, 5341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15261)
[0000][PE] mean and std.dev: (2866.00, 2261.73)
[0000][PE] low and high boundaries for proper pairs: (1, 20221)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1710, 3536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8330)
[0000][PE] mean and std.dev: (2432.14, 2111.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 400.776 CPU sec, 22.424 real sec
[0000] Calling mem_process_seqs.., task: 1220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519772, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 883, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (886.12, 625.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.34, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1947, 3074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7206)
[0000][PE] mean and std.dev: (1936.42, 1197.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 402.848 CPU sec, 22.519 real sec
[0000] Calling mem_process_seqs.., task: 1221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519812, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 1231, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5613)
[0000][PE] mean and std.dev: (1381.31, 1136.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1545, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1731.16, 967.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 402.377 CPU sec, 22.516 real sec
[0000] Calling mem_process_seqs.., task: 1222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519955, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (533, 1075, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6881)
[0000][PE] mean and std.dev: (1383.22, 1368.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1249, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5378)
[0000][PE] mean and std.dev: (1349.50, 770.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 399.484 CPU sec, 22.371 real sec
[0000] Calling mem_process_seqs.., task: 1223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520062, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 892, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5977)
[0000][PE] mean and std.dev: (1260.09, 1362.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1431, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (1463.67, 681.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 400.470 CPU sec, 22.474 real sec
[0000] Calling mem_process_seqs.., task: 1224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520226, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 850, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (824.25, 606.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.38, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1456, 2953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6463)
[0000][PE] mean and std.dev: (2121.57, 1530.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 402.991 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 1225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519877, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (489, 1126, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (1005.44, 696.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1513, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (1595.10, 756.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 399.947 CPU sec, 22.374 real sec
[0000] Calling mem_process_seqs.., task: 1226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520144, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 887, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (1038.08, 827.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1402, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5876)
[0000][PE] mean and std.dev: (1706.92, 1299.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 404.213 CPU sec, 22.624 real sec
[0000] Calling mem_process_seqs.., task: 1227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520151, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1331, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (1059.13, 690.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1168, 3623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9287)
[0000][PE] mean and std.dev: (2164.76, 2231.10)
[0000][PE] low and high boundaries for proper pairs: (1, 12119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 403.633 CPU sec, 22.615 real sec
[0000] Calling mem_process_seqs.., task: 1228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520138, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 680, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4825)
[0000][PE] mean and std.dev: (1013.77, 1037.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1181, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (1385.74, 912.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 397.143 CPU sec, 22.240 real sec
[0000] Calling mem_process_seqs.., task: 1229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520330, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 813, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4297)
[0000][PE] mean and std.dev: (1130.76, 892.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1213, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1266.44, 734.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 398.485 CPU sec, 22.317 real sec
[0000] Calling mem_process_seqs.., task: 1230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519725, 2, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 922, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3861)
[0000][PE] mean and std.dev: (977.33, 890.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.38, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1237, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (1312.22, 734.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 402.926 CPU sec, 22.611 real sec
[0000] Calling mem_process_seqs.., task: 1231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519967, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 1097, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (965.63, 573.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 902)
[0000][PE] mean and std.dev: (511.88, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1210, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6183)
[0000][PE] mean and std.dev: (1496.83, 966.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 400.594 CPU sec, 22.450 real sec
[0000] Calling mem_process_seqs.., task: 1232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519879, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 937, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3993)
[0000][PE] mean and std.dev: (922.78, 636.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.24, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1475, 3375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8119)
[0000][PE] mean and std.dev: (2152.38, 1720.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 403.418 CPU sec, 22.597 real sec
[0000] Calling mem_process_seqs.., task: 1233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519995, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 900, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5467)
[0000][PE] mean and std.dev: (1017.15, 832.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.98, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1736, 3249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7799)
[0000][PE] mean and std.dev: (2184.20, 1784.83)
[0000][PE] low and high boundaries for proper pairs: (1, 10074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 403.256 CPU sec, 22.585 real sec
[0000] Calling mem_process_seqs.., task: 1234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205342
	[0000][ M::kt_pipeline] read 1205342 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519593, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 1041, 2329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6143)
[0000][PE] mean and std.dev: (1114.38, 814.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1675, 2891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7101)
[0000][PE] mean and std.dev: (1885.00, 1474.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 402.306 CPU sec, 22.527 real sec
[0000] Calling mem_process_seqs.., task: 1235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519938, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1227, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5955)
[0000][PE] mean and std.dev: (1329.66, 1125.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.91, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1381, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (1426.28, 799.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205342 reads in 400.399 CPU sec, 22.443 real sec
[0000] Calling mem_process_seqs.., task: 1236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520111, 9, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 560, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (758.76, 661.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1521, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1667.38, 999.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 398.230 CPU sec, 22.276 real sec
[0000] Calling mem_process_seqs.., task: 1237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519873, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (768, 1396, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1635.00, 1448.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1190, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (1173.14, 785.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 401.431 CPU sec, 22.449 real sec
[0000] Calling mem_process_seqs.., task: 1238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520242, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 914, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (1060.29, 1033.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1047, 3768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9600)
[0000][PE] mean and std.dev: (2106.95, 2059.06)
[0000][PE] low and high boundaries for proper pairs: (1, 12516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 400.314 CPU sec, 22.448 real sec
[0000] Calling mem_process_seqs.., task: 1239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520063, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 808, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (1037.62, 797.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1546, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5437)
[0000][PE] mean and std.dev: (1437.53, 813.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 403.166 CPU sec, 22.549 real sec
[0000] Calling mem_process_seqs.., task: 1240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520273, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 953, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4193)
[0000][PE] mean and std.dev: (1050.03, 957.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.32, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1649, 2897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6387)
[0000][PE] mean and std.dev: (2058.21, 1468.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 400.105 CPU sec, 22.394 real sec
[0000] Calling mem_process_seqs.., task: 1241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520081, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 727, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (837.35, 639.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1212, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4939)
[0000][PE] mean and std.dev: (1472.05, 790.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 403.797 CPU sec, 22.732 real sec
[0000] Calling mem_process_seqs.., task: 1242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520216, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 553, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (784.44, 557.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1079, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (1182.29, 603.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 397.955 CPU sec, 22.255 real sec
[0000] Calling mem_process_seqs.., task: 1243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519856, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (832, 1216, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6484)
[0000][PE] mean and std.dev: (1738.96, 1372.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.79, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1827, 2583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5327)
[0000][PE] mean and std.dev: (1817.05, 1062.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 401.998 CPU sec, 22.519 real sec
[0000] Calling mem_process_seqs.., task: 1244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520362, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 1233, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (1175.44, 811.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1763, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4972)
[0000][PE] mean and std.dev: (1843.12, 1228.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 399.529 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 1245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520044, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 752, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (547.43, 366.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1103, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (1128.43, 504.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 400.937 CPU sec, 22.451 real sec
[0000] Calling mem_process_seqs.., task: 1246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520429, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 770, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (949.45, 817.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1929, 4619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11613)
[0000][PE] mean and std.dev: (2819.80, 2479.18)
[0000][PE] low and high boundaries for proper pairs: (1, 15110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 398.971 CPU sec, 22.382 real sec
[0000] Calling mem_process_seqs.., task: 1247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520179, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 687, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6151)
[0000][PE] mean and std.dev: (1199.83, 1214.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 880, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (1038.94, 724.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 400.834 CPU sec, 22.450 real sec
[0000] Calling mem_process_seqs.., task: 1248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520285, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (636, 1033, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (1198.44, 908.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1709, 3168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7114)
[0000][PE] mean and std.dev: (2035.20, 1152.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 400.332 CPU sec, 22.418 real sec
[0000] Calling mem_process_seqs.., task: 1249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519913, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 1226, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6475)
[0000][PE] mean and std.dev: (1699.43, 1560.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1443, 2428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5878)
[0000][PE] mean and std.dev: (1343.70, 932.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 405.254 CPU sec, 22.723 real sec
[0000] Calling mem_process_seqs.., task: 1250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520031, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 859, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6044)
[0000][PE] mean and std.dev: (1201.10, 1227.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1251, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (1333.44, 548.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 402.972 CPU sec, 22.538 real sec
[0000] Calling mem_process_seqs.., task: 1251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519696, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 867, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (944.71, 724.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1722, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (1553.62, 545.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 407.892 CPU sec, 22.850 real sec
[0000] Calling mem_process_seqs.., task: 1252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519982, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 875, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6176)
[0000][PE] mean and std.dev: (1373.36, 1258.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.29, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1303, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3466)
[0000][PE] mean and std.dev: (1267.57, 583.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 402.127 CPU sec, 22.530 real sec
[0000] Calling mem_process_seqs.., task: 1253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519782, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 898, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (948.92, 709.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1528, 2759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6413)
[0000][PE] mean and std.dev: (1936.26, 1448.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 405.927 CPU sec, 22.724 real sec
[0000] Calling mem_process_seqs.., task: 1254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520222, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 662, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (844.65, 664.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1540, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (1553.08, 904.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 399.523 CPU sec, 22.372 real sec
[0000] Calling mem_process_seqs.., task: 1255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520136, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 1435, 2703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7151)
[0000][PE] mean and std.dev: (1581.93, 1165.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1076, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (1123.45, 767.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 406.752 CPU sec, 22.808 real sec
[0000] Calling mem_process_seqs.., task: 1256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520011, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 672, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (946.08, 817.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.62, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 1357, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7166)
[0000][PE] mean and std.dev: (1345.06, 1197.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 402.675 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 1257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520448, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 506, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (862.05, 750.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1440, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5887)
[0000][PE] mean and std.dev: (1628.79, 1072.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 402.210 CPU sec, 22.524 real sec
[0000] Calling mem_process_seqs.., task: 1258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519936, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1040, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (890.31, 548.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1894, 3333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7597)
[0000][PE] mean and std.dev: (2493.11, 1730.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 400.857 CPU sec, 22.452 real sec
[0000] Calling mem_process_seqs.., task: 1259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519943, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 516, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (619.29, 489.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1251, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4866)
[0000][PE] mean and std.dev: (1296.48, 854.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 406.859 CPU sec, 22.772 real sec
[0000] Calling mem_process_seqs.., task: 1260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520537, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 1029, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4459)
[0000][PE] mean and std.dev: (1072.57, 871.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 896)
[0000][PE] mean and std.dev: (511.18, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1290, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1312.06, 642.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 402.906 CPU sec, 22.557 real sec
[0000] Calling mem_process_seqs.., task: 1261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520391, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 425, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (691.38, 560.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1142, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (1223.24, 972.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 403.779 CPU sec, 22.609 real sec
[0000] Calling mem_process_seqs.., task: 1262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520132, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 922, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (1076.04, 876.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.32, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1517, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5921)
[0000][PE] mean and std.dev: (1854.52, 1175.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 400.423 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 1263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519707, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 633, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (847.65, 699.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.24, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1082, 3052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7564)
[0000][PE] mean and std.dev: (1840.53, 1516.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 405.468 CPU sec, 22.830 real sec
[0000] Calling mem_process_seqs.., task: 1264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520355, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 936, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7244)
[0000][PE] mean and std.dev: (1571.70, 1678.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1223, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5479)
[0000][PE] mean and std.dev: (1638.00, 1319.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 400.839 CPU sec, 22.410 real sec
[0000] Calling mem_process_seqs.., task: 1265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520085, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (636, 792, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3594)
[0000][PE] mean and std.dev: (939.92, 609.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1457, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4946)
[0000][PE] mean and std.dev: (1689.64, 971.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 407.257 CPU sec, 22.883 real sec
[0000] Calling mem_process_seqs.., task: 1266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520218, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 922, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (1236.35, 1158.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1604, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7157)
[0000][PE] mean and std.dev: (1982.12, 1653.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 409.194 CPU sec, 22.903 real sec
[0000] Calling mem_process_seqs.., task: 1267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205320
	[0000][ M::kt_pipeline] read 1205320 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519809, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 803, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (1011.19, 741.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1117, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (1466.95, 900.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 407.772 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 1268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519888, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 902, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5814)
[0000][PE] mean and std.dev: (1374.55, 1228.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 2001, 3189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7119)
[0000][PE] mean and std.dev: (2271.22, 1521.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205320 reads in 407.565 CPU sec, 22.796 real sec
[0000] Calling mem_process_seqs.., task: 1269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519828, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (496, 1498, 3019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8065)
[0000][PE] mean and std.dev: (1804.87, 1659.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1264, 1649, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4891)
[0000][PE] mean and std.dev: (1614.12, 679.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 409.081 CPU sec, 22.888 real sec
[0000] Calling mem_process_seqs.., task: 1270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520044, 9, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 869, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (1137.00, 992.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.29, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1590, 3072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7098)
[0000][PE] mean and std.dev: (1790.68, 1064.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 405.504 CPU sec, 22.684 real sec
[0000] Calling mem_process_seqs.., task: 1271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519909, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 756, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (950.50, 726.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1752, 3072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7044)
[0000][PE] mean and std.dev: (2131.71, 1261.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 406.038 CPU sec, 22.731 real sec
[0000] Calling mem_process_seqs.., task: 1272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520164, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 894, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5349)
[0000][PE] mean and std.dev: (1099.20, 1036.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1706, 3475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8583)
[0000][PE] mean and std.dev: (2030.24, 1130.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 407.210 CPU sec, 22.786 real sec
[0000] Calling mem_process_seqs.., task: 1273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520174, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (706, 1060, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (1019.05, 616.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1447, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5055)
[0000][PE] mean and std.dev: (1691.15, 1067.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 399.771 CPU sec, 22.395 real sec
[0000] Calling mem_process_seqs.., task: 1274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519900, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 796, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (782.52, 534.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1409, 3217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8145)
[0000][PE] mean and std.dev: (1844.40, 1584.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 408.156 CPU sec, 22.880 real sec
[0000] Calling mem_process_seqs.., task: 1275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520546, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 704, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2565)
[0000][PE] mean and std.dev: (733.47, 520.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.84, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1479, 2982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6992)
[0000][PE] mean and std.dev: (1913.65, 1195.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 403.913 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 1276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520182, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 686, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (834.05, 741.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1210, 1881, 2829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6067)
[0000][PE] mean and std.dev: (1846.75, 722.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 406.100 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 1277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519526, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 642, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (816.33, 755.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1307, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5288)
[0000][PE] mean and std.dev: (1627.37, 975.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 408.373 CPU sec, 22.839 real sec
[0000] Calling mem_process_seqs.., task: 1278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520137, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 1138, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5171)
[0000][PE] mean and std.dev: (1341.45, 1023.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1423, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (1227.79, 553.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 407.351 CPU sec, 22.784 real sec
[0000] Calling mem_process_seqs.., task: 1279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519932, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 1390, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5384)
[0000][PE] mean and std.dev: (1352.23, 994.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1569, 3544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8396)
[0000][PE] mean and std.dev: (2264.64, 1751.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 405.665 CPU sec, 22.717 real sec
[0000] Calling mem_process_seqs.., task: 1280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520354, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (793, 1272, 3149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7861)
[0000][PE] mean and std.dev: (1725.62, 1462.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.49, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1361, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (1525.54, 766.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 406.016 CPU sec, 22.790 real sec
[0000] Calling mem_process_seqs.., task: 1281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520058, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 568, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2519)
[0000][PE] mean and std.dev: (596.09, 367.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1365, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2923)
[0000][PE] mean and std.dev: (1403.10, 497.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 408.920 CPU sec, 22.909 real sec
[0000] Calling mem_process_seqs.., task: 1282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520307, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (861, 1283, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5091)
[0000][PE] mean and std.dev: (1478.08, 1098.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1407, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4552)
[0000][PE] mean and std.dev: (1544.59, 807.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 405.922 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 1283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520472, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 917, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5810)
[0000][PE] mean and std.dev: (1234.22, 1238.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1164, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5579)
[0000][PE] mean and std.dev: (1351.58, 914.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 405.663 CPU sec, 22.716 real sec
[0000] Calling mem_process_seqs.., task: 1284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520465, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (673, 959, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1185.14, 925.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1259, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (1272.48, 750.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 407.357 CPU sec, 22.813 real sec
[0000] Calling mem_process_seqs.., task: 1285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519829, 2, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 745, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (846.07, 519.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.90, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1286, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4369)
[0000][PE] mean and std.dev: (1550.87, 922.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 405.515 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 1286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520023, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (995, 1484, 2540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (1515.29, 994.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.28, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1459, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5303)
[0000][PE] mean and std.dev: (1793.83, 1133.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 405.423 CPU sec, 22.704 real sec
[0000] Calling mem_process_seqs.., task: 1287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520418, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (513, 728, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4959)
[0000][PE] mean and std.dev: (1055.00, 1009.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (644, 3552, 5609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15539)
[0000][PE] mean and std.dev: (3345.80, 2610.99)
[0000][PE] low and high boundaries for proper pairs: (1, 20504)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 2349, 3648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8500)
[0000][PE] mean and std.dev: (2697.57, 1703.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 406.965 CPU sec, 22.771 real sec
[0000] Calling mem_process_seqs.., task: 1288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520289, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (877, 1350, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (1252.04, 710.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1466, 1717, 3166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6566)
[0000][PE] mean and std.dev: (2056.29, 1249.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 401.183 CPU sec, 22.514 real sec
[0000] Calling mem_process_seqs.., task: 1289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520436, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (569, 1101, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5990)
[0000][PE] mean and std.dev: (1164.00, 910.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1704, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (1464.41, 648.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 405.097 CPU sec, 22.673 real sec
[0000] Calling mem_process_seqs.., task: 1290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520151, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1360, 2826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7528)
[0000][PE] mean and std.dev: (1540.56, 1173.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1600, 2530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5708)
[0000][PE] mean and std.dev: (1837.82, 1114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 407.909 CPU sec, 22.813 real sec
[0000] Calling mem_process_seqs.., task: 1291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520119, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 433, 797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1697)
[0000][PE] mean and std.dev: (493.87, 330.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1264, 1781, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (1824.52, 915.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 409.717 CPU sec, 22.935 real sec
[0000] Calling mem_process_seqs.., task: 1292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520040, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 797, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (838.90, 614.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (657, 1341, 3310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8616)
[0000][PE] mean and std.dev: (1659.40, 1326.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 409.601 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 1293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519805, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 972, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4544)
[0000][PE] mean and std.dev: (1227.08, 949.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1508, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3839)
[0000][PE] mean and std.dev: (1484.45, 842.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 407.905 CPU sec, 22.826 real sec
[0000] Calling mem_process_seqs.., task: 1294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520071, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 747, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4492)
[0000][PE] mean and std.dev: (950.52, 795.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1626, 2547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5637)
[0000][PE] mean and std.dev: (1677.95, 853.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 405.198 CPU sec, 22.686 real sec
[0000] Calling mem_process_seqs.., task: 1295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519748, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 867, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3008)
[0000][PE] mean and std.dev: (774.56, 429.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1400, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1478.73, 694.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 411.341 CPU sec, 23.075 real sec
[0000] Calling mem_process_seqs.., task: 1296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519887, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 622, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3594)
[0000][PE] mean and std.dev: (783.00, 588.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1547, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5096)
[0000][PE] mean and std.dev: (1644.09, 957.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 404.997 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 1297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520441, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 823, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (1076.71, 864.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1528, 2809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6611)
[0000][PE] mean and std.dev: (1878.63, 1225.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 403.210 CPU sec, 22.560 real sec
[0000] Calling mem_process_seqs.., task: 1298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520047, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (575, 1052, 3427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9131)
[0000][PE] mean and std.dev: (2057.72, 2158.77)
[0000][PE] low and high boundaries for proper pairs: (1, 11983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1419, 2430, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6153)
[0000][PE] mean and std.dev: (2233.17, 1051.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 407.127 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 1299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520380, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 852, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (923.29, 774.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1650, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6497)
[0000][PE] mean and std.dev: (1803.21, 1139.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 404.637 CPU sec, 22.682 real sec
[0000] Calling mem_process_seqs.., task: 1300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520163, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (476, 938, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1318.31, 1028.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1705, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (1504.32, 845.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 408.280 CPU sec, 22.855 real sec
[0000] Calling mem_process_seqs.., task: 1301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519752, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 892, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3834)
[0000][PE] mean and std.dev: (1035.79, 882.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1336, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (1208.86, 552.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 406.338 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 1302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520378, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 978, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4439)
[0000][PE] mean and std.dev: (987.25, 848.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1214, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (1469.89, 775.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 405.028 CPU sec, 22.675 real sec
[0000] Calling mem_process_seqs.., task: 1303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520144, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (509, 918, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (1060.10, 735.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1792, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1347.00, 764.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 405.733 CPU sec, 22.685 real sec
[0000] Calling mem_process_seqs.., task: 1304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520447, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 699, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (1085.74, 1163.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1476, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (1324.72, 632.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 406.909 CPU sec, 22.801 real sec
[0000] Calling mem_process_seqs.., task: 1305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 520097, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 607, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6677)
[0000][PE] mean and std.dev: (1365.53, 1290.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.99, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (320, 2146, 4070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11570)
[0000][PE] mean and std.dev: (2576.10, 2384.54)
[0000][PE] low and high boundaries for proper pairs: (1, 15320)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1385, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (349, 2469)
[0000][PE] mean and std.dev: (1327.42, 291.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 407.608 CPU sec, 22.792 real sec
[0000] Calling mem_process_seqs.., task: 1306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520172, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 730, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (580.31, 328.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1293, 2189, 5227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13095)
[0000][PE] mean and std.dev: (3261.84, 2610.47)
[0000][PE] low and high boundaries for proper pairs: (1, 17029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 405.179 CPU sec, 22.694 real sec
[0000] Calling mem_process_seqs.., task: 1307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520054, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (885, 1618, 3049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7377)
[0000][PE] mean and std.dev: (1806.45, 1255.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1731, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6204)
[0000][PE] mean and std.dev: (1829.60, 1108.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 407.558 CPU sec, 22.830 real sec
[0000] Calling mem_process_seqs.., task: 1308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520266, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (597, 863, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (931.16, 590.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1754, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (1694.50, 883.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 407.460 CPU sec, 22.825 real sec
[0000] Calling mem_process_seqs.., task: 1309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520266, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 996, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1207.58, 913.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.49, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1556, 2479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5163)
[0000][PE] mean and std.dev: (1658.45, 840.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 402.194 CPU sec, 22.527 real sec
[0000] Calling mem_process_seqs.., task: 1310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519984, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 1213, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5885)
[0000][PE] mean and std.dev: (1444.83, 1436.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1336, 2934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7538)
[0000][PE] mean and std.dev: (1722.00, 1378.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 408.161 CPU sec, 22.859 real sec
[0000] Calling mem_process_seqs.., task: 1311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519914, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1236, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (1274.00, 1204.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1362, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5971)
[0000][PE] mean and std.dev: (1716.18, 937.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 407.051 CPU sec, 22.803 real sec
[0000] Calling mem_process_seqs.., task: 1312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520213, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 822, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (891.82, 754.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1935, 3162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7282)
[0000][PE] mean and std.dev: (2066.94, 1367.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 405.454 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 1313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520038, 1, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 714, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (797.17, 687.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1638, 3193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7713)
[0000][PE] mean and std.dev: (2197.12, 1806.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 402.888 CPU sec, 22.559 real sec
[0000] Calling mem_process_seqs.., task: 1314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519778, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 837, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3781)
[0000][PE] mean and std.dev: (972.70, 638.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1668, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5357)
[0000][PE] mean and std.dev: (1509.16, 856.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 407.420 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 1315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520057, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 1177, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (1276.72, 1060.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1567, 2733, 3852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8422)
[0000][PE] mean and std.dev: (2755.75, 1656.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 403.681 CPU sec, 22.611 real sec
[0000] Calling mem_process_seqs.., task: 1316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519867, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 767, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2944)
[0000][PE] mean and std.dev: (862.70, 762.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1374, 2749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6109)
[0000][PE] mean and std.dev: (1585.43, 908.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 404.450 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 1317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519701, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 986, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1138.00, 891.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1402, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (1572.96, 943.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 404.113 CPU sec, 22.601 real sec
[0000] Calling mem_process_seqs.., task: 1318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520157, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (691, 1098, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1255.75, 835.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.46, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1391, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (1451.87, 613.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 402.948 CPU sec, 22.580 real sec
[0000] Calling mem_process_seqs.., task: 1319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520459, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1032, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5884)
[0000][PE] mean and std.dev: (1207.92, 1045.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1005, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (1180.68, 510.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 405.439 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 1320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520113, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 885, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1045.32, 873.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 2106, 3383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8273)
[0000][PE] mean and std.dev: (2264.57, 1555.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 408.337 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 1321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205370
	[0000][ M::kt_pipeline] read 1205370 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520214, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 1216, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5945)
[0000][PE] mean and std.dev: (1499.88, 1310.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1637, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (1525.14, 612.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 404.749 CPU sec, 22.706 real sec
[0000] Calling mem_process_seqs.., task: 1322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519840, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (750, 1105, 2626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6378)
[0000][PE] mean and std.dev: (1692.23, 1345.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1505, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4619)
[0000][PE] mean and std.dev: (1523.32, 934.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205370 reads in 408.475 CPU sec, 22.841 real sec
[0000] Calling mem_process_seqs.., task: 1323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519489, 12, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (522, 940, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1199.41, 921.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (549, 1746, 5442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15228)
[0000][PE] mean and std.dev: (2438.67, 2172.56)
[0000][PE] low and high boundaries for proper pairs: (1, 20121)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1461, 3462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8330)
[0000][PE] mean and std.dev: (2486.44, 2287.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 407.475 CPU sec, 22.883 real sec
[0000] Calling mem_process_seqs.., task: 1324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520085, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1005, 2654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7274)
[0000][PE] mean and std.dev: (1278.04, 1336.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1224, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (1389.90, 500.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 405.606 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 1325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520076, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 402, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2168)
[0000][PE] mean and std.dev: (620.11, 542.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1416, 2621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5727)
[0000][PE] mean and std.dev: (1612.81, 911.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 405.451 CPU sec, 22.704 real sec
[0000] Calling mem_process_seqs.., task: 1326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520214, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1103, 1561, 3268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7598)
[0000][PE] mean and std.dev: (2004.07, 1711.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1448, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3461)
[0000][PE] mean and std.dev: (1290.53, 581.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 402.592 CPU sec, 22.534 real sec
[0000] Calling mem_process_seqs.., task: 1327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520145, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1021, 2645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7153)
[0000][PE] mean and std.dev: (1380.94, 1126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1851, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1698.75, 927.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 404.510 CPU sec, 22.628 real sec
[0000] Calling mem_process_seqs.., task: 1328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519909, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (505, 759, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (1103.95, 950.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1303, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (1304.45, 545.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 405.706 CPU sec, 22.710 real sec
[0000] Calling mem_process_seqs.., task: 1329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520351, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 924, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (920.30, 754.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1349, 2026, 4209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9929)
[0000][PE] mean and std.dev: (2561.30, 2189.90)
[0000][PE] low and high boundaries for proper pairs: (1, 12789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 407.174 CPU sec, 22.804 real sec
[0000] Calling mem_process_seqs.., task: 1330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205304
	[0000][ M::kt_pipeline] read 1205304 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519960, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (717, 1190, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5346)
[0000][PE] mean and std.dev: (1415.08, 1074.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1698, 4063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10307)
[0000][PE] mean and std.dev: (2249.40, 1714.44)
[0000][PE] low and high boundaries for proper pairs: (1, 13429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 404.641 CPU sec, 22.626 real sec
[0000] Calling mem_process_seqs.., task: 1331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519920, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1100, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (1250.17, 1039.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1370, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5124)
[0000][PE] mean and std.dev: (1620.46, 1118.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205304 reads in 407.696 CPU sec, 22.824 real sec
[0000] Calling mem_process_seqs.., task: 1332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519879, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 808, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5768)
[0000][PE] mean and std.dev: (1182.93, 1168.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1694, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5864)
[0000][PE] mean and std.dev: (2000.60, 1352.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 404.509 CPU sec, 22.618 real sec
[0000] Calling mem_process_seqs.., task: 1333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520190, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 417, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2252)
[0000][PE] mean and std.dev: (414.40, 276.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.33, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1437, 2736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6606)
[0000][PE] mean and std.dev: (1812.05, 1455.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 403.295 CPU sec, 22.597 real sec
[0000] Calling mem_process_seqs.., task: 1334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520041, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 1126, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (1058.42, 795.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1342, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1643.59, 1031.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 404.575 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 1335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519595, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (769, 1287, 3294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8344)
[0000][PE] mean and std.dev: (1960.79, 1881.41)
[0000][PE] low and high boundaries for proper pairs: (1, 10869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1413, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (1437.62, 716.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 405.570 CPU sec, 22.697 real sec
[0000] Calling mem_process_seqs.., task: 1336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519971, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 893, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7593)
[0000][PE] mean and std.dev: (1321.00, 1436.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1999, 2939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6389)
[0000][PE] mean and std.dev: (2016.48, 1298.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 405.337 CPU sec, 22.705 real sec
[0000] Calling mem_process_seqs.., task: 1337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520032, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 623, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (861.29, 602.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1229, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1350.41, 617.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 400.065 CPU sec, 22.393 real sec
[0000] Calling mem_process_seqs.., task: 1338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520181, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 1153, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3889)
[0000][PE] mean and std.dev: (1194.59, 891.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.66, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1472, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (1500.05, 820.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 403.076 CPU sec, 22.599 real sec
[0000] Calling mem_process_seqs.., task: 1339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519725, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (685, 1213, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6409)
[0000][PE] mean and std.dev: (1567.00, 1276.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1331, 1607, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3713)
[0000][PE] mean and std.dev: (1611.10, 653.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 406.009 CPU sec, 22.698 real sec
[0000] Calling mem_process_seqs.., task: 1340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519960, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 807, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2575)
[0000][PE] mean and std.dev: (699.71, 509.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 2077, 3423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7739)
[0000][PE] mean and std.dev: (2213.00, 1517.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 406.764 CPU sec, 22.778 real sec
[0000] Calling mem_process_seqs.., task: 1341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520414, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 1164, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (1138.16, 926.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1403, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1437.62, 742.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 401.131 CPU sec, 22.512 real sec
[0000] Calling mem_process_seqs.., task: 1342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520369, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 1025, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6536)
[0000][PE] mean and std.dev: (1558.68, 1492.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1436, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4794)
[0000][PE] mean and std.dev: (1520.42, 722.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 400.011 CPU sec, 22.376 real sec
[0000] Calling mem_process_seqs.., task: 1343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520193, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 812, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (673.48, 380.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1434, 3796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9724)
[0000][PE] mean and std.dev: (2179.24, 2059.63)
[0000][PE] low and high boundaries for proper pairs: (1, 12688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 407.861 CPU sec, 22.856 real sec
[0000] Calling mem_process_seqs.., task: 1344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520479, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 1139, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1315.86, 1177.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 2106, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6025)
[0000][PE] mean and std.dev: (1918.06, 1172.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 402.060 CPU sec, 22.544 real sec
[0000] Calling mem_process_seqs.., task: 1345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519872, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 885, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (801.75, 531.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.33, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1176, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (1126.24, 624.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 404.537 CPU sec, 22.642 real sec
[0000] Calling mem_process_seqs.., task: 1346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519630, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1479, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1534.41, 1216.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1153, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (1433.29, 836.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 402.913 CPU sec, 22.522 real sec
[0000] Calling mem_process_seqs.., task: 1347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519830, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (609, 981, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (1041.69, 645.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1119, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (1199.52, 545.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 403.054 CPU sec, 22.552 real sec
[0000] Calling mem_process_seqs.., task: 1348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520306, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (505, 1175, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4939)
[0000][PE] mean and std.dev: (1364.52, 1230.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1336, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (1477.96, 896.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 402.616 CPU sec, 22.556 real sec
[0000] Calling mem_process_seqs.., task: 1349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520376, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 536, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2535)
[0000][PE] mean and std.dev: (680.71, 468.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1335, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5019)
[0000][PE] mean and std.dev: (1494.12, 960.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 404.801 CPU sec, 22.671 real sec
[0000] Calling mem_process_seqs.., task: 1350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520396, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 658, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (891.91, 679.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.47, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1160, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (1390.27, 914.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 405.829 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 1351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519916, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 863, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (1172.71, 932.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1056, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5972)
[0000][PE] mean and std.dev: (1725.12, 1171.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 404.758 CPU sec, 22.643 real sec
[0000] Calling mem_process_seqs.., task: 1352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520292, 0, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 543, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (664.67, 463.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1293, 1918, 3618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8268)
[0000][PE] mean and std.dev: (2442.35, 1747.28)
[0000][PE] low and high boundaries for proper pairs: (1, 10593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 404.142 CPU sec, 22.646 real sec
[0000] Calling mem_process_seqs.., task: 1353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519662, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (633, 1560, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6996)
[0000][PE] mean and std.dev: (1793.76, 1623.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1592, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5056)
[0000][PE] mean and std.dev: (1746.19, 1214.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 404.652 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 1354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520110, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 764, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5296)
[0000][PE] mean and std.dev: (1158.96, 1054.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.85, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1419, 3202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7916)
[0000][PE] mean and std.dev: (1956.52, 1564.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 403.618 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 1355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205356
	[0000][ M::kt_pipeline] read 1205356 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519997, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 697, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5537)
[0000][PE] mean and std.dev: (1011.10, 788.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1503, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (1522.81, 767.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 402.693 CPU sec, 22.562 real sec
[0000] Calling mem_process_seqs.., task: 1356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 520135, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (630, 1541, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5223)
[0000][PE] mean and std.dev: (1644.19, 1241.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1168, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1314.75, 621.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205356 reads in 407.045 CPU sec, 22.810 real sec
[0000] Calling mem_process_seqs.., task: 1357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519958, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 939, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (1284.12, 1160.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1412, 1491, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (1722.89, 795.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 404.327 CPU sec, 22.622 real sec
[0000] Calling mem_process_seqs.., task: 1358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519910, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (809, 1214, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6125)
[0000][PE] mean and std.dev: (1638.96, 1280.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1245, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (1058.94, 631.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 403.145 CPU sec, 22.562 real sec
[0000] Calling mem_process_seqs.., task: 1359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520238, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 722, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (731.00, 584.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1592, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (1731.96, 1170.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 403.598 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 1360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520091, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (542, 1091, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6782)
[0000][PE] mean and std.dev: (1725.43, 1663.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.12, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1451, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1460.76, 860.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 403.096 CPU sec, 22.539 real sec
[0000] Calling mem_process_seqs.., task: 1361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520163, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (495, 1128, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5463)
[0000][PE] mean and std.dev: (1339.19, 1218.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1903, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5483)
[0000][PE] mean and std.dev: (1904.11, 1269.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 400.693 CPU sec, 22.411 real sec
[0000] Calling mem_process_seqs.., task: 1362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519932, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1340, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5547)
[0000][PE] mean and std.dev: (1286.41, 1207.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1806, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (1643.22, 685.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 405.047 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 1363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520348, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1048, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5088)
[0000][PE] mean and std.dev: (1039.14, 845.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1202, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (1190.24, 553.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 401.180 CPU sec, 22.454 real sec
[0000] Calling mem_process_seqs.., task: 1364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520170, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (826, 1480, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5779)
[0000][PE] mean and std.dev: (1434.30, 918.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1530, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (1295.71, 547.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 404.642 CPU sec, 22.677 real sec
[0000] Calling mem_process_seqs.., task: 1365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520220, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1282, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7803)
[0000][PE] mean and std.dev: (1456.52, 1316.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1477, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5190)
[0000][PE] mean and std.dev: (2107.60, 1415.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 401.788 CPU sec, 22.515 real sec
[0000] Calling mem_process_seqs.., task: 1366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519733, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1099, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (1169.19, 949.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1593, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1574.57, 906.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 408.668 CPU sec, 22.857 real sec
[0000] Calling mem_process_seqs.., task: 1367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520069, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 1475, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6225)
[0000][PE] mean and std.dev: (1424.67, 1192.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1464, 4382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10698)
[0000][PE] mean and std.dev: (2275.52, 1950.28)
[0000][PE] low and high boundaries for proper pairs: (1, 13856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 401.388 CPU sec, 22.473 real sec
[0000] Calling mem_process_seqs.., task: 1368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519874, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 732, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6678)
[0000][PE] mean and std.dev: (1008.67, 1033.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1802, 3027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6787)
[0000][PE] mean and std.dev: (2113.23, 1432.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 402.409 CPU sec, 22.535 real sec
[0000] Calling mem_process_seqs.., task: 1369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 520088, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 874, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (868.62, 818.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1366, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1542.13, 781.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 405.490 CPU sec, 22.719 real sec
[0000] Calling mem_process_seqs.., task: 1370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520067, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 816, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (981.42, 795.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.52, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1799, 3541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8415)
[0000][PE] mean and std.dev: (2378.74, 1561.01)
[0000][PE] low and high boundaries for proper pairs: (1, 10852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 403.878 CPU sec, 22.601 real sec
[0000] Calling mem_process_seqs.., task: 1371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205314
	[0000][ M::kt_pipeline] read 1205314 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520304, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 877, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5006)
[0000][PE] mean and std.dev: (1135.54, 887.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1325, 1621, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (1718.18, 759.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 404.290 CPU sec, 22.613 real sec
[0000] Calling mem_process_seqs.., task: 1372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520412, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 807, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (747.04, 592.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1372, 2429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5339)
[0000][PE] mean and std.dev: (1615.21, 1066.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205314 reads in 405.319 CPU sec, 22.720 real sec
[0000] Calling mem_process_seqs.., task: 1373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520134, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 724, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (1027.81, 833.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.84, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1393, 1932, 3612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8050)
[0000][PE] mean and std.dev: (2703.74, 2014.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 403.344 CPU sec, 22.556 real sec
[0000] Calling mem_process_seqs.., task: 1374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520063, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 683, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (895.87, 845.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1721, 2654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5654)
[0000][PE] mean and std.dev: (1750.10, 1110.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 407.541 CPU sec, 22.814 real sec
[0000] Calling mem_process_seqs.., task: 1375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520024, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 519, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2345)
[0000][PE] mean and std.dev: (589.70, 456.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1542, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1763.48, 1391.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 404.631 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 1376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520248, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (571, 1296, 2734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7060)
[0000][PE] mean and std.dev: (1709.81, 1418.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1638, 2859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6247)
[0000][PE] mean and std.dev: (1919.75, 1020.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 404.134 CPU sec, 22.607 real sec
[0000] Calling mem_process_seqs.., task: 1377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520031, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 710, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (898.78, 629.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.48, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1402, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4170)
[0000][PE] mean and std.dev: (1472.65, 724.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 405.776 CPU sec, 22.740 real sec
[0000] Calling mem_process_seqs.., task: 1378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519793, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 767, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4773)
[0000][PE] mean and std.dev: (1129.16, 893.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.49, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 900, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (930.75, 443.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 405.082 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 1379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519690, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (919, 1407, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1205.95, 684.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.59, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1475, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6312)
[0000][PE] mean and std.dev: (1796.79, 1207.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 405.541 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 1380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519991, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 696, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5520)
[0000][PE] mean and std.dev: (1244.86, 1229.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1363, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5625)
[0000][PE] mean and std.dev: (1487.76, 856.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 404.300 CPU sec, 22.644 real sec
[0000] Calling mem_process_seqs.., task: 1381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520623, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 954, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6509)
[0000][PE] mean and std.dev: (1561.35, 1660.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1351, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1388.14, 637.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 402.037 CPU sec, 22.499 real sec
[0000] Calling mem_process_seqs.., task: 1382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520590, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (578, 1022, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5447)
[0000][PE] mean and std.dev: (1133.61, 917.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1355, 2885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6587)
[0000][PE] mean and std.dev: (1708.42, 1005.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 401.499 CPU sec, 22.514 real sec
[0000] Calling mem_process_seqs.., task: 1383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519968, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 942, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1038.78, 833.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1284, 1849, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6120)
[0000][PE] mean and std.dev: (1932.76, 1046.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 405.139 CPU sec, 22.684 real sec
[0000] Calling mem_process_seqs.., task: 1384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520387, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 702, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (986.61, 791.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1224, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5104)
[0000][PE] mean and std.dev: (1544.36, 861.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 402.176 CPU sec, 22.521 real sec
[0000] Calling mem_process_seqs.., task: 1385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519760, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 592, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2633)
[0000][PE] mean and std.dev: (558.38, 328.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 1394, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (1318.62, 832.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 402.814 CPU sec, 22.568 real sec
[0000] Calling mem_process_seqs.., task: 1386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519896, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1020, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (1165.71, 953.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.77, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1396, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5720)
[0000][PE] mean and std.dev: (1713.96, 1237.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 405.091 CPU sec, 22.689 real sec
[0000] Calling mem_process_seqs.., task: 1387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519887, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 529, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2215)
[0000][PE] mean and std.dev: (652.61, 474.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.84, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (158, 2022, 4606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13502)
[0000][PE] mean and std.dev: (2249.80, 2247.22)
[0000][PE] low and high boundaries for proper pairs: (1, 17950)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1393, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (1496.12, 671.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 407.875 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 1388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520452, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 942, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (1086.63, 1075.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1771, 4279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10409)
[0000][PE] mean and std.dev: (2587.57, 2061.42)
[0000][PE] low and high boundaries for proper pairs: (1, 13474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 406.733 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 1389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519867, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 969, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5312)
[0000][PE] mean and std.dev: (1059.27, 811.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1463, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (1396.57, 540.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 405.165 CPU sec, 22.671 real sec
[0000] Calling mem_process_seqs.., task: 1390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520111, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 1123, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (1108.73, 758.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1367, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (1362.86, 707.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 401.786 CPU sec, 22.505 real sec
[0000] Calling mem_process_seqs.., task: 1391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 519932, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1032, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1054.41, 752.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.96, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1557, 3264, 5234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12588)
[0000][PE] mean and std.dev: (3641.00, 2636.17)
[0000][PE] low and high boundaries for proper pairs: (1, 16265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 408.883 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 1392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520088, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (667, 1016, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6073)
[0000][PE] mean and std.dev: (1511.95, 1434.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.21, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1593, 1762, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4716)
[0000][PE] mean and std.dev: (2041.11, 952.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 403.679 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 1393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520110, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 1073, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (1141.94, 861.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1737, 3354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7610)
[0000][PE] mean and std.dev: (2621.87, 2120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 11105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 404.058 CPU sec, 22.638 real sec
[0000] Calling mem_process_seqs.., task: 1394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519873, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 920, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4544)
[0000][PE] mean and std.dev: (1025.67, 771.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1457, 1686, 3111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6419)
[0000][PE] mean and std.dev: (2175.21, 1346.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 398.295 CPU sec, 22.297 real sec
[0000] Calling mem_process_seqs.., task: 1395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519821, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 928, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1110.56, 954.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1518, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5337)
[0000][PE] mean and std.dev: (1859.67, 1101.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 402.949 CPU sec, 22.562 real sec
[0000] Calling mem_process_seqs.., task: 1396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520592, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (470, 1007, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1134.31, 673.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1487, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (1489.29, 501.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 399.120 CPU sec, 22.325 real sec
[0000] Calling mem_process_seqs.., task: 1397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519972, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 860, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5822)
[0000][PE] mean and std.dev: (1327.00, 1116.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1448, 3788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9068)
[0000][PE] mean and std.dev: (2350.86, 1976.53)
[0000][PE] low and high boundaries for proper pairs: (1, 11708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 406.699 CPU sec, 22.759 real sec
[0000] Calling mem_process_seqs.., task: 1398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519699, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 655, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (868.28, 757.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1309, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5495)
[0000][PE] mean and std.dev: (1689.95, 1058.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 404.189 CPU sec, 22.673 real sec
[0000] Calling mem_process_seqs.., task: 1399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520152, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (598, 1008, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1298.77, 1003.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1321, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5602)
[0000][PE] mean and std.dev: (1645.19, 1041.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 401.056 CPU sec, 22.449 real sec
[0000] Calling mem_process_seqs.., task: 1400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519970, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1251, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6442)
[0000][PE] mean and std.dev: (1524.32, 1476.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1721, 2987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7027)
[0000][PE] mean and std.dev: (2007.47, 1418.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 405.463 CPU sec, 22.731 real sec
[0000] Calling mem_process_seqs.., task: 1401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520253, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 447, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5936)
[0000][PE] mean and std.dev: (1104.05, 1172.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1475, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (1284.67, 701.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 402.072 CPU sec, 22.507 real sec
[0000] Calling mem_process_seqs.., task: 1402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519883, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (483, 1608, 3035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8139)
[0000][PE] mean and std.dev: (2262.35, 2173.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.69, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1580, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5128)
[0000][PE] mean and std.dev: (1853.09, 1099.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 404.468 CPU sec, 22.640 real sec
[0000] Calling mem_process_seqs.., task: 1403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519970, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (635, 1438, 2974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7652)
[0000][PE] mean and std.dev: (1816.35, 1376.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1680, 2853, 3407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6861)
[0000][PE] mean and std.dev: (2645.93, 1288.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 406.487 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 1404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520389, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (562, 1190, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5410)
[0000][PE] mean and std.dev: (1497.97, 1290.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 1984, 5116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12646)
[0000][PE] mean and std.dev: (2970.71, 2065.69)
[0000][PE] low and high boundaries for proper pairs: (1, 16411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 403.245 CPU sec, 22.602 real sec
[0000] Calling mem_process_seqs.., task: 1405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519534, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (639, 1458, 3203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8331)
[0000][PE] mean and std.dev: (1844.70, 1689.07)
[0000][PE] low and high boundaries for proper pairs: (1, 10895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1964, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6079)
[0000][PE] mean and std.dev: (1881.04, 1065.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 403.215 CPU sec, 22.553 real sec
[0000] Calling mem_process_seqs.., task: 1406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519366, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 791, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (1102.21, 1103.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1521, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5032)
[0000][PE] mean and std.dev: (1486.21, 1037.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 404.202 CPU sec, 22.611 real sec
[0000] Calling mem_process_seqs.., task: 1407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520432, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 806, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5292)
[0000][PE] mean and std.dev: (1117.75, 850.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 996, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (1535.08, 1143.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 403.713 CPU sec, 22.597 real sec
[0000] Calling mem_process_seqs.., task: 1408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519941, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 789, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (898.12, 690.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1133, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (1190.92, 762.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 405.037 CPU sec, 22.685 real sec
[0000] Calling mem_process_seqs.., task: 1409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520096, 3, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 775, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (1070.23, 833.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1551, 3073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7169)
[0000][PE] mean and std.dev: (1849.59, 1385.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 406.140 CPU sec, 22.750 real sec
[0000] Calling mem_process_seqs.., task: 1410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519897, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 798, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (729.04, 559.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1370, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5063)
[0000][PE] mean and std.dev: (1431.55, 977.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 404.032 CPU sec, 22.607 real sec
[0000] Calling mem_process_seqs.., task: 1411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520174, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 578, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (745.32, 672.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.75, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1703, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5912)
[0000][PE] mean and std.dev: (1792.43, 957.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 403.913 CPU sec, 22.624 real sec
[0000] Calling mem_process_seqs.., task: 1412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520054, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 800, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6066)
[0000][PE] mean and std.dev: (1191.03, 1216.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.87, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (253, 1016, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (701.88, 432.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4201)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1400, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3046)
[0000][PE] mean and std.dev: (1356.76, 674.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 404.889 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 1413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520160, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 1108, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7065)
[0000][PE] mean and std.dev: (1853.61, 1869.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1651, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1643.74, 835.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 404.036 CPU sec, 22.637 real sec
[0000] Calling mem_process_seqs.., task: 1414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520214, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 798, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (951.00, 768.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1801, 3266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7914)
[0000][PE] mean and std.dev: (2156.62, 1507.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 407.394 CPU sec, 22.810 real sec
[0000] Calling mem_process_seqs.., task: 1415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520460, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1110, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6283)
[0000][PE] mean and std.dev: (1240.30, 1116.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1481, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6272)
[0000][PE] mean and std.dev: (1856.42, 1291.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 404.554 CPU sec, 22.658 real sec
[0000] Calling mem_process_seqs.., task: 1416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519969, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 807, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (1041.39, 885.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1491, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1340.85, 918.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 403.749 CPU sec, 22.638 real sec
[0000] Calling mem_process_seqs.., task: 1417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520243, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1159, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5775)
[0000][PE] mean and std.dev: (1321.24, 1154.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.67, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1489, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (1311.36, 570.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 403.889 CPU sec, 22.581 real sec
[0000] Calling mem_process_seqs.., task: 1418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519724, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 833, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6275)
[0000][PE] mean and std.dev: (1301.64, 1249.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1482, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5313)
[0000][PE] mean and std.dev: (1865.58, 1437.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 406.794 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 1419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520398, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 670, 2852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8090)
[0000][PE] mean and std.dev: (1380.24, 1505.88)
[0000][PE] low and high boundaries for proper pairs: (1, 10709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1647, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (1470.20, 596.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 404.463 CPU sec, 22.685 real sec
[0000] Calling mem_process_seqs.., task: 1420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519726, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 1115, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (1083.89, 948.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1754, 2785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6015)
[0000][PE] mean and std.dev: (1987.50, 1019.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 408.655 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 1421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519870, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 702, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (818.26, 578.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1399, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5607)
[0000][PE] mean and std.dev: (1873.11, 1490.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 408.140 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 1422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205346
	[0000][ M::kt_pipeline] read 1205346 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519576, 7, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 959, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4665)
[0000][PE] mean and std.dev: (861.18, 671.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1336, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (1320.48, 635.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 408.846 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 1423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519596, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 553, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (863.92, 705.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1123, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (1135.95, 484.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205346 reads in 405.044 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 1424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519554, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1094, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7219)
[0000][PE] mean and std.dev: (1638.76, 1437.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.73, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1566, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5507)
[0000][PE] mean and std.dev: (1603.67, 778.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 404.802 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 1425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520050, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 818, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (964.38, 759.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1444, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (1398.10, 687.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 402.488 CPU sec, 22.528 real sec
[0000] Calling mem_process_seqs.., task: 1426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519714, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 951, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (1231.95, 1073.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1213, 2875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6853)
[0000][PE] mean and std.dev: (1715.50, 1735.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 403.601 CPU sec, 22.613 real sec
[0000] Calling mem_process_seqs.., task: 1427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520005, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 636, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (880.84, 599.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1163, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (1385.75, 955.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 404.674 CPU sec, 22.657 real sec
[0000] Calling mem_process_seqs.., task: 1428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519738, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1013, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4490)
[0000][PE] mean and std.dev: (1026.83, 889.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1951, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5510)
[0000][PE] mean and std.dev: (1701.77, 1015.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 404.677 CPU sec, 22.684 real sec
[0000] Calling mem_process_seqs.., task: 1429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520196, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 1018, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1293.56, 1253.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1719, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6908)
[0000][PE] mean and std.dev: (1878.48, 1194.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 404.372 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 1430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519954, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 944, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (858.57, 503.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1566, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1599.24, 883.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 409.253 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 1431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520113, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 1104, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6567)
[0000][PE] mean and std.dev: (1400.43, 1170.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1468, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3466)
[0000][PE] mean and std.dev: (1296.59, 388.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 406.965 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 1432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519664, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 979, 3130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8572)
[0000][PE] mean and std.dev: (1939.22, 2181.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1839, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4935)
[0000][PE] mean and std.dev: (1622.44, 641.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 407.481 CPU sec, 22.837 real sec
[0000] Calling mem_process_seqs.., task: 1433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519985, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1411, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (1426.68, 1036.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1491, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (1339.88, 615.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 406.046 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 1434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519744, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1272, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1082.17, 821.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1328, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4674)
[0000][PE] mean and std.dev: (1533.24, 1089.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 403.670 CPU sec, 22.618 real sec
[0000] Calling mem_process_seqs.., task: 1435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520110, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 753, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2527)
[0000][PE] mean and std.dev: (776.18, 546.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1412, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3754)
[0000][PE] mean and std.dev: (1300.88, 515.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 408.475 CPU sec, 22.899 real sec
[0000] Calling mem_process_seqs.., task: 1436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519464, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 624, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5675)
[0000][PE] mean and std.dev: (1394.06, 1413.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1657, 2907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6713)
[0000][PE] mean and std.dev: (1860.10, 1168.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 405.949 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 1437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519837, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (529, 1099, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (1075.55, 696.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.36, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1026, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6542)
[0000][PE] mean and std.dev: (1629.27, 1406.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 404.202 CPU sec, 22.632 real sec
[0000] Calling mem_process_seqs.., task: 1438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520042, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (587, 981, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (1027.17, 640.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1025, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6379)
[0000][PE] mean and std.dev: (1546.63, 1111.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 401.296 CPU sec, 22.465 real sec
[0000] Calling mem_process_seqs.., task: 1439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520098, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 1145, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5167)
[0000][PE] mean and std.dev: (1316.21, 1023.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1309, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (1319.95, 541.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 404.527 CPU sec, 22.663 real sec
[0000] Calling mem_process_seqs.., task: 1440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519835, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 1076, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (1238.39, 936.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1310, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5926)
[0000][PE] mean and std.dev: (1637.30, 1317.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 403.383 CPU sec, 22.571 real sec
[0000] Calling mem_process_seqs.., task: 1441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519610, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (548, 1070, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1181.00, 836.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1455, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (1383.22, 725.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 404.021 CPU sec, 22.631 real sec
[0000] Calling mem_process_seqs.., task: 1442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520207, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (725, 1126, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (934.74, 485.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 402.945 CPU sec, 22.563 real sec
[0000] Calling mem_process_seqs.., task: 1443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519984, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 1100, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (926.21, 688.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (802, 3010, 7196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19984)
[0000][PE] mean and std.dev: (3847.40, 3139.82)
[0000][PE] low and high boundaries for proper pairs: (1, 26378)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 1659, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6609)
[0000][PE] mean and std.dev: (1701.14, 1269.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 404.199 CPU sec, 22.623 real sec
[0000] Calling mem_process_seqs.., task: 1444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520571, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (572, 839, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (966.26, 756.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1320, 1666, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5121)
[0000][PE] mean and std.dev: (1939.65, 1190.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 398.660 CPU sec, 22.328 real sec
[0000] Calling mem_process_seqs.., task: 1445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520279, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (495, 1113, 2757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7281)
[0000][PE] mean and std.dev: (1870.93, 1858.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1451, 2075, 3377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7229)
[0000][PE] mean and std.dev: (2297.95, 1511.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 403.696 CPU sec, 22.597 real sec
[0000] Calling mem_process_seqs.., task: 1446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520249, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 985, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (848.60, 553.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1203, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1291.31, 538.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 404.720 CPU sec, 22.645 real sec
[0000] Calling mem_process_seqs.., task: 1447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520036, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (785, 1390, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (1366.74, 887.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1645, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1547.52, 673.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 407.017 CPU sec, 22.790 real sec
[0000] Calling mem_process_seqs.., task: 1448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519883, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 771, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (932.80, 772.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 896)
[0000][PE] mean and std.dev: (511.03, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1370, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4929)
[0000][PE] mean and std.dev: (1759.56, 1190.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 403.816 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 1449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519777, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 834, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3977)
[0000][PE] mean and std.dev: (1001.08, 923.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1726, 3016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7194)
[0000][PE] mean and std.dev: (1879.30, 1119.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 400.865 CPU sec, 22.410 real sec
[0000] Calling mem_process_seqs.., task: 1450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 519992, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1060, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4567)
[0000][PE] mean and std.dev: (1177.88, 943.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1772, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4044)
[0000][PE] mean and std.dev: (1506.32, 724.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 403.672 CPU sec, 22.576 real sec
[0000] Calling mem_process_seqs.., task: 1451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519921, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 726, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (919.38, 800.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1905, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6367)
[0000][PE] mean and std.dev: (2075.95, 1360.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 405.961 CPU sec, 22.693 real sec
[0000] Calling mem_process_seqs.., task: 1452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519848, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 869, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2294)
[0000][PE] mean and std.dev: (754.71, 401.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1449, 3905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9603)
[0000][PE] mean and std.dev: (2864.68, 2691.99)
[0000][PE] low and high boundaries for proper pairs: (1, 13633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 403.406 CPU sec, 22.595 real sec
[0000] Calling mem_process_seqs.., task: 1453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519936, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 594, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (955.75, 991.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1054, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4642)
[0000][PE] mean and std.dev: (1200.00, 710.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 403.666 CPU sec, 22.584 real sec
[0000] Calling mem_process_seqs.., task: 1454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520070, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 1142, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7492)
[0000][PE] mean and std.dev: (1611.08, 1393.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1326, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4238)
[0000][PE] mean and std.dev: (1617.58, 702.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 406.335 CPU sec, 22.751 real sec
[0000] Calling mem_process_seqs.., task: 1455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519800, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 898, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4481)
[0000][PE] mean and std.dev: (936.28, 722.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1443, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5709)
[0000][PE] mean and std.dev: (1566.83, 981.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 401.480 CPU sec, 22.457 real sec
[0000] Calling mem_process_seqs.., task: 1456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520278, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (700, 1154, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6361)
[0000][PE] mean and std.dev: (1608.22, 1409.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1249, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (1523.47, 877.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 402.783 CPU sec, 22.548 real sec
[0000] Calling mem_process_seqs.., task: 1457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520277, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1437, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6662)
[0000][PE] mean and std.dev: (1393.00, 981.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1246, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (1440.75, 671.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 406.722 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 1458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519603, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 774, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2620)
[0000][PE] mean and std.dev: (685.00, 467.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1539, 3519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8535)
[0000][PE] mean and std.dev: (2424.71, 2008.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 406.023 CPU sec, 22.750 real sec
[0000] Calling mem_process_seqs.., task: 1459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519817, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 1067, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (1266.19, 1014.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1310, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (1519.62, 878.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 403.912 CPU sec, 22.616 real sec
[0000] Calling mem_process_seqs.., task: 1460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519919, 10, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 713, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2460)
[0000][PE] mean and std.dev: (670.59, 453.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (725, 1747, 6575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18275)
[0000][PE] mean and std.dev: (3217.60, 3051.72)
[0000][PE] low and high boundaries for proper pairs: (1, 24125)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1780, 3013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6613)
[0000][PE] mean and std.dev: (1719.87, 954.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 404.237 CPU sec, 22.652 real sec
[0000] Calling mem_process_seqs.., task: 1461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519543, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 647, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (905.75, 751.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1379, 1543, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4475)
[0000][PE] mean and std.dev: (1809.86, 840.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 406.212 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 1462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520183, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 882, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (1036.91, 964.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1140, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6376)
[0000][PE] mean and std.dev: (1694.14, 1337.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 401.526 CPU sec, 22.455 real sec
[0000] Calling mem_process_seqs.., task: 1463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519964, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 831, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (1056.59, 890.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1164, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4789)
[0000][PE] mean and std.dev: (1277.28, 755.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 401.726 CPU sec, 22.462 real sec
[0000] Calling mem_process_seqs.., task: 1464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520023, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 790, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (914.33, 772.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.85, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1399, 3210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7186)
[0000][PE] mean and std.dev: (1786.86, 1219.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 401.452 CPU sec, 22.484 real sec
[0000] Calling mem_process_seqs.., task: 1465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519764, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 611, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (983.00, 926.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1547, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5427)
[0000][PE] mean and std.dev: (1756.90, 784.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 403.564 CPU sec, 22.577 real sec
[0000] Calling mem_process_seqs.., task: 1466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519815, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 769, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (963.15, 887.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1617, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (1297.29, 466.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 406.525 CPU sec, 22.748 real sec
[0000] Calling mem_process_seqs.., task: 1467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520415, 12, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 806, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (753.25, 491.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1428, 2330, 7772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20460)
[0000][PE] mean and std.dev: (3849.75, 3201.95)
[0000][PE] low and high boundaries for proper pairs: (1, 26804)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1551, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4833)
[0000][PE] mean and std.dev: (1529.42, 740.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 407.199 CPU sec, 22.814 real sec
[0000] Calling mem_process_seqs.., task: 1468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519804, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 932, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (938.24, 702.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1384, 1921, 3927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9013)
[0000][PE] mean and std.dev: (2390.55, 1470.36)
[0000][PE] low and high boundaries for proper pairs: (1, 11556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 407.695 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 1469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519993, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1063, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5251)
[0000][PE] mean and std.dev: (1106.71, 942.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1661, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1596.00, 578.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 402.925 CPU sec, 22.534 real sec
[0000] Calling mem_process_seqs.., task: 1470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519898, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 822, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (1064.41, 846.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1421, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (1543.82, 776.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 402.972 CPU sec, 22.550 real sec
[0000] Calling mem_process_seqs.., task: 1471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520055, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 557, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1075.19, 1074.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1291, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (1413.91, 848.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 407.538 CPU sec, 22.860 real sec
[0000] Calling mem_process_seqs.., task: 1472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520050, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 824, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (870.32, 721.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1272, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (1501.89, 1029.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 404.618 CPU sec, 22.646 real sec
[0000] Calling mem_process_seqs.., task: 1473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520454, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 502, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (931.13, 767.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 1554, 2949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7577)
[0000][PE] mean and std.dev: (1615.72, 1174.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 401.365 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 1474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205322
	[0000][ M::kt_pipeline] read 1205322 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520068, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1153, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6199)
[0000][PE] mean and std.dev: (1202.05, 905.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1343, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3466)
[0000][PE] mean and std.dev: (1351.46, 475.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 405.328 CPU sec, 22.719 real sec
[0000] Calling mem_process_seqs.., task: 1475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520098, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 706, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (700.80, 425.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1933, 3232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7146)
[0000][PE] mean and std.dev: (2321.71, 1695.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205322 reads in 403.723 CPU sec, 22.581 real sec
[0000] Calling mem_process_seqs.., task: 1476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520151, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 736, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (939.00, 893.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1722, 3621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8835)
[0000][PE] mean and std.dev: (2196.93, 1515.82)
[0000][PE] low and high boundaries for proper pairs: (1, 11442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 402.894 CPU sec, 22.584 real sec
[0000] Calling mem_process_seqs.., task: 1477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520012, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 488, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5451)
[0000][PE] mean and std.dev: (710.94, 770.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1434, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (1557.15, 776.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 406.329 CPU sec, 22.733 real sec
[0000] Calling mem_process_seqs.., task: 1478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520247, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 788, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4324)
[0000][PE] mean and std.dev: (959.90, 764.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (512.05, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1256, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (1275.88, 715.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 398.795 CPU sec, 22.340 real sec
[0000] Calling mem_process_seqs.., task: 1479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520074, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 809, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3179)
[0000][PE] mean and std.dev: (898.50, 561.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1394, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (1402.55, 668.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 398.247 CPU sec, 22.265 real sec
[0000] Calling mem_process_seqs.., task: 1480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520013, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 791, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (713.41, 435.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1244, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2957)
[0000][PE] mean and std.dev: (1311.76, 550.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 402.709 CPU sec, 22.570 real sec
[0000] Calling mem_process_seqs.., task: 1481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519997, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (532, 1154, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4954)
[0000][PE] mean and std.dev: (1309.38, 934.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1477, 3665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8969)
[0000][PE] mean and std.dev: (2112.10, 1772.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 401.239 CPU sec, 22.444 real sec
[0000] Calling mem_process_seqs.., task: 1482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520235, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (987, 1728, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5220)
[0000][PE] mean and std.dev: (1728.09, 988.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 1813, 3682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8344)
[0000][PE] mean and std.dev: (2530.76, 2277.60)
[0000][PE] low and high boundaries for proper pairs: (1, 11641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 401.261 CPU sec, 22.448 real sec
[0000] Calling mem_process_seqs.., task: 1483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520067, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 967, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1059.29, 881.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.34, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1269, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (1234.50, 510.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 400.894 CPU sec, 22.500 real sec
[0000] Calling mem_process_seqs.., task: 1484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520016, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (724, 1212, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5635)
[0000][PE] mean and std.dev: (1452.00, 1153.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1270, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1698.08, 960.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 404.758 CPU sec, 22.626 real sec
[0000] Calling mem_process_seqs.., task: 1485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520066, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 877, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5823)
[0000][PE] mean and std.dev: (1336.70, 1323.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1433, 2431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1501.58, 808.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 406.968 CPU sec, 22.804 real sec
[0000] Calling mem_process_seqs.., task: 1486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519932, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 812, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (920.32, 714.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1338, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1403.44, 626.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 402.958 CPU sec, 22.520 real sec
[0000] Calling mem_process_seqs.., task: 1487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519753, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 951, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (989.54, 882.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1728, 3256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8132)
[0000][PE] mean and std.dev: (2190.62, 1806.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 403.113 CPU sec, 22.534 real sec
[0000] Calling mem_process_seqs.., task: 1488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204988
	[0000][ M::kt_pipeline] read 1204988 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519849, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 1289, 3420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9576)
[0000][PE] mean and std.dev: (2325.21, 2702.55)
[0000][PE] low and high boundaries for proper pairs: (1, 13135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1553, 2930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6890)
[0000][PE] mean and std.dev: (1873.72, 1184.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 406.881 CPU sec, 22.803 real sec
[0000] Calling mem_process_seqs.., task: 1489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520325, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 899, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (807.00, 496.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.45, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1469, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5179)
[0000][PE] mean and std.dev: (1702.19, 793.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204988 reads in 410.601 CPU sec, 23.030 real sec
[0000] Calling mem_process_seqs.., task: 1490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520105, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (654, 1039, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5088)
[0000][PE] mean and std.dev: (1278.80, 1146.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.82, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1833, 3060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6772)
[0000][PE] mean and std.dev: (1921.17, 1033.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 404.159 CPU sec, 22.628 real sec
[0000] Calling mem_process_seqs.., task: 1491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520416, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 830, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4308)
[0000][PE] mean and std.dev: (1004.59, 902.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1665, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (1611.75, 1008.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 406.078 CPU sec, 22.728 real sec
[0000] Calling mem_process_seqs.., task: 1492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519955, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 1098, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7939)
[0000][PE] mean and std.dev: (1639.24, 1572.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1656, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1930.00, 1298.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 402.577 CPU sec, 22.517 real sec
[0000] Calling mem_process_seqs.., task: 1493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205294
	[0000][ M::kt_pipeline] read 1205294 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520143, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (583, 974, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5857)
[0000][PE] mean and std.dev: (1333.54, 1144.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1227, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4997)
[0000][PE] mean and std.dev: (1671.50, 1107.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 402.083 CPU sec, 22.548 real sec
[0000] Calling mem_process_seqs.., task: 1494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520136, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 1070, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6655)
[0000][PE] mean and std.dev: (1164.86, 1015.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.84, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1302, 1641, 3677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8427)
[0000][PE] mean and std.dev: (2414.71, 1678.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205294 reads in 406.563 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 1495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519706, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 820, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1066.64, 1006.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1220, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5957)
[0000][PE] mean and std.dev: (1777.28, 1229.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 405.742 CPU sec, 22.724 real sec
[0000] Calling mem_process_seqs.., task: 1496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520049, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 520, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (717.60, 663.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1426, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3186)
[0000][PE] mean and std.dev: (1346.05, 476.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 403.026 CPU sec, 22.531 real sec
[0000] Calling mem_process_seqs.., task: 1497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520274, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (566, 1090, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (931.13, 571.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1789, 3599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8729)
[0000][PE] mean and std.dev: (2435.07, 2012.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 401.277 CPU sec, 22.476 real sec
[0000] Calling mem_process_seqs.., task: 1498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519813, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 888, 2981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7921)
[0000][PE] mean and std.dev: (1903.90, 1986.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1202, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (1115.57, 445.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 404.555 CPU sec, 22.652 real sec
[0000] Calling mem_process_seqs.., task: 1499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520168, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 836, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4333)
[0000][PE] mean and std.dev: (1083.50, 828.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.23, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (681, 1119, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (1289.72, 992.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 400.211 CPU sec, 22.432 real sec
[0000] Calling mem_process_seqs.., task: 1500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520019, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 615, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (858.65, 628.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.36, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1264, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (1092.73, 594.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 406.191 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 1501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520018, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1353, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6076)
[0000][PE] mean and std.dev: (1274.05, 1086.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1582, 2945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6303)
[0000][PE] mean and std.dev: (1857.60, 998.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 405.867 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 1502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519978, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (910, 1404, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4978)
[0000][PE] mean and std.dev: (1526.52, 1074.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1173, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2852)
[0000][PE] mean and std.dev: (1195.20, 343.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 402.960 CPU sec, 22.535 real sec
[0000] Calling mem_process_seqs.., task: 1503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519984, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 954, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1258.55, 1125.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (654, 1541, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6369)
[0000][PE] mean and std.dev: (1556.10, 1351.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 404.483 CPU sec, 22.664 real sec
[0000] Calling mem_process_seqs.., task: 1504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519957, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 926, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6126)
[0000][PE] mean and std.dev: (1276.24, 1336.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1361, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (1367.87, 681.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 401.571 CPU sec, 22.456 real sec
[0000] Calling mem_process_seqs.., task: 1505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520194, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (532, 1108, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1342.54, 1069.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 2045, 4557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11457)
[0000][PE] mean and std.dev: (2662.27, 2084.76)
[0000][PE] low and high boundaries for proper pairs: (1, 14907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 403.114 CPU sec, 22.540 real sec
[0000] Calling mem_process_seqs.., task: 1506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519864, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 1423, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5814)
[0000][PE] mean and std.dev: (1386.30, 1129.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.90, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1335, 1555, 2860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5910)
[0000][PE] mean and std.dev: (1783.93, 900.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 406.792 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 1507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519947, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 885, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4321)
[0000][PE] mean and std.dev: (1085.50, 1011.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1085, 3005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7521)
[0000][PE] mean and std.dev: (1887.21, 1770.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 399.625 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 1508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519934, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (514, 1344, 3390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9142)
[0000][PE] mean and std.dev: (1749.60, 1534.86)
[0000][PE] low and high boundaries for proper pairs: (1, 12018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1744, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (1626.08, 780.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 402.371 CPU sec, 22.528 real sec
[0000] Calling mem_process_seqs.., task: 1509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519989, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1031, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4669)
[0000][PE] mean and std.dev: (985.00, 628.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1378, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4482)
[0000][PE] mean and std.dev: (1405.18, 753.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 409.566 CPU sec, 22.915 real sec
[0000] Calling mem_process_seqs.., task: 1510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519928, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 868, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (1029.73, 813.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1499, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (1301.08, 775.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 403.055 CPU sec, 22.575 real sec
[0000] Calling mem_process_seqs.., task: 1511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520072, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 447, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1509)
[0000][PE] mean and std.dev: (471.95, 366.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1417, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5116)
[0000][PE] mean and std.dev: (1633.55, 844.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 402.637 CPU sec, 22.516 real sec
[0000] Calling mem_process_seqs.., task: 1512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519873, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1142, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5422)
[0000][PE] mean and std.dev: (1129.95, 849.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1397, 2901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6443)
[0000][PE] mean and std.dev: (1970.29, 1245.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 413.428 CPU sec, 23.193 real sec
[0000] Calling mem_process_seqs.., task: 1513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520296, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 809, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3753)
[0000][PE] mean and std.dev: (927.80, 875.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1458, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (1234.39, 646.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 401.262 CPU sec, 22.458 real sec
[0000] Calling mem_process_seqs.., task: 1514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520129, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 856, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (831.64, 629.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1107, 2646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6460)
[0000][PE] mean and std.dev: (1740.60, 1557.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 407.455 CPU sec, 22.834 real sec
[0000] Calling mem_process_seqs.., task: 1515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520255, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (772, 1017, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2416)
[0000][PE] mean and std.dev: (884.29, 492.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1292, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5566)
[0000][PE] mean and std.dev: (1747.67, 1290.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7101)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 405.459 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 1516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519945, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 1173, 3450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9492)
[0000][PE] mean and std.dev: (1837.76, 2023.85)
[0000][PE] low and high boundaries for proper pairs: (1, 12513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.92, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1051, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1173.00, 583.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 409.928 CPU sec, 22.947 real sec
[0000] Calling mem_process_seqs.., task: 1517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519889, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 400, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (834.86, 773.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1746, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1504.55, 709.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 409.389 CPU sec, 22.950 real sec
[0000] Calling mem_process_seqs.., task: 1518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520297, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 960, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4531)
[0000][PE] mean and std.dev: (829.60, 572.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1190, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (1345.52, 799.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 404.426 CPU sec, 22.631 real sec
[0000] Calling mem_process_seqs.., task: 1519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519840, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 1032, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (1008.87, 671.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1359, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5621)
[0000][PE] mean and std.dev: (1645.35, 1101.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 411.630 CPU sec, 23.074 real sec
[0000] Calling mem_process_seqs.., task: 1520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520207, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 795, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3805)
[0000][PE] mean and std.dev: (1064.79, 982.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1546, 3900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9468)
[0000][PE] mean and std.dev: (2533.37, 1978.34)
[0000][PE] low and high boundaries for proper pairs: (1, 12252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 408.401 CPU sec, 22.864 real sec
[0000] Calling mem_process_seqs.., task: 1521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520312, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1298, 2676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7366)
[0000][PE] mean and std.dev: (1685.61, 1592.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1571, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (1640.89, 780.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 405.496 CPU sec, 22.715 real sec
[0000] Calling mem_process_seqs.., task: 1522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520024, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 653, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (1009.78, 804.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1377, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4686)
[0000][PE] mean and std.dev: (1647.56, 1022.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 405.713 CPU sec, 22.716 real sec
[0000] Calling mem_process_seqs.., task: 1523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520050, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 638, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (800.25, 704.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1861, 3790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9354)
[0000][PE] mean and std.dev: (2150.12, 1418.59)
[0000][PE] low and high boundaries for proper pairs: (1, 12136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 404.845 CPU sec, 22.638 real sec
[0000] Calling mem_process_seqs.., task: 1524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520298, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (634, 1310, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6301)
[0000][PE] mean and std.dev: (1550.81, 1247.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1446, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (1496.19, 733.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 405.233 CPU sec, 22.688 real sec
[0000] Calling mem_process_seqs.., task: 1525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519802, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 831, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (951.12, 805.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1654, 2761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5989)
[0000][PE] mean and std.dev: (1706.95, 857.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 409.947 CPU sec, 22.965 real sec
[0000] Calling mem_process_seqs.., task: 1526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519876, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1078, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5347)
[0000][PE] mean and std.dev: (1087.89, 936.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1095, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (1414.14, 946.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 404.022 CPU sec, 22.609 real sec
[0000] Calling mem_process_seqs.., task: 1527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520251, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 374, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (1149.21, 1342.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1212, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1695.36, 1367.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 404.290 CPU sec, 22.618 real sec
[0000] Calling mem_process_seqs.., task: 1528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520291, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 675, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6695)
[0000][PE] mean and std.dev: (1209.57, 1245.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1514, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6071)
[0000][PE] mean and std.dev: (1815.46, 1168.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 406.052 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 1529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519591, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (630, 1473, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (1287.11, 814.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1490, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4517)
[0000][PE] mean and std.dev: (1684.87, 942.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 405.987 CPU sec, 22.727 real sec
[0000] Calling mem_process_seqs.., task: 1530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519575, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 980, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6732)
[0000][PE] mean and std.dev: (1459.00, 1621.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1516, 4095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10201)
[0000][PE] mean and std.dev: (2536.39, 2221.97)
[0000][PE] low and high boundaries for proper pairs: (1, 13254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 406.149 CPU sec, 22.775 real sec
[0000] Calling mem_process_seqs.., task: 1531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520729, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 1096, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5113)
[0000][PE] mean and std.dev: (1207.20, 1033.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1591, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4490)
[0000][PE] mean and std.dev: (1539.17, 830.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 400.895 CPU sec, 22.420 real sec
[0000] Calling mem_process_seqs.., task: 1532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519936, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 1281, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6288)
[0000][PE] mean and std.dev: (1596.71, 1493.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1443, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (1259.88, 699.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 406.958 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 1533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520163, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 1754, 2699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7525)
[0000][PE] mean and std.dev: (1767.27, 1694.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1113, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4335)
[0000][PE] mean and std.dev: (1353.21, 839.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 404.165 CPU sec, 22.598 real sec
[0000] Calling mem_process_seqs.., task: 1534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520233, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (779, 931, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (1176.81, 846.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1237, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4629)
[0000][PE] mean and std.dev: (1611.85, 991.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 406.119 CPU sec, 22.739 real sec
[0000] Calling mem_process_seqs.., task: 1535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520687, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 1098, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (946.46, 568.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.05, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1327, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4792)
[0000][PE] mean and std.dev: (1618.05, 1219.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 401.927 CPU sec, 22.498 real sec
[0000] Calling mem_process_seqs.., task: 1536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519603, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 737, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (1132.23, 1016.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1260, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4597)
[0000][PE] mean and std.dev: (1530.07, 1008.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 405.418 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 1537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520113, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 972, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6926)
[0000][PE] mean and std.dev: (1355.61, 1377.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.46, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1461, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (1552.95, 864.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 407.762 CPU sec, 22.833 real sec
[0000] Calling mem_process_seqs.., task: 1538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519911, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 915, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3311)
[0000][PE] mean and std.dev: (792.83, 465.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.32, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1133, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (1134.62, 606.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 403.128 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 1539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520258, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 479, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (815.58, 644.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1683, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (1697.82, 673.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 405.184 CPU sec, 22.717 real sec
[0000] Calling mem_process_seqs.., task: 1540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519928, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 855, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (1122.74, 758.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1312, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4122)
[0000][PE] mean and std.dev: (1339.00, 486.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 407.268 CPU sec, 22.780 real sec
[0000] Calling mem_process_seqs.., task: 1541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519975, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 432, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3998)
[0000][PE] mean and std.dev: (957.50, 991.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1346, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (1895.11, 1428.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 406.550 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 1542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520441, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1356, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5154)
[0000][PE] mean and std.dev: (1052.25, 766.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.55, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1415, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 2778)
[0000][PE] mean and std.dev: (1460.56, 477.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 406.682 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 1543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519717, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 534, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (1020.07, 1002.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1515, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5468)
[0000][PE] mean and std.dev: (1717.18, 943.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 404.838 CPU sec, 22.621 real sec
[0000] Calling mem_process_seqs.., task: 1544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520077, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 614, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (982.04, 946.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1476, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6192)
[0000][PE] mean and std.dev: (1845.38, 1322.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 406.258 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 1545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520101, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1123, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1119.30, 793.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1183, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (1455.33, 636.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 406.282 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 1546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520108, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (816, 960, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5634)
[0000][PE] mean and std.dev: (1237.27, 906.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1312, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (1456.00, 661.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 408.012 CPU sec, 22.833 real sec
[0000] Calling mem_process_seqs.., task: 1547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519926, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 886, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4929)
[0000][PE] mean and std.dev: (1199.21, 971.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1262, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (1309.55, 728.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 408.756 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 1548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520129, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (720, 1108, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5079)
[0000][PE] mean and std.dev: (1181.04, 895.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 2169, 3836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9580)
[0000][PE] mean and std.dev: (2646.24, 2247.37)
[0000][PE] low and high boundaries for proper pairs: (1, 12452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 405.130 CPU sec, 22.697 real sec
[0000] Calling mem_process_seqs.., task: 1549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519789, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1080, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (1160.91, 779.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 886, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5382)
[0000][PE] mean and std.dev: (1553.89, 1382.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 406.793 CPU sec, 22.795 real sec
[0000] Calling mem_process_seqs.., task: 1550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519646, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 533, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (813.68, 714.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1482, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (1502.38, 1021.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 408.975 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 1551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519824, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (509, 829, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1130.35, 870.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1873, 3222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7446)
[0000][PE] mean and std.dev: (2270.20, 1703.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 405.938 CPU sec, 22.724 real sec
[0000] Calling mem_process_seqs.., task: 1552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520468, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 728, 3248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9084)
[0000][PE] mean and std.dev: (2060.04, 2613.61)
[0000][PE] low and high boundaries for proper pairs: (1, 12514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1379, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 2828)
[0000][PE] mean and std.dev: (1315.63, 475.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 405.373 CPU sec, 22.674 real sec
[0000] Calling mem_process_seqs.., task: 1553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520116, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 687, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2905)
[0000][PE] mean and std.dev: (732.61, 543.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.72, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1290, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (1202.73, 474.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 406.144 CPU sec, 22.777 real sec
[0000] Calling mem_process_seqs.., task: 1554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520294, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 1082, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (1128.68, 866.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1184, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (1261.24, 591.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4024)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 403.825 CPU sec, 22.648 real sec
[0000] Calling mem_process_seqs.., task: 1555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519708, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1014, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (1255.04, 1013.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.87, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1516, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5333)
[0000][PE] mean and std.dev: (1450.29, 890.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 409.103 CPU sec, 22.922 real sec
[0000] Calling mem_process_seqs.., task: 1556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520289, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 1158, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1193.68, 851.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1558, 3053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7479)
[0000][PE] mean and std.dev: (1704.21, 1121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 403.756 CPU sec, 22.603 real sec
[0000] Calling mem_process_seqs.., task: 1557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520062, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (635, 1467, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6212)
[0000][PE] mean and std.dev: (1323.16, 891.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.30, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 2182, 3014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7126)
[0000][PE] mean and std.dev: (2286.48, 1684.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 404.769 CPU sec, 22.743 real sec
[0000] Calling mem_process_seqs.., task: 1558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519918, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (512, 1027, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1258.62, 1114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1292, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (1330.00, 692.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 402.838 CPU sec, 22.549 real sec
[0000] Calling mem_process_seqs.., task: 1559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520293, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1118, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (1078.74, 882.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.88, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1277, 2565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5427)
[0000][PE] mean and std.dev: (1749.89, 1161.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 405.871 CPU sec, 22.754 real sec
[0000] Calling mem_process_seqs.., task: 1560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520097, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 544, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (710.28, 550.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1471, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1670.78, 826.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 404.863 CPU sec, 22.649 real sec
[0000] Calling mem_process_seqs.., task: 1561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520466, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 548, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (733.68, 608.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 896)
[0000][PE] mean and std.dev: (511.15, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1589, 3254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7644)
[0000][PE] mean and std.dev: (2180.39, 1602.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 402.886 CPU sec, 22.561 real sec
[0000] Calling mem_process_seqs.., task: 1562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519843, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (653, 1377, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1227.25, 723.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.46, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (664, 1152, 5240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14392)
[0000][PE] mean and std.dev: (2619.50, 2462.72)
[0000][PE] low and high boundaries for proper pairs: (1, 18968)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 2389, 3051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8059)
[0000][PE] mean and std.dev: (2027.23, 1410.86)
[0000][PE] low and high boundaries for proper pairs: (1, 10563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 405.019 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 1563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520237, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (480, 1441, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6417)
[0000][PE] mean and std.dev: (1708.85, 1513.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1391, 2689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6681)
[0000][PE] mean and std.dev: (1584.82, 1017.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 402.753 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 1564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519640, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1169, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1321.96, 1073.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1195, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (1379.48, 819.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 405.728 CPU sec, 22.784 real sec
[0000] Calling mem_process_seqs.., task: 1565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520493, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 1108, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5496)
[0000][PE] mean and std.dev: (1395.14, 1124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.28, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1356, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5141)
[0000][PE] mean and std.dev: (1683.03, 1076.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 404.309 CPU sec, 22.642 real sec
[0000] Calling mem_process_seqs.., task: 1566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520425, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (777, 1310, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4377)
[0000][PE] mean and std.dev: (1312.17, 918.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.51, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1365, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4219)
[0000][PE] mean and std.dev: (1384.04, 717.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 400.970 CPU sec, 22.450 real sec
[0000] Calling mem_process_seqs.., task: 1567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519388, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 743, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (796.68, 520.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.62, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1557, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (1564.86, 805.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 412.086 CPU sec, 23.100 real sec
[0000] Calling mem_process_seqs.., task: 1568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519958, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1241, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6003)
[0000][PE] mean and std.dev: (1422.46, 1299.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1590, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1609.57, 825.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 406.972 CPU sec, 22.817 real sec
[0000] Calling mem_process_seqs.., task: 1569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520299, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 1081, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5999)
[0000][PE] mean and std.dev: (1463.45, 1285.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.26, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 962, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (1146.65, 638.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 403.169 CPU sec, 22.587 real sec
[0000] Calling mem_process_seqs.., task: 1570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519861, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (478, 1453, 2617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6895)
[0000][PE] mean and std.dev: (1636.13, 1438.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.15, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 2526, 3612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8876)
[0000][PE] mean and std.dev: (2509.29, 1557.37)
[0000][PE] low and high boundaries for proper pairs: (1, 11508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 404.051 CPU sec, 22.617 real sec
[0000] Calling mem_process_seqs.., task: 1571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520090, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 945, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (1046.32, 892.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1444, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4983)
[0000][PE] mean and std.dev: (1846.75, 1030.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 405.277 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 1572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519706, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 777, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (991.35, 702.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1188, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (1459.47, 1084.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 405.645 CPU sec, 22.740 real sec
[0000] Calling mem_process_seqs.., task: 1573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 519401, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 581, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3343)
[0000][PE] mean and std.dev: (831.72, 595.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1631, 3131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7717)
[0000][PE] mean and std.dev: (1957.14, 1465.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 404.924 CPU sec, 22.680 real sec
[0000] Calling mem_process_seqs.., task: 1574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520072, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 963, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5718)
[0000][PE] mean and std.dev: (1210.67, 919.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1514, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (1380.04, 602.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 402.418 CPU sec, 22.559 real sec
[0000] Calling mem_process_seqs.., task: 1575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519559, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 776, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (910.19, 793.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1329, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4826)
[0000][PE] mean and std.dev: (1602.36, 872.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 403.169 CPU sec, 22.559 real sec
[0000] Calling mem_process_seqs.., task: 1576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520021, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (555, 1896, 5041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14013)
[0000][PE] mean and std.dev: (2658.25, 2629.15)
[0000][PE] low and high boundaries for proper pairs: (1, 18499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 1744, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1638.69, 776.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 401.077 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 1577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519685, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 721, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (818.00, 534.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1154, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4862)
[0000][PE] mean and std.dev: (1525.74, 1005.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 400.538 CPU sec, 22.431 real sec
[0000] Calling mem_process_seqs.., task: 1578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520086, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (474, 1143, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5091)
[0000][PE] mean and std.dev: (1321.44, 1091.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.47, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 993, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (1081.05, 734.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 406.863 CPU sec, 22.768 real sec
[0000] Calling mem_process_seqs.., task: 1579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519678, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 1001, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (1224.97, 965.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.22, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1736, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5556)
[0000][PE] mean and std.dev: (1708.83, 1008.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 403.022 CPU sec, 22.575 real sec
[0000] Calling mem_process_seqs.., task: 1580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519708, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 793, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4285)
[0000][PE] mean and std.dev: (1041.28, 829.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 2079, 3934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9788)
[0000][PE] mean and std.dev: (2243.38, 1716.10)
[0000][PE] low and high boundaries for proper pairs: (1, 12715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 404.970 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 1581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520338, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 1009, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1343.27, 1063.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 1305, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (1383.61, 893.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 403.517 CPU sec, 22.582 real sec
[0000] Calling mem_process_seqs.., task: 1582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520204, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 914, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6335)
[0000][PE] mean and std.dev: (1481.16, 1271.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1435, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5185)
[0000][PE] mean and std.dev: (1550.88, 1065.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 407.080 CPU sec, 22.823 real sec
[0000] Calling mem_process_seqs.., task: 1583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520289, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 478, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (825.73, 844.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1298, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (1417.33, 725.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 402.513 CPU sec, 22.533 real sec
[0000] Calling mem_process_seqs.., task: 1584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520098, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1110, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5271)
[0000][PE] mean and std.dev: (1308.13, 1182.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 2038, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6072)
[0000][PE] mean and std.dev: (2214.88, 1568.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 402.925 CPU sec, 22.563 real sec
[0000] Calling mem_process_seqs.., task: 1585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520018, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 1060, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5441)
[0000][PE] mean and std.dev: (1393.80, 1053.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 985, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (960.59, 596.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 402.495 CPU sec, 22.548 real sec
[0000] Calling mem_process_seqs.., task: 1586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520086, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 1128, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8238)
[0000][PE] mean and std.dev: (1788.59, 2176.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1553, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (1446.48, 837.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 401.966 CPU sec, 22.536 real sec
[0000] Calling mem_process_seqs.., task: 1587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520556, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 881, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (1080.43, 777.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1405, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (1459.18, 658.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 402.627 CPU sec, 22.530 real sec
[0000] Calling mem_process_seqs.., task: 1588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519713, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1092, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1265.88, 1198.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1562, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (1957.35, 1049.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 404.223 CPU sec, 22.635 real sec
[0000] Calling mem_process_seqs.., task: 1589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520697, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (474, 1026, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4578)
[0000][PE] mean and std.dev: (1081.69, 771.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1470, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1623.96, 882.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 402.339 CPU sec, 22.527 real sec
[0000] Calling mem_process_seqs.., task: 1590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520325, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 875, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (993.37, 856.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1976, 3811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9527)
[0000][PE] mean and std.dev: (2441.25, 2151.24)
[0000][PE] low and high boundaries for proper pairs: (1, 12385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 399.601 CPU sec, 22.416 real sec
[0000] Calling mem_process_seqs.., task: 1591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519715, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 546, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (762.20, 572.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1096, 2779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6307)
[0000][PE] mean and std.dev: (1769.91, 987.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 403.207 CPU sec, 22.562 real sec
[0000] Calling mem_process_seqs.., task: 1592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519981, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 1025, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (1113.77, 844.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1443, 3119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7489)
[0000][PE] mean and std.dev: (2002.65, 1550.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 401.188 CPU sec, 22.503 real sec
[0000] Calling mem_process_seqs.., task: 1593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520208, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1125, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (1169.79, 991.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1309, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (1319.04, 722.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 403.326 CPU sec, 22.608 real sec
[0000] Calling mem_process_seqs.., task: 1594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520071, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 681, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (956.19, 859.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1548, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5092)
[0000][PE] mean and std.dev: (1706.70, 1176.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 403.865 CPU sec, 22.594 real sec
[0000] Calling mem_process_seqs.., task: 1595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520158, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (890, 1543, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4982)
[0000][PE] mean and std.dev: (1484.17, 983.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1431, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1460.89, 678.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 403.373 CPU sec, 22.607 real sec
[0000] Calling mem_process_seqs.., task: 1596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520250, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (711, 1000, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1022.05, 700.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1556, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1507.23, 725.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 401.703 CPU sec, 22.495 real sec
[0000] Calling mem_process_seqs.., task: 1597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519772, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 1191, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5660)
[0000][PE] mean and std.dev: (1258.65, 865.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1218, 2982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7174)
[0000][PE] mean and std.dev: (1557.08, 988.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 404.435 CPU sec, 22.686 real sec
[0000] Calling mem_process_seqs.., task: 1598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520095, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (555, 1117, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (1015.00, 566.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.38, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1221, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (82, 2492)
[0000][PE] mean and std.dev: (1255.95, 475.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 400.746 CPU sec, 22.451 real sec
[0000] Calling mem_process_seqs.., task: 1599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519741, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 782, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (922.14, 804.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1741, 2795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5931)
[0000][PE] mean and std.dev: (1799.30, 1063.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 402.748 CPU sec, 22.520 real sec
[0000] Calling mem_process_seqs.., task: 1600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519928, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 748, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (840.30, 601.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1272, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5797)
[0000][PE] mean and std.dev: (1531.50, 982.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 407.695 CPU sec, 22.848 real sec
[0000] Calling mem_process_seqs.., task: 1601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519752, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 1163, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (1106.58, 728.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (217, 811, 3898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11260)
[0000][PE] mean and std.dev: (1941.10, 1948.82)
[0000][PE] low and high boundaries for proper pairs: (1, 14941)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 2929, 3905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9421)
[0000][PE] mean and std.dev: (2684.25, 1869.27)
[0000][PE] low and high boundaries for proper pairs: (1, 12179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 403.508 CPU sec, 22.552 real sec
[0000] Calling mem_process_seqs.., task: 1602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520561, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1285, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (1089.70, 789.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1520, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5733)
[0000][PE] mean and std.dev: (1712.26, 1064.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 401.272 CPU sec, 22.472 real sec
[0000] Calling mem_process_seqs.., task: 1603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519992, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 775, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5505)
[0000][PE] mean and std.dev: (1150.38, 1098.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (455, 1481, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5771)
[0000][PE] mean and std.dev: (1497.32, 1146.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 401.510 CPU sec, 22.486 real sec
[0000] Calling mem_process_seqs.., task: 1604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520505, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 914, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (1232.61, 1248.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1316, 2080, 3833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8867)
[0000][PE] mean and std.dev: (2546.83, 2026.26)
[0000][PE] low and high boundaries for proper pairs: (1, 11384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 399.609 CPU sec, 22.379 real sec
[0000] Calling mem_process_seqs.., task: 1605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519450, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 718, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2353)
[0000][PE] mean and std.dev: (589.95, 379.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1506, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5618)
[0000][PE] mean and std.dev: (1642.00, 894.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 404.502 CPU sec, 22.646 real sec
[0000] Calling mem_process_seqs.., task: 1606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519701, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 951, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6433)
[0000][PE] mean and std.dev: (1296.61, 1202.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1273, 1856, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5164)
[0000][PE] mean and std.dev: (1778.14, 913.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 401.651 CPU sec, 22.517 real sec
[0000] Calling mem_process_seqs.., task: 1607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520591, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 804, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5171)
[0000][PE] mean and std.dev: (1154.07, 1110.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1383, 2002, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4764)
[0000][PE] mean and std.dev: (1912.50, 930.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 401.299 CPU sec, 22.447 real sec
[0000] Calling mem_process_seqs.., task: 1608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205302
	[0000][ M::kt_pipeline] read 1205302 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519710, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (673, 995, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5761)
[0000][PE] mean and std.dev: (1554.95, 1339.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1341, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5115)
[0000][PE] mean and std.dev: (1649.00, 1285.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 400.440 CPU sec, 22.416 real sec
[0000] Calling mem_process_seqs.., task: 1609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520339, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (821, 1358, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4859)
[0000][PE] mean and std.dev: (1350.32, 909.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.27, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1319, 1664, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (379, 2729)
[0000][PE] mean and std.dev: (1544.59, 493.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205302 reads in 402.745 CPU sec, 22.522 real sec
[0000] Calling mem_process_seqs.., task: 1610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519910, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1420, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6228)
[0000][PE] mean and std.dev: (1749.15, 1474.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1221, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (1360.00, 661.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 399.035 CPU sec, 22.323 real sec
[0000] Calling mem_process_seqs.., task: 1611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520206, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 356, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (822.44, 901.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1257, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5658)
[0000][PE] mean and std.dev: (1730.43, 1058.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 399.145 CPU sec, 22.363 real sec
[0000] Calling mem_process_seqs.., task: 1612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519811, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (578, 1128, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (1073.28, 732.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (835, 1010, 6696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18418)
[0000][PE] mean and std.dev: (2850.40, 3280.67)
[0000][PE] low and high boundaries for proper pairs: (1, 24279)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1530, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5371)
[0000][PE] mean and std.dev: (1874.52, 1356.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 402.132 CPU sec, 22.513 real sec
[0000] Calling mem_process_seqs.., task: 1613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520359, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 1307, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1334.95, 1109.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.35, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1599, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5847)
[0000][PE] mean and std.dev: (1963.48, 1363.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 402.470 CPU sec, 22.507 real sec
[0000] Calling mem_process_seqs.., task: 1614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520046, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 973, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (1032.82, 686.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1440, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5471)
[0000][PE] mean and std.dev: (1542.64, 1144.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 402.294 CPU sec, 22.514 real sec
[0000] Calling mem_process_seqs.., task: 1615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519964, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (582, 1025, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (1194.41, 830.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.64, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 1672, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6102)
[0000][PE] mean and std.dev: (1615.67, 819.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 400.795 CPU sec, 22.433 real sec
[0000] Calling mem_process_seqs.., task: 1616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520232, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 1185, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5207)
[0000][PE] mean and std.dev: (1300.50, 969.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1549, 3343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8313)
[0000][PE] mean and std.dev: (2174.26, 1907.63)
[0000][PE] low and high boundaries for proper pairs: (1, 10798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 401.649 CPU sec, 22.511 real sec
[0000] Calling mem_process_seqs.., task: 1617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519746, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 1261, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5616)
[0000][PE] mean and std.dev: (1525.71, 1492.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1450, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (1391.32, 770.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 404.481 CPU sec, 22.661 real sec
[0000] Calling mem_process_seqs.., task: 1618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520058, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 538, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (922.92, 711.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 1343, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (1224.50, 543.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 406.425 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 1619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520228, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 1045, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5187)
[0000][PE] mean and std.dev: (1241.00, 1143.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 1724, 2846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6384)
[0000][PE] mean and std.dev: (1950.24, 1302.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 407.675 CPU sec, 22.845 real sec
[0000] Calling mem_process_seqs.., task: 1620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520096, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1365, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (1124.33, 844.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.84, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1633, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5415)
[0000][PE] mean and std.dev: (1806.96, 1089.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 399.994 CPU sec, 22.497 real sec
[0000] Calling mem_process_seqs.., task: 1621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519885, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 883, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (995.47, 915.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.27, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (564, 1134, 3033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7971)
[0000][PE] mean and std.dev: (1507.94, 1523.24)
[0000][PE] low and high boundaries for proper pairs: (1, 10440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 403.663 CPU sec, 22.573 real sec
[0000] Calling mem_process_seqs.., task: 1622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520570, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 550, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (636.00, 498.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.52, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1661, 2703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (2004.00, 1158.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 404.198 CPU sec, 22.594 real sec
[0000] Calling mem_process_seqs.., task: 1623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520388, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 996, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (1095.94, 891.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.84, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 2039, 3588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8956)
[0000][PE] mean and std.dev: (2365.18, 1921.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 404.757 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 1624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519865, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (855, 1807, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5301)
[0000][PE] mean and std.dev: (1674.82, 939.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1385, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (1445.65, 686.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 411.838 CPU sec, 23.108 real sec
[0000] Calling mem_process_seqs.., task: 1625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520337, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 937, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (1292.65, 1322.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1487, 2165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (1524.78, 881.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 403.199 CPU sec, 22.621 real sec
[0000] Calling mem_process_seqs.., task: 1626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520385, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 1100, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (1032.38, 972.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1471, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (1386.33, 691.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 399.065 CPU sec, 22.361 real sec
[0000] Calling mem_process_seqs.., task: 1627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520303, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 666, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (884.95, 712.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1384, 1604, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (1619.00, 586.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 405.541 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 1628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520189, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 1382, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1306.72, 1041.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 1114, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4832)
[0000][PE] mean and std.dev: (1265.29, 1031.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 403.552 CPU sec, 22.589 real sec
[0000] Calling mem_process_seqs.., task: 1629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520189, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 1215, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6378)
[0000][PE] mean and std.dev: (1295.47, 1150.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.35, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1265, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (1400.55, 737.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 407.620 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 1630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519785, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 870, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (920.91, 772.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.45, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1451, 2619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5463)
[0000][PE] mean and std.dev: (1857.71, 1209.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 405.078 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 1631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205318
	[0000][ M::kt_pipeline] read 1205318 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519864, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 625, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2399)
[0000][PE] mean and std.dev: (737.20, 540.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1212, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (1228.25, 580.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 407.103 CPU sec, 22.859 real sec
[0000] Calling mem_process_seqs.., task: 1632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520286, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 1095, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5834)
[0000][PE] mean and std.dev: (1629.26, 1493.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1538, 2595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5823)
[0000][PE] mean and std.dev: (1639.00, 808.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205318 reads in 402.041 CPU sec, 22.556 real sec
[0000] Calling mem_process_seqs.., task: 1633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520662, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1242, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1376.95, 1094.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1485, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4806)
[0000][PE] mean and std.dev: (1551.78, 1089.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 401.029 CPU sec, 22.441 real sec
[0000] Calling mem_process_seqs.., task: 1634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520095, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 654, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (975.10, 797.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1420, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4547)
[0000][PE] mean and std.dev: (1489.81, 790.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 403.150 CPU sec, 22.560 real sec
[0000] Calling mem_process_seqs.., task: 1635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519947, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 967, 2856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7772)
[0000][PE] mean and std.dev: (1542.32, 1649.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1822, 2999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6935)
[0000][PE] mean and std.dev: (2159.09, 1276.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 404.679 CPU sec, 22.655 real sec
[0000] Calling mem_process_seqs.., task: 1636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519674, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 784, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (778.81, 576.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1578, 2992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6832)
[0000][PE] mean and std.dev: (2017.59, 1383.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 403.457 CPU sec, 22.580 real sec
[0000] Calling mem_process_seqs.., task: 1637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519467, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 997, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5726)
[0000][PE] mean and std.dev: (1145.47, 1175.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.33, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1155, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5404)
[0000][PE] mean and std.dev: (1382.74, 1104.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 402.623 CPU sec, 22.507 real sec
[0000] Calling mem_process_seqs.., task: 1638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519977, 12, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1229, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1113.32, 779.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (435, 1984, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8058)
[0000][PE] mean and std.dev: (1835.00, 1647.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10599)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1120, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (1349.54, 672.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 404.828 CPU sec, 22.657 real sec
[0000] Calling mem_process_seqs.., task: 1639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519597, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 1082, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4329)
[0000][PE] mean and std.dev: (1035.88, 791.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1529, 1968, 2963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1994.87, 808.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 404.989 CPU sec, 22.648 real sec
[0000] Calling mem_process_seqs.., task: 1640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520005, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 457, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (629.32, 463.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1520, 2367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1775.43, 987.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 399.138 CPU sec, 22.341 real sec
[0000] Calling mem_process_seqs.., task: 1641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520143, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 668, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (838.70, 696.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 2029, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (1987.61, 1227.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 402.773 CPU sec, 22.603 real sec
[0000] Calling mem_process_seqs.., task: 1642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519888, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 927, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3236)
[0000][PE] mean and std.dev: (1146.90, 864.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1327, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (1432.52, 749.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 405.271 CPU sec, 22.709 real sec
[0000] Calling mem_process_seqs.., task: 1643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520177, 6, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 704, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (815.45, 761.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1352, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (1460.90, 731.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 398.637 CPU sec, 22.336 real sec
[0000] Calling mem_process_seqs.., task: 1644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519864, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 669, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4983)
[0000][PE] mean and std.dev: (1065.53, 996.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1522, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4974)
[0000][PE] mean and std.dev: (1427.15, 846.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 403.258 CPU sec, 22.601 real sec
[0000] Calling mem_process_seqs.., task: 1645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519744, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 534, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (974.76, 923.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1465, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1573.00, 633.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 403.725 CPU sec, 22.612 real sec
[0000] Calling mem_process_seqs.., task: 1646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520226, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (516, 1353, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6456)
[0000][PE] mean and std.dev: (1546.83, 1203.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1836, 2146, 3762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7614)
[0000][PE] mean and std.dev: (2559.00, 1230.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 401.762 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 1647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520305, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (935, 1203, 3366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8228)
[0000][PE] mean and std.dev: (1961.14, 1925.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1697, 3027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7279)
[0000][PE] mean and std.dev: (1884.72, 1391.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 399.699 CPU sec, 22.391 real sec
[0000] Calling mem_process_seqs.., task: 1648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519777, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 753, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4580)
[0000][PE] mean and std.dev: (968.53, 807.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1247, 3277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7769)
[0000][PE] mean and std.dev: (1974.67, 1354.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 405.201 CPU sec, 22.706 real sec
[0000] Calling mem_process_seqs.., task: 1649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519957, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (630, 1338, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (1148.44, 610.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1385, 1580, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 3302)
[0000][PE] mean and std.dev: (1446.65, 504.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 408.950 CPU sec, 22.945 real sec
[0000] Calling mem_process_seqs.., task: 1650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520040, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 716, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (982.62, 790.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1338, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3280)
[0000][PE] mean and std.dev: (1311.94, 509.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 396.445 CPU sec, 22.253 real sec
[0000] Calling mem_process_seqs.., task: 1651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519997, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (521, 1159, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (1264.07, 985.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1657, 3781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8805)
[0000][PE] mean and std.dev: (2461.00, 1975.77)
[0000][PE] low and high boundaries for proper pairs: (1, 11317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 398.272 CPU sec, 22.305 real sec
[0000] Calling mem_process_seqs.., task: 1652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520257, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 865, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4566)
[0000][PE] mean and std.dev: (1225.71, 1201.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1138, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6537)
[0000][PE] mean and std.dev: (1630.24, 1432.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 400.629 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 1653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520113, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 1129, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1319.20, 1276.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1481, 2453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5549)
[0000][PE] mean and std.dev: (1685.77, 1182.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 400.481 CPU sec, 22.413 real sec
[0000] Calling mem_process_seqs.., task: 1654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205222
	[0000][ M::kt_pipeline] read 1205222 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520205, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 456, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (869.04, 870.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1573, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (1649.00, 752.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 397.895 CPU sec, 22.297 real sec
[0000] Calling mem_process_seqs.., task: 1655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519729, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1058, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (1084.35, 863.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1354, 4321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11453)
[0000][PE] mean and std.dev: (2307.75, 2378.58)
[0000][PE] low and high boundaries for proper pairs: (1, 15019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205222 reads in 403.141 CPU sec, 22.550 real sec
[0000] Calling mem_process_seqs.., task: 1656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520226, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 847, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (1061.09, 916.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.83, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1228, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (1150.50, 506.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 403.742 CPU sec, 22.687 real sec
[0000] Calling mem_process_seqs.., task: 1657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519952, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 1368, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7237)
[0000][PE] mean and std.dev: (1566.65, 1317.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.32, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1427, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6945)
[0000][PE] mean and std.dev: (2038.16, 1314.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 401.614 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 1658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520171, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 875, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (1059.26, 799.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1395, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (1342.69, 829.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 400.718 CPU sec, 22.430 real sec
[0000] Calling mem_process_seqs.., task: 1659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519849, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (510, 1467, 2737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7191)
[0000][PE] mean and std.dev: (1664.40, 1318.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1322, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5103)
[0000][PE] mean and std.dev: (1484.50, 882.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 399.021 CPU sec, 22.344 real sec
[0000] Calling mem_process_seqs.., task: 1660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520112, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 919, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3785)
[0000][PE] mean and std.dev: (944.21, 714.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1169, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1251.30, 842.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 400.590 CPU sec, 22.435 real sec
[0000] Calling mem_process_seqs.., task: 1661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520185, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 927, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5735)
[0000][PE] mean and std.dev: (1254.90, 1275.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.21, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1204, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5093)
[0000][PE] mean and std.dev: (1353.58, 693.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 402.819 CPU sec, 22.565 real sec
[0000] Calling mem_process_seqs.., task: 1662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520068, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1153, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5603)
[0000][PE] mean and std.dev: (1178.84, 958.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 1664, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4459)
[0000][PE] mean and std.dev: (1538.53, 798.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 403.247 CPU sec, 22.571 real sec
[0000] Calling mem_process_seqs.., task: 1663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520112, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 993, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (873.15, 512.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1124, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (1254.64, 779.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 402.849 CPU sec, 22.568 real sec
[0000] Calling mem_process_seqs.., task: 1664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519963, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (520, 848, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (787.42, 458.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1200, 1725, 3224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7272)
[0000][PE] mean and std.dev: (2182.96, 1428.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 401.132 CPU sec, 22.424 real sec
[0000] Calling mem_process_seqs.., task: 1665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519935, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 606, 2465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6741)
[0000][PE] mean and std.dev: (1276.66, 1357.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1606, 2364, 5722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13954)
[0000][PE] mean and std.dev: (3603.95, 2727.54)
[0000][PE] low and high boundaries for proper pairs: (1, 18070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 407.243 CPU sec, 22.827 real sec
[0000] Calling mem_process_seqs.., task: 1666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520156, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 1155, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (1073.27, 701.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.37, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1708, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6042)
[0000][PE] mean and std.dev: (2018.59, 1368.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 400.944 CPU sec, 22.480 real sec
[0000] Calling mem_process_seqs.., task: 1667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519938, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 986, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (1034.59, 815.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1320, 3295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8043)
[0000][PE] mean and std.dev: (2361.77, 2168.17)
[0000][PE] low and high boundaries for proper pairs: (1, 11034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 397.439 CPU sec, 22.275 real sec
[0000] Calling mem_process_seqs.., task: 1668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519795, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 930, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (990.09, 654.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1378, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5731)
[0000][PE] mean and std.dev: (1569.22, 852.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 402.935 CPU sec, 22.558 real sec
[0000] Calling mem_process_seqs.., task: 1669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520603, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 839, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (1016.57, 672.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.71, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1530, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4997)
[0000][PE] mean and std.dev: (1871.11, 1230.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 400.542 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 1670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519745, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 892, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (1058.52, 753.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1800, 4422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11000)
[0000][PE] mean and std.dev: (2827.28, 2483.99)
[0000][PE] low and high boundaries for proper pairs: (1, 14289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 399.603 CPU sec, 22.391 real sec
[0000] Calling mem_process_seqs.., task: 1671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519946, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 710, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2678)
[0000][PE] mean and std.dev: (710.23, 440.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.95, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1364, 1750, 2949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6119)
[0000][PE] mean and std.dev: (2192.07, 1354.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 403.513 CPU sec, 22.575 real sec
[0000] Calling mem_process_seqs.., task: 1672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520196, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 1123, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (1010.26, 764.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1662, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (1757.67, 891.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 401.095 CPU sec, 22.468 real sec
[0000] Calling mem_process_seqs.., task: 1673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520392, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 1069, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (1289.71, 1102.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1397, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6028)
[0000][PE] mean and std.dev: (1638.32, 934.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 401.663 CPU sec, 22.478 real sec
[0000] Calling mem_process_seqs.., task: 1674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520272, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 1261, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5861)
[0000][PE] mean and std.dev: (1442.80, 1114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1625, 3080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6946)
[0000][PE] mean and std.dev: (2179.33, 1482.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 401.017 CPU sec, 22.434 real sec
[0000] Calling mem_process_seqs.., task: 1675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519768, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 1092, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5639)
[0000][PE] mean and std.dev: (1296.56, 1063.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 2004, 2871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6503)
[0000][PE] mean and std.dev: (2133.95, 1539.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 404.023 CPU sec, 22.638 real sec
[0000] Calling mem_process_seqs.., task: 1676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520473, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 669, 3020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8278)
[0000][PE] mean and std.dev: (1646.36, 1774.53)
[0000][PE] low and high boundaries for proper pairs: (1, 10907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.87, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1193, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (1425.68, 926.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 406.707 CPU sec, 22.800 real sec
[0000] Calling mem_process_seqs.., task: 1677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519897, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 946, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1102.62, 992.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1367, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (1601.79, 972.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 402.322 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 1678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519616, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 969, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (1024.75, 748.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1398, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (1478.50, 961.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 404.176 CPU sec, 22.646 real sec
[0000] Calling mem_process_seqs.., task: 1679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520018, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1283, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (1081.29, 693.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1142, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (1298.52, 719.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 401.102 CPU sec, 22.580 real sec
[0000] Calling mem_process_seqs.., task: 1680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520045, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (477, 1111, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (922.06, 610.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.73, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1572, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3564)
[0000][PE] mean and std.dev: (1563.69, 686.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 410.322 CPU sec, 22.977 real sec
[0000] Calling mem_process_seqs.., task: 1681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520072, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 863, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7165)
[0000][PE] mean and std.dev: (1003.94, 1083.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.31, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (476, 1326, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5600)
[0000][PE] mean and std.dev: (1309.59, 1106.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 397.275 CPU sec, 22.254 real sec
[0000] Calling mem_process_seqs.., task: 1682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520353, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 764, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (1106.50, 850.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1276, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (1320.60, 669.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 400.441 CPU sec, 22.423 real sec
[0000] Calling mem_process_seqs.., task: 1683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520283, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (533, 885, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6053)
[0000][PE] mean and std.dev: (1410.91, 1195.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1180, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (1223.84, 396.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 398.612 CPU sec, 22.317 real sec
[0000] Calling mem_process_seqs.., task: 1684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520017, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 533, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6827)
[0000][PE] mean and std.dev: (1289.60, 1390.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1061, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2168)
[0000][PE] mean and std.dev: (1025.36, 367.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 409.572 CPU sec, 22.939 real sec
[0000] Calling mem_process_seqs.., task: 1685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 520423, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 962, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (1129.11, 958.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (617, 815, 2839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7283)
[0000][PE] mean and std.dev: (1534.40, 1228.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9505)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1780, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1685.62, 1101.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 401.309 CPU sec, 22.453 real sec
[0000] Calling mem_process_seqs.., task: 1686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520119, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 789, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (888.77, 676.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1356, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (1303.91, 682.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 409.585 CPU sec, 23.056 real sec
[0000] Calling mem_process_seqs.., task: 1687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520035, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 686, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4086)
[0000][PE] mean and std.dev: (940.52, 850.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (728, 1029, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (928.54, 355.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 403.885 CPU sec, 22.639 real sec
[0000] Calling mem_process_seqs.., task: 1688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519908, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 1012, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (999.29, 640.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 1138, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (1059.00, 698.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 410.554 CPU sec, 23.043 real sec
[0000] Calling mem_process_seqs.., task: 1689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520197, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (616, 1202, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (1451.86, 1244.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1718, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (1776.46, 781.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 404.740 CPU sec, 22.649 real sec
[0000] Calling mem_process_seqs.., task: 1690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519797, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1547, 3056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8290)
[0000][PE] mean and std.dev: (1985.26, 1762.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.57, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1706, 2919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6927)
[0000][PE] mean and std.dev: (2173.61, 1427.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 410.491 CPU sec, 23.013 real sec
[0000] Calling mem_process_seqs.., task: 1691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519861, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (588, 874, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (978.39, 652.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1288, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6693)
[0000][PE] mean and std.dev: (1602.43, 1254.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 402.721 CPU sec, 22.571 real sec
[0000] Calling mem_process_seqs.., task: 1692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519767, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 506, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7190)
[0000][PE] mean and std.dev: (1189.17, 1267.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1147, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (1388.69, 779.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 410.653 CPU sec, 22.978 real sec
[0000] Calling mem_process_seqs.., task: 1693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519739, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 863, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (1007.77, 762.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1957, 2977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6903)
[0000][PE] mean and std.dev: (2019.84, 1237.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 401.192 CPU sec, 22.453 real sec
[0000] Calling mem_process_seqs.., task: 1694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519821, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 1060, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4215)
[0000][PE] mean and std.dev: (992.86, 773.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1463, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (1219.87, 453.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 402.927 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 1695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520247, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 1163, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5421)
[0000][PE] mean and std.dev: (1152.87, 810.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1337, 1832, 2768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (1833.71, 1168.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 399.775 CPU sec, 22.370 real sec
[0000] Calling mem_process_seqs.., task: 1696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520042, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1244, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5854)
[0000][PE] mean and std.dev: (1524.92, 1402.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1850, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5781)
[0000][PE] mean and std.dev: (1807.19, 1011.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 409.551 CPU sec, 22.924 real sec
[0000] Calling mem_process_seqs.., task: 1697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520099, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (713, 1283, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7268)
[0000][PE] mean and std.dev: (1700.38, 1604.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1370, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6454)
[0000][PE] mean and std.dev: (1813.65, 1072.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 400.775 CPU sec, 22.432 real sec
[0000] Calling mem_process_seqs.., task: 1698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519836, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (661, 1523, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5569)
[0000][PE] mean and std.dev: (1675.96, 1344.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.10, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1508, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1415.14, 683.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 403.378 CPU sec, 22.619 real sec
[0000] Calling mem_process_seqs.., task: 1699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520598, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 924, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1034.38, 939.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1294, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1517.08, 771.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 402.118 CPU sec, 22.536 real sec
[0000] Calling mem_process_seqs.., task: 1700
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519873, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 1170, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (1337.73, 1089.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 1013, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (983.13, 531.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 402.580 CPU sec, 22.678 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000096 bp)...
[0000] Calling mem_process_seqs.., task: 1701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519738, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (504, 1751, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1713.39, 1227.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1405, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4774)
[0000][PE] mean and std.dev: (1731.82, 1093.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 396.950 CPU sec, 22.369 real sec
[0000] Calling mem_process_seqs.., task: 1702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519886, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (610, 1234, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (1176.62, 690.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1328, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (1383.80, 721.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 404.275 CPU sec, 22.688 real sec
[0000] Calling mem_process_seqs.., task: 1703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520079, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 799, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4308)
[0000][PE] mean and std.dev: (1023.54, 852.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1415, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5059)
[0000][PE] mean and std.dev: (1575.95, 757.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 400.564 CPU sec, 22.441 real sec
[0000] Calling mem_process_seqs.., task: 1704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520533, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (538, 1004, 4339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11941)
[0000][PE] mean and std.dev: (2410.81, 2377.37)
[0000][PE] low and high boundaries for proper pairs: (1, 15742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1192, 3089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7495)
[0000][PE] mean and std.dev: (1591.81, 1107.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 401.572 CPU sec, 22.505 real sec
[0000] Calling mem_process_seqs.., task: 1705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519958, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 694, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4655)
[0000][PE] mean and std.dev: (1164.38, 1105.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.37, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1210, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5284)
[0000][PE] mean and std.dev: (1425.50, 1031.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 403.790 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 1706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205340
	[0000][ M::kt_pipeline] read 1205340 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519735, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 677, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2676)
[0000][PE] mean and std.dev: (808.00, 561.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1310, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4499)
[0000][PE] mean and std.dev: (1499.50, 734.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 403.557 CPU sec, 22.672 real sec
[0000] Calling mem_process_seqs.., task: 1707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519668, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 941, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4989)
[0000][PE] mean and std.dev: (1050.50, 946.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1211, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (1262.78, 597.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205340 reads in 408.259 CPU sec, 22.840 real sec
[0000] Calling mem_process_seqs.., task: 1708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519892, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 862, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4342)
[0000][PE] mean and std.dev: (1131.56, 969.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1942, 2732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5666)
[0000][PE] mean and std.dev: (1942.65, 767.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 406.033 CPU sec, 22.727 real sec
[0000] Calling mem_process_seqs.., task: 1709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520063, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 971, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1015.95, 770.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1281, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (1302.40, 689.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 403.132 CPU sec, 22.574 real sec
[0000] Calling mem_process_seqs.., task: 1710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519689, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 720, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (1001.72, 799.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1144, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1275.76, 650.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 405.513 CPU sec, 22.722 real sec
[0000] Calling mem_process_seqs.., task: 1711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520133, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 694, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5075)
[0000][PE] mean and std.dev: (964.10, 832.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1529, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4015)
[0000][PE] mean and std.dev: (1495.77, 634.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 406.726 CPU sec, 22.789 real sec
[0000] Calling mem_process_seqs.., task: 1712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519716, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 732, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (893.22, 819.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1324, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (1322.27, 789.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 405.478 CPU sec, 22.715 real sec
[0000] Calling mem_process_seqs.., task: 1713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519985, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 848, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (1078.43, 853.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1712, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5324)
[0000][PE] mean and std.dev: (1712.11, 975.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 403.593 CPU sec, 22.605 real sec
[0000] Calling mem_process_seqs.., task: 1714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 519596, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1121, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5798)
[0000][PE] mean and std.dev: (1293.42, 1080.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.80, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1317, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (1309.82, 684.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 401.999 CPU sec, 22.539 real sec
[0000] Calling mem_process_seqs.., task: 1715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520003, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1064, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1077.05, 822.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1293, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4324)
[0000][PE] mean and std.dev: (1276.90, 636.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 402.709 CPU sec, 22.577 real sec
[0000] Calling mem_process_seqs.., task: 1716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519771, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 1049, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5534)
[0000][PE] mean and std.dev: (1455.07, 1233.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1631, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5963)
[0000][PE] mean and std.dev: (1579.15, 844.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 404.336 CPU sec, 22.672 real sec
[0000] Calling mem_process_seqs.., task: 1717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519729, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 850, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4906)
[0000][PE] mean and std.dev: (927.69, 687.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1162, 2835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7075)
[0000][PE] mean and std.dev: (1615.25, 1204.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 402.228 CPU sec, 22.530 real sec
[0000] Calling mem_process_seqs.., task: 1718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205360
	[0000][ M::kt_pipeline] read 1205360 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520055, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 1231, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4538)
[0000][PE] mean and std.dev: (976.64, 878.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1637, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4459)
[0000][PE] mean and std.dev: (1428.16, 722.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 404.831 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 1719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519847, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 1037, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (1065.04, 928.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1343, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (1446.82, 765.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205360 reads in 402.217 CPU sec, 22.555 real sec
[0000] Calling mem_process_seqs.., task: 1720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519630, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1247, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (1189.96, 866.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1867, 3480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7882)
[0000][PE] mean and std.dev: (2259.95, 1455.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 404.290 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 1721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520042, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (496, 1158, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1029.25, 776.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1587, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (1548.63, 817.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 407.414 CPU sec, 22.801 real sec
[0000] Calling mem_process_seqs.., task: 1722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520309, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (532, 945, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2638)
[0000][PE] mean and std.dev: (977.21, 598.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1511, 2041, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (1969.95, 728.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 402.099 CPU sec, 22.554 real sec
[0000] Calling mem_process_seqs.., task: 1723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520089, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 797, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (628.92, 333.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1616, 3490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8166)
[0000][PE] mean and std.dev: (2225.87, 1638.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 402.386 CPU sec, 22.539 real sec
[0000] Calling mem_process_seqs.., task: 1724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520258, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 701, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4993)
[0000][PE] mean and std.dev: (966.64, 868.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1179, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3279)
[0000][PE] mean and std.dev: (1219.17, 603.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 401.218 CPU sec, 22.468 real sec
[0000] Calling mem_process_seqs.., task: 1725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519715, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (626, 873, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (960.54, 523.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.38, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1340, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (1430.39, 869.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 403.955 CPU sec, 22.601 real sec
[0000] Calling mem_process_seqs.., task: 1726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519763, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 623, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (767.06, 614.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 1497, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (465, 2655)
[0000][PE] mean and std.dev: (1423.12, 389.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 404.614 CPU sec, 22.672 real sec
[0000] Calling mem_process_seqs.., task: 1727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520136, 6, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 591, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (791.45, 579.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.49, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1506, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (1453.68, 720.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 404.761 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 1728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520027, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 637, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5140)
[0000][PE] mean and std.dev: (1124.80, 1278.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1532, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (1511.53, 664.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 404.726 CPU sec, 22.651 real sec
[0000] Calling mem_process_seqs.., task: 1729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520091, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 774, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4199)
[0000][PE] mean and std.dev: (990.68, 802.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.92, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1481, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (1552.87, 633.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 401.597 CPU sec, 22.514 real sec
[0000] Calling mem_process_seqs.., task: 1730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520076, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 1338, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3810)
[0000][PE] mean and std.dev: (1177.81, 792.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1206, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (1272.26, 521.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 399.948 CPU sec, 22.390 real sec
[0000] Calling mem_process_seqs.., task: 1731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520045, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 327, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2067)
[0000][PE] mean and std.dev: (537.43, 459.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1643, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (1736.30, 941.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 406.068 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 1732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519867, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (681, 1233, 2580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6378)
[0000][PE] mean and std.dev: (1493.67, 1124.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1329, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (1523.83, 875.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 406.460 CPU sec, 22.757 real sec
[0000] Calling mem_process_seqs.., task: 1733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519803, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 810, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (947.97, 792.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1488, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6072)
[0000][PE] mean and std.dev: (1685.33, 1239.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 406.289 CPU sec, 22.780 real sec
[0000] Calling mem_process_seqs.., task: 1734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519620, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 887, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (1079.67, 903.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.36, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 1259, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6210)
[0000][PE] mean and std.dev: (1156.92, 991.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 406.434 CPU sec, 22.754 real sec
[0000] Calling mem_process_seqs.., task: 1735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 519796, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (541, 1321, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7063)
[0000][PE] mean and std.dev: (1616.90, 1262.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.94, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1520, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (1392.85, 715.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 406.694 CPU sec, 22.840 real sec
[0000] Calling mem_process_seqs.., task: 1736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205248
	[0000][ M::kt_pipeline] read 1205248 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520124, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1212, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4748)
[0000][PE] mean and std.dev: (1222.76, 921.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.50, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1537, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5237)
[0000][PE] mean and std.dev: (1671.20, 828.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 404.584 CPU sec, 22.706 real sec
[0000] Calling mem_process_seqs.., task: 1737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519921, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 407, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5748)
[0000][PE] mean and std.dev: (1007.61, 1135.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1416, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (1541.90, 988.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205248 reads in 407.661 CPU sec, 22.801 real sec
[0000] Calling mem_process_seqs.., task: 1738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520111, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (696, 1395, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1368.68, 821.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1810, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5045)
[0000][PE] mean and std.dev: (1683.16, 973.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 402.757 CPU sec, 22.570 real sec
[0000] Calling mem_process_seqs.., task: 1739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519974, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1031, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5787)
[0000][PE] mean and std.dev: (1382.19, 1389.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1952, 3621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8479)
[0000][PE] mean and std.dev: (2464.55, 2025.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 406.169 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 1740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205276
	[0000][ M::kt_pipeline] read 1205276 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520217, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 854, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (968.50, 828.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1705, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (1626.35, 751.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 404.620 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 1741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520647, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 960, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (1193.38, 1050.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1270, 2303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4917)
[0000][PE] mean and std.dev: (1596.50, 1002.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205276 reads in 403.438 CPU sec, 22.647 real sec
[0000] Calling mem_process_seqs.., task: 1742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520403, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 803, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (1069.03, 959.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1301, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6471)
[0000][PE] mean and std.dev: (1315.29, 908.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 402.711 CPU sec, 22.604 real sec
[0000] Calling mem_process_seqs.., task: 1743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520332, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (532, 908, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6217)
[0000][PE] mean and std.dev: (1430.21, 1341.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1345, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (1197.14, 480.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 402.315 CPU sec, 22.527 real sec
[0000] Calling mem_process_seqs.., task: 1744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520618, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 753, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4456)
[0000][PE] mean and std.dev: (1091.12, 926.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 1700, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5604)
[0000][PE] mean and std.dev: (2086.15, 1139.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 405.520 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 1745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519828, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 747, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5946)
[0000][PE] mean and std.dev: (1192.84, 1225.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1880, 3034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7098)
[0000][PE] mean and std.dev: (1755.73, 1040.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 407.147 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 1746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520099, 0, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 1172, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4512)
[0000][PE] mean and std.dev: (1107.33, 898.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.46, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1117, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5504)
[0000][PE] mean and std.dev: (1534.46, 993.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 410.893 CPU sec, 23.024 real sec
[0000] Calling mem_process_seqs.., task: 1747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520267, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 986, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5059)
[0000][PE] mean and std.dev: (1298.96, 1093.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1426, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1468.06, 831.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 401.105 CPU sec, 22.475 real sec
[0000] Calling mem_process_seqs.., task: 1748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520121, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (593, 962, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (1034.94, 621.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (531, 1555, 2624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6810)
[0000][PE] mean and std.dev: (1478.21, 982.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 403.900 CPU sec, 22.616 real sec
[0000] Calling mem_process_seqs.., task: 1749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519921, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 437, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (781.04, 913.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1371, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (1463.95, 850.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 403.892 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 1750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520760, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 826, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3114)
[0000][PE] mean and std.dev: (949.62, 684.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1063, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4818)
[0000][PE] mean and std.dev: (1442.05, 1027.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 398.515 CPU sec, 22.392 real sec
[0000] Calling mem_process_seqs.., task: 1751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520300, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 574, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4285)
[0000][PE] mean and std.dev: (927.52, 792.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1439, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (1227.74, 554.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 405.385 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 1752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519532, 11, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 1018, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (738.20, 496.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.86, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1661, 2096, 2934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5480)
[0000][PE] mean and std.dev: (2190.36, 1238.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7143)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1224, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3768)
[0000][PE] mean and std.dev: (1064.59, 400.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 408.306 CPU sec, 22.893 real sec
[0000] Calling mem_process_seqs.., task: 1753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519812, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1100, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (900.63, 542.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.73, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1242, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (1261.08, 518.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 403.658 CPU sec, 22.608 real sec
[0000] Calling mem_process_seqs.., task: 1754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519881, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1005, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6253)
[0000][PE] mean and std.dev: (1392.88, 1379.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1640, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1570.04, 902.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 406.018 CPU sec, 22.807 real sec
[0000] Calling mem_process_seqs.., task: 1755
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519763, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 608, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (756.18, 506.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1989, 2941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6285)
[0000][PE] mean and std.dev: (1967.86, 1214.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 399.214 CPU sec, 22.403 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000032 bp)...
[0000] Calling mem_process_seqs.., task: 1756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520469, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 405, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (787.73, 781.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1477, 1734, 3297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6937)
[0000][PE] mean and std.dev: (2284.58, 1496.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 394.006 CPU sec, 22.154 real sec
[0000] Calling mem_process_seqs.., task: 1757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519897, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 911, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7341)
[0000][PE] mean and std.dev: (1669.54, 1747.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1301, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4206)
[0000][PE] mean and std.dev: (1346.50, 671.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 401.861 CPU sec, 22.564 real sec
[0000] Calling mem_process_seqs.., task: 1758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520183, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 361, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2344)
[0000][PE] mean and std.dev: (487.13, 359.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1522, 1825, 2552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1838.06, 898.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 403.147 CPU sec, 22.562 real sec
[0000] Calling mem_process_seqs.., task: 1759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519946, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 780, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6057)
[0000][PE] mean and std.dev: (1127.30, 1146.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.50, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1811, 3064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7698)
[0000][PE] mean and std.dev: (2344.00, 2048.42)
[0000][PE] low and high boundaries for proper pairs: (1, 10538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 403.249 CPU sec, 22.580 real sec
[0000] Calling mem_process_seqs.., task: 1760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519600, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 722, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2263)
[0000][PE] mean and std.dev: (760.78, 514.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1301, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7210)
[0000][PE] mean and std.dev: (1604.78, 1282.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 405.159 CPU sec, 22.693 real sec
[0000] Calling mem_process_seqs.., task: 1761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519644, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1043, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (996.89, 714.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.52, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1436, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (1423.06, 780.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 404.682 CPU sec, 22.669 real sec
[0000] Calling mem_process_seqs.., task: 1762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519965, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 665, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (855.59, 736.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1197, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (29, 2509)
[0000][PE] mean and std.dev: (1200.92, 482.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 407.355 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 1763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520300, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 716, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4187)
[0000][PE] mean and std.dev: (938.09, 837.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1138, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (1275.33, 761.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 399.856 CPU sec, 22.395 real sec
[0000] Calling mem_process_seqs.., task: 1764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520096, 6, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1134, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4440)
[0000][PE] mean and std.dev: (878.00, 692.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.95, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1641, 2781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6375)
[0000][PE] mean and std.dev: (1935.68, 1315.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 400.422 CPU sec, 22.447 real sec
[0000] Calling mem_process_seqs.., task: 1765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520177, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 554, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (899.63, 740.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1368, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (280, 2370)
[0000][PE] mean and std.dev: (1256.60, 359.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 399.452 CPU sec, 22.407 real sec
[0000] Calling mem_process_seqs.., task: 1766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519963, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 1102, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1016.71, 776.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1319, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (1329.12, 640.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 400.305 CPU sec, 22.398 real sec
[0000] Calling mem_process_seqs.., task: 1767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205442
	[0000][ M::kt_pipeline] read 1205442 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520356, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 879, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (1249.88, 1219.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1145, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (1397.77, 894.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 399.464 CPU sec, 22.362 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519967, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 1030, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (1166.96, 978.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1695, 3098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6904)
[0000][PE] mean and std.dev: (2045.53, 1537.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205442 reads in 399.547 CPU sec, 22.346 real sec
[0000] Calling mem_process_seqs.., task: 1769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520191, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1059, 3317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9173)
[0000][PE] mean and std.dev: (1929.52, 1853.33)
[0000][PE] low and high boundaries for proper pairs: (1, 12101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 2199, 3311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7759)
[0000][PE] mean and std.dev: (2229.65, 1380.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 398.422 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 1770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520029, 9, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 874, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (1028.42, 889.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1136, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5599)
[0000][PE] mean and std.dev: (1420.77, 942.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 402.338 CPU sec, 22.553 real sec
[0000] Calling mem_process_seqs.., task: 1771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519942, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 895, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (862.40, 605.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1654, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5776)
[0000][PE] mean and std.dev: (1994.13, 1460.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 402.097 CPU sec, 22.542 real sec
[0000] Calling mem_process_seqs.., task: 1772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519734, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 537, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1418)
[0000][PE] mean and std.dev: (502.12, 220.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1425, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3879)
[0000][PE] mean and std.dev: (1413.35, 771.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 402.912 CPU sec, 22.599 real sec
[0000] Calling mem_process_seqs.., task: 1773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520183, 10, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 553, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (974.85, 1073.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (115, 1362, 2838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8284)
[0000][PE] mean and std.dev: (1596.67, 2090.32)
[0000][PE] low and high boundaries for proper pairs: (1, 11007)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1338, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3110)
[0000][PE] mean and std.dev: (1254.46, 549.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 406.185 CPU sec, 22.837 real sec
[0000] Calling mem_process_seqs.., task: 1774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520319, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 803, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1134.09, 949.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1400, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7210)
[0000][PE] mean and std.dev: (1791.00, 1323.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 398.710 CPU sec, 22.359 real sec
[0000] Calling mem_process_seqs.., task: 1775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520198, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (617, 899, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (945.09, 644.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1156, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5874)
[0000][PE] mean and std.dev: (1459.19, 1215.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 403.150 CPU sec, 22.581 real sec
[0000] Calling mem_process_seqs.., task: 1776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520249, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 878, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4287)
[0000][PE] mean and std.dev: (1068.87, 1085.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.51, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1520, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3966)
[0000][PE] mean and std.dev: (1433.71, 594.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 400.530 CPU sec, 22.439 real sec
[0000] Calling mem_process_seqs.., task: 1777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519789, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (623, 1167, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5252)
[0000][PE] mean and std.dev: (1451.60, 1120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.37, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1273, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6106)
[0000][PE] mean and std.dev: (1734.00, 1210.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 404.225 CPU sec, 22.638 real sec
[0000] Calling mem_process_seqs.., task: 1778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520087, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 786, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (912.89, 658.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1547, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1632.95, 830.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 401.985 CPU sec, 22.528 real sec
[0000] Calling mem_process_seqs.., task: 1779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520118, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1137, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6016)
[0000][PE] mean and std.dev: (1399.23, 1355.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.94, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 1211, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5142)
[0000][PE] mean and std.dev: (1351.73, 1010.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 405.161 CPU sec, 22.712 real sec
[0000] Calling mem_process_seqs.., task: 1780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520463, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 889, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (966.60, 699.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1257, 2294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (1493.32, 1249.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 398.117 CPU sec, 22.279 real sec
[0000] Calling mem_process_seqs.., task: 1781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520026, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 1233, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (1288.74, 1178.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1565, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (1553.91, 682.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 401.912 CPU sec, 22.520 real sec
[0000] Calling mem_process_seqs.., task: 1782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520474, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 472, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3320)
[0000][PE] mean and std.dev: (883.28, 805.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1419, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (1610.56, 871.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 404.939 CPU sec, 22.661 real sec
[0000] Calling mem_process_seqs.., task: 1783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520329, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 1149, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5309)
[0000][PE] mean and std.dev: (1241.31, 918.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.46, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1185, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (1245.00, 710.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 410.946 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 1784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520274, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (677, 1045, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (1040.91, 687.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.65, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1281, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1548.38, 851.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 405.420 CPU sec, 22.698 real sec
[0000] Calling mem_process_seqs.., task: 1785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520353, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (904, 1310, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (1468.50, 912.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1336, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (1532.33, 688.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 405.575 CPU sec, 22.748 real sec
[0000] Calling mem_process_seqs.., task: 1786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520167, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (896, 1368, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5060)
[0000][PE] mean and std.dev: (1634.91, 1240.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (803, 1297, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7169)
[0000][PE] mean and std.dev: (1854.00, 1535.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9291)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1105, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1434.76, 1169.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 403.667 CPU sec, 22.623 real sec
[0000] Calling mem_process_seqs.., task: 1787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520075, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (926, 1328, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1532.00, 1011.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1543, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (1553.23, 764.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 406.236 CPU sec, 22.785 real sec
[0000] Calling mem_process_seqs.., task: 1788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520423, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (698, 1091, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5237)
[0000][PE] mean and std.dev: (1225.47, 819.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1403, 1612, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (169, 3254)
[0000][PE] mean and std.dev: (1527.88, 646.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 409.517 CPU sec, 22.965 real sec
[0000] Calling mem_process_seqs.., task: 1789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519718, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 1186, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6587)
[0000][PE] mean and std.dev: (1405.54, 1380.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1689, 3695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8975)
[0000][PE] mean and std.dev: (2214.26, 1579.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 407.417 CPU sec, 22.842 real sec
[0000] Calling mem_process_seqs.., task: 1790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519832, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (585, 761, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7524)
[0000][PE] mean and std.dev: (1461.82, 1250.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1194, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (1340.90, 593.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 406.271 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 1791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205308
	[0000][ M::kt_pipeline] read 1205308 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520231, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 967, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4537)
[0000][PE] mean and std.dev: (1034.65, 881.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1476, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (1696.79, 1188.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 407.900 CPU sec, 22.908 real sec
[0000] Calling mem_process_seqs.., task: 1792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520097, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (794, 1189, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4922)
[0000][PE] mean and std.dev: (1527.46, 1214.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.89, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1427, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (1386.10, 873.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205308 reads in 408.411 CPU sec, 22.903 real sec
[0000] Calling mem_process_seqs.., task: 1793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519894, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (540, 1112, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4389)
[0000][PE] mean and std.dev: (1189.44, 859.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1222, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (1234.70, 715.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 409.303 CPU sec, 22.969 real sec
[0000] Calling mem_process_seqs.., task: 1794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205298
	[0000][ M::kt_pipeline] read 1205298 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519889, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 590, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (882.48, 712.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1417, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (1528.73, 756.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 407.789 CPU sec, 22.836 real sec
[0000] Calling mem_process_seqs.., task: 1795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520036, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 839, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (989.97, 802.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.30, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1464, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5351)
[0000][PE] mean and std.dev: (1816.64, 1163.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205298 reads in 409.200 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 1796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520300, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1090, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4371)
[0000][PE] mean and std.dev: (1214.90, 1102.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1093, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (1170.71, 474.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 409.226 CPU sec, 22.933 real sec
[0000] Calling mem_process_seqs.., task: 1797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519931, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (441, 1185, 2743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7347)
[0000][PE] mean and std.dev: (1554.10, 1432.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.95, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1556, 2869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6875)
[0000][PE] mean and std.dev: (1922.00, 1401.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 406.856 CPU sec, 22.817 real sec
[0000] Calling mem_process_seqs.., task: 1798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519705, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1034, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (1194.04, 997.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1663, 3003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7319)
[0000][PE] mean and std.dev: (1792.88, 1335.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 409.498 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 1799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520289, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 983, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6049)
[0000][PE] mean and std.dev: (1246.61, 966.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1188, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (1315.52, 791.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 408.144 CPU sec, 22.876 real sec
[0000] Calling mem_process_seqs.., task: 1800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519986, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 1113, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (1102.62, 648.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.47, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1471, 2851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6303)
[0000][PE] mean and std.dev: (1693.00, 1170.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 409.139 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 1801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519968, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 823, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5572)
[0000][PE] mean and std.dev: (1059.36, 970.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1542, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4312)
[0000][PE] mean and std.dev: (1487.00, 713.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 410.021 CPU sec, 22.973 real sec
[0000] Calling mem_process_seqs.., task: 1802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520078, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (694, 977, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5116)
[0000][PE] mean and std.dev: (1197.50, 908.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.35, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 1298, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (1422.19, 616.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 409.596 CPU sec, 22.943 real sec
[0000] Calling mem_process_seqs.., task: 1803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520102, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (545, 1295, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5177)
[0000][PE] mean and std.dev: (1382.44, 1181.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1278, 1557, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6465)
[0000][PE] mean and std.dev: (1999.74, 1517.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 408.451 CPU sec, 22.882 real sec
[0000] Calling mem_process_seqs.., task: 1804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205286
	[0000][ M::kt_pipeline] read 1205286 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520141, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 725, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7243)
[0000][PE] mean and std.dev: (1500.41, 1312.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1309, 1562, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5545)
[0000][PE] mean and std.dev: (1905.07, 928.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 410.154 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 1805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519799, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 403, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4438)
[0000][PE] mean and std.dev: (829.72, 740.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1069, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5121)
[0000][PE] mean and std.dev: (1248.76, 905.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205286 reads in 411.475 CPU sec, 23.040 real sec
[0000] Calling mem_process_seqs.., task: 1806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519926, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (513, 1002, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3564)
[0000][PE] mean and std.dev: (1126.50, 839.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.78, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1486, 3178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7836)
[0000][PE] mean and std.dev: (2098.89, 1822.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 410.577 CPU sec, 22.966 real sec
[0000] Calling mem_process_seqs.., task: 1807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520361, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (490, 1116, 3439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9337)
[0000][PE] mean and std.dev: (1751.08, 1797.09)
[0000][PE] low and high boundaries for proper pairs: (1, 12286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1138, 3062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7586)
[0000][PE] mean and std.dev: (1963.67, 1807.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 409.041 CPU sec, 22.902 real sec
[0000] Calling mem_process_seqs.., task: 1808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520111, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 995, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (937.42, 606.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1301, 2569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5931)
[0000][PE] mean and std.dev: (1570.08, 996.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 409.338 CPU sec, 22.907 real sec
[0000] Calling mem_process_seqs.., task: 1809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519935, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 820, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (1166.32, 1104.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1475, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6619)
[0000][PE] mean and std.dev: (1834.78, 1072.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 412.668 CPU sec, 23.123 real sec
[0000] Calling mem_process_seqs.., task: 1810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520320, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (501, 1125, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (1087.91, 722.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1240, 1602, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3712)
[0000][PE] mean and std.dev: (1589.88, 649.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 407.978 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 1811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520315, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (706, 1157, 3013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7627)
[0000][PE] mean and std.dev: (1539.50, 1232.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.04, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 408.505 CPU sec, 22.890 real sec
[0000] Calling mem_process_seqs.., task: 1812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520076, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 941, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (1209.25, 1083.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1386, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (1382.95, 868.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 407.919 CPU sec, 22.910 real sec
[0000] Calling mem_process_seqs.., task: 1813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519492, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 576, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (735.61, 552.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1150, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (1136.61, 658.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 408.108 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 1814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520026, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 609, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (822.08, 592.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.86, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1289, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (1225.13, 683.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 407.150 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 1815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519719, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 533, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (919.52, 860.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1326, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (1308.29, 630.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 408.522 CPU sec, 22.874 real sec
[0000] Calling mem_process_seqs.., task: 1816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519794, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 855, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5311)
[0000][PE] mean and std.dev: (1085.25, 930.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1330, 1869, 3495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7825)
[0000][PE] mean and std.dev: (2350.65, 1429.13)
[0000][PE] low and high boundaries for proper pairs: (1, 9990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 408.155 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 1817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520256, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 862, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5417)
[0000][PE] mean and std.dev: (1148.50, 997.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1380, 1985, 3068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6444)
[0000][PE] mean and std.dev: (2113.12, 1028.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 406.595 CPU sec, 22.751 real sec
[0000] Calling mem_process_seqs.., task: 1818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520001, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 879, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6233)
[0000][PE] mean and std.dev: (1525.18, 1631.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.11, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 2100, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7462)
[0000][PE] mean and std.dev: (2087.88, 1546.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 409.816 CPU sec, 22.960 real sec
[0000] Calling mem_process_seqs.., task: 1819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519850, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (644, 1122, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5819)
[0000][PE] mean and std.dev: (1222.81, 933.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1354, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4949)
[0000][PE] mean and std.dev: (1675.40, 1145.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 407.426 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 1820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519745, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 1050, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7992)
[0000][PE] mean and std.dev: (1317.76, 1222.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1497, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1562.47, 1097.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 410.022 CPU sec, 22.980 real sec
[0000] Calling mem_process_seqs.., task: 1821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520079, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 993, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (967.74, 717.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1257, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (1571.47, 922.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 410.342 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 1822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520425, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (606, 1087, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (1236.63, 843.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1421, 3435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8189)
[0000][PE] mean and std.dev: (2156.79, 1934.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 407.607 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 1823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519953, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 1073, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5747)
[0000][PE] mean and std.dev: (1461.79, 1323.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.94, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1922, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6942)
[0000][PE] mean and std.dev: (2128.77, 1817.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 409.902 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 1824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519908, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 683, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (721.63, 504.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1797, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6758)
[0000][PE] mean and std.dev: (1930.12, 1322.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 409.400 CPU sec, 22.918 real sec
[0000] Calling mem_process_seqs.., task: 1825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519949, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (483, 1361, 3004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8046)
[0000][PE] mean and std.dev: (1970.53, 2024.35)
[0000][PE] low and high boundaries for proper pairs: (1, 10567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1262, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1488.50, 817.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 407.303 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 1826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520168, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (618, 833, 3175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8289)
[0000][PE] mean and std.dev: (1831.97, 2052.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1480, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (1512.62, 818.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 408.785 CPU sec, 22.907 real sec
[0000] Calling mem_process_seqs.., task: 1827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519923, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 735, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (896.48, 635.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1997, 2766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6060)
[0000][PE] mean and std.dev: (1915.04, 1042.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 408.194 CPU sec, 22.860 real sec
[0000] Calling mem_process_seqs.., task: 1828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519575, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (596, 1101, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1206.87, 872.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1396, 1841, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5092)
[0000][PE] mean and std.dev: (1968.00, 975.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 409.257 CPU sec, 22.907 real sec
[0000] Calling mem_process_seqs.., task: 1829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520305, 8, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1219, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5037)
[0000][PE] mean and std.dev: (1236.22, 930.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.85, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (654, 1062, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5568)
[0000][PE] mean and std.dev: (1302.72, 918.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 407.407 CPU sec, 22.843 real sec
[0000] Calling mem_process_seqs.., task: 1830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520067, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 953, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6241)
[0000][PE] mean and std.dev: (1426.90, 1268.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1305, 1555, 3051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6543)
[0000][PE] mean and std.dev: (2051.81, 1466.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 407.923 CPU sec, 22.862 real sec
[0000] Calling mem_process_seqs.., task: 1831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520124, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 1015, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4826)
[0000][PE] mean and std.dev: (1199.88, 866.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.40, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1315, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2555)
[0000][PE] mean and std.dev: (1274.60, 444.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 406.476 CPU sec, 22.786 real sec
[0000] Calling mem_process_seqs.., task: 1832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520561, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (525, 955, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5337)
[0000][PE] mean and std.dev: (1277.25, 944.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1607, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4950)
[0000][PE] mean and std.dev: (1787.84, 1008.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 408.522 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 1833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519806, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 671, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2823)
[0000][PE] mean and std.dev: (773.58, 566.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1443, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (1342.56, 573.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 411.097 CPU sec, 23.035 real sec
[0000] Calling mem_process_seqs.., task: 1834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520380, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 974, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6700)
[0000][PE] mean and std.dev: (1508.85, 1692.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.24, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1949, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5598)
[0000][PE] mean and std.dev: (1986.62, 1201.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 406.948 CPU sec, 22.792 real sec
[0000] Calling mem_process_seqs.., task: 1835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520332, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1323, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4326)
[0000][PE] mean and std.dev: (1185.90, 1008.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1694, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6095)
[0000][PE] mean and std.dev: (1918.50, 905.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 407.772 CPU sec, 22.824 real sec
[0000] Calling mem_process_seqs.., task: 1836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520063, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (687, 1149, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (1015.38, 673.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 896)
[0000][PE] mean and std.dev: (511.23, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1153, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2720)
[0000][PE] mean and std.dev: (1201.36, 595.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 406.842 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 1837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519933, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (510, 1176, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1283.52, 985.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1571, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1822.72, 1216.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 409.660 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 1838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519715, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 1108, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (1272.79, 1188.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1488, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (1552.90, 742.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 408.596 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 1839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520265, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 903, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6376)
[0000][PE] mean and std.dev: (1451.95, 1327.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1204, 2629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6155)
[0000][PE] mean and std.dev: (1609.53, 1068.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 407.503 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 1840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520009, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 1248, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5571)
[0000][PE] mean and std.dev: (1136.29, 845.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1754, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6165)
[0000][PE] mean and std.dev: (1595.25, 766.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 409.083 CPU sec, 22.898 real sec
[0000] Calling mem_process_seqs.., task: 1841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520566, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 1120, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4854)
[0000][PE] mean and std.dev: (1198.33, 899.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1149, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5383)
[0000][PE] mean and std.dev: (1478.20, 1011.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 405.063 CPU sec, 22.656 real sec
[0000] Calling mem_process_seqs.., task: 1842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520172, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (728, 1011, 3382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8690)
[0000][PE] mean and std.dev: (1715.57, 1661.84)
[0000][PE] low and high boundaries for proper pairs: (1, 11344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1079, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5366)
[0000][PE] mean and std.dev: (1432.19, 1253.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 406.630 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 1843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520135, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 803, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (853.04, 610.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1793, 4191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10217)
[0000][PE] mean and std.dev: (2564.75, 1723.01)
[0000][PE] low and high boundaries for proper pairs: (1, 13230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 411.270 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 1844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205280
	[0000][ M::kt_pipeline] read 1205280 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519927, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 849, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4309)
[0000][PE] mean and std.dev: (1115.00, 963.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1169, 2606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6104)
[0000][PE] mean and std.dev: (1601.46, 1125.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 410.472 CPU sec, 22.987 real sec
[0000] Calling mem_process_seqs.., task: 1845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519910, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 1073, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (1021.90, 732.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.29, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1258, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4987)
[0000][PE] mean and std.dev: (1522.57, 759.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205280 reads in 411.781 CPU sec, 23.053 real sec
[0000] Calling mem_process_seqs.., task: 1846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520533, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 719, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6574)
[0000][PE] mean and std.dev: (1566.88, 1797.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.26, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1210, 1491, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (1451.78, 702.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 409.671 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 1847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520800, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 552, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5154)
[0000][PE] mean and std.dev: (1176.76, 1151.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1659, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5750)
[0000][PE] mean and std.dev: (1675.13, 979.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 410.330 CPU sec, 22.991 real sec
[0000] Calling mem_process_seqs.., task: 1848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520103, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 675, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2462)
[0000][PE] mean and std.dev: (684.76, 459.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1466, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5144)
[0000][PE] mean and std.dev: (1609.77, 992.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 410.141 CPU sec, 22.966 real sec
[0000] Calling mem_process_seqs.., task: 1849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519886, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 755, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (814.07, 540.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.79, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1358, 2824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6304)
[0000][PE] mean and std.dev: (1577.19, 790.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 408.165 CPU sec, 22.858 real sec
[0000] Calling mem_process_seqs.., task: 1850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519997, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 968, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1372.39, 1152.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1688, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (1641.04, 814.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 407.327 CPU sec, 22.816 real sec
[0000] Calling mem_process_seqs.., task: 1851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520110, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1223, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6001)
[0000][PE] mean and std.dev: (1373.85, 1103.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.52, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1391, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (254, 2704)
[0000][PE] mean and std.dev: (1442.71, 409.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 408.322 CPU sec, 22.891 real sec
[0000] Calling mem_process_seqs.., task: 1852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519571, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1196, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5680)
[0000][PE] mean and std.dev: (1455.95, 1397.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1347, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4992)
[0000][PE] mean and std.dev: (1452.74, 792.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 411.682 CPU sec, 23.049 real sec
[0000] Calling mem_process_seqs.., task: 1853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520096, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1135, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (884.53, 611.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.57, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1202, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (1435.27, 678.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 408.464 CPU sec, 22.875 real sec
[0000] Calling mem_process_seqs.., task: 1854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519907, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 831, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (873.79, 666.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1467, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (1611.10, 777.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 407.436 CPU sec, 22.866 real sec
[0000] Calling mem_process_seqs.., task: 1855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519974, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 987, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5634)
[0000][PE] mean and std.dev: (1293.43, 1015.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1258, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (1244.80, 367.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 408.239 CPU sec, 22.895 real sec
[0000] Calling mem_process_seqs.., task: 1856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520419, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 1184, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5063)
[0000][PE] mean and std.dev: (1380.04, 1042.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1493, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (1811.72, 1151.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 409.603 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 1857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520530, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 820, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4281)
[0000][PE] mean and std.dev: (781.61, 581.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1394, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5368)
[0000][PE] mean and std.dev: (1492.30, 872.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 406.202 CPU sec, 22.729 real sec
[0000] Calling mem_process_seqs.., task: 1858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520032, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 929, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (1300.15, 1154.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1275, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6018)
[0000][PE] mean and std.dev: (1490.10, 928.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 410.426 CPU sec, 22.952 real sec
[0000] Calling mem_process_seqs.., task: 1859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519900, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 849, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (849.83, 609.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (575, 1143, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3551)
[0000][PE] mean and std.dev: (1134.18, 624.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 408.451 CPU sec, 22.867 real sec
[0000] Calling mem_process_seqs.., task: 1860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520442, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 776, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4202)
[0000][PE] mean and std.dev: (1021.35, 931.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1344, 1944, 3036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6420)
[0000][PE] mean and std.dev: (2154.94, 1105.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 408.864 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 1861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520378, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 732, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4849)
[0000][PE] mean and std.dev: (1135.11, 991.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1733, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6006)
[0000][PE] mean and std.dev: (1809.07, 1008.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 410.546 CPU sec, 23.022 real sec
[0000] Calling mem_process_seqs.., task: 1862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519916, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 1009, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (1013.88, 949.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.48, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1128, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (1551.95, 1056.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 407.496 CPU sec, 22.831 real sec
[0000] Calling mem_process_seqs.., task: 1863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519989, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 750, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2608)
[0000][PE] mean and std.dev: (684.40, 414.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 1114, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4937)
[0000][PE] mean and std.dev: (1292.00, 1048.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 411.849 CPU sec, 23.055 real sec
[0000] Calling mem_process_seqs.., task: 1864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520235, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1137, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (1106.76, 841.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1264, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (1337.72, 809.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 411.148 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 1865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519808, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 816, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (1039.82, 792.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.22, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1698, 2935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7021)
[0000][PE] mean and std.dev: (1941.94, 1428.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 408.326 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 1866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519857, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 527, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (1173.91, 1115.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.50, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1442, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (1379.81, 566.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 407.783 CPU sec, 22.813 real sec
[0000] Calling mem_process_seqs.., task: 1867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520575, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 914, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1147.11, 1032.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1736, 2900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6238)
[0000][PE] mean and std.dev: (2075.92, 1190.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 406.202 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 1868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520218, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (765, 1162, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (1027.88, 457.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 2045, 3266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7890)
[0000][PE] mean and std.dev: (2184.77, 1234.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 404.039 CPU sec, 22.634 real sec
[0000] Calling mem_process_seqs.., task: 1869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520167, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 1196, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (1310.81, 1055.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1305, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4153)
[0000][PE] mean and std.dev: (1209.00, 517.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 405.842 CPU sec, 22.726 real sec
[0000] Calling mem_process_seqs.., task: 1870
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000230 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519978, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 1310, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6069)
[0000][PE] mean and std.dev: (1293.73, 1049.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1592, 3382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8348)
[0000][PE] mean and std.dev: (2039.45, 1556.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 406.258 CPU sec, 22.754 real sec
[0000] Calling mem_process_seqs.., task: 1871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520202, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 931, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (960.43, 848.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1232, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4584)
[0000][PE] mean and std.dev: (1315.73, 609.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 405.604 CPU sec, 22.746 real sec
[0000] Calling mem_process_seqs.., task: 1872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519670, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 873, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4946)
[0000][PE] mean and std.dev: (1130.48, 1064.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1206, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5329)
[0000][PE] mean and std.dev: (1568.94, 985.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 411.548 CPU sec, 23.058 real sec
[0000] Calling mem_process_seqs.., task: 1873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519507, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (609, 832, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5190)
[0000][PE] mean and std.dev: (1392.33, 1154.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 1992, 3212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7142)
[0000][PE] mean and std.dev: (2276.23, 1384.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 409.189 CPU sec, 22.982 real sec
[0000] Calling mem_process_seqs.., task: 1874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520048, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 443, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2703)
[0000][PE] mean and std.dev: (621.14, 506.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1545, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1435.07, 723.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 410.449 CPU sec, 23.013 real sec
[0000] Calling mem_process_seqs.., task: 1875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519916, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 685, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5567)
[0000][PE] mean and std.dev: (948.68, 760.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.03, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1107, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (3, 2268)
[0000][PE] mean and std.dev: (1018.32, 495.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 407.835 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 1876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519828, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 534, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (844.54, 741.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.98, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1329, 3391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8205)
[0000][PE] mean and std.dev: (1944.47, 1385.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 409.687 CPU sec, 22.967 real sec
[0000] Calling mem_process_seqs.., task: 1877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519993, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 412, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (690.09, 618.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1321, 1826, 3089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6625)
[0000][PE] mean and std.dev: (1948.94, 984.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 407.262 CPU sec, 22.800 real sec
[0000] Calling mem_process_seqs.., task: 1878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519734, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (547, 1065, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4555)
[0000][PE] mean and std.dev: (1338.37, 1149.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1347, 1545, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (461, 2676)
[0000][PE] mean and std.dev: (1428.29, 441.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 405.645 CPU sec, 22.702 real sec
[0000] Calling mem_process_seqs.., task: 1879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519628, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 513, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1035.52, 1038.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1612, 3061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7225)
[0000][PE] mean and std.dev: (1910.95, 1310.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 409.286 CPU sec, 22.941 real sec
[0000] Calling mem_process_seqs.., task: 1880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520041, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 646, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (934.85, 975.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1924, 3507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8263)
[0000][PE] mean and std.dev: (2307.94, 1278.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 413.781 CPU sec, 23.164 real sec
[0000] Calling mem_process_seqs.., task: 1881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520055, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 790, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (1194.39, 1127.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1290, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (1258.64, 450.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 408.851 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 1882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520134, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 760, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (977.95, 883.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1253, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (1073.93, 437.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 417.234 CPU sec, 23.373 real sec
[0000] Calling mem_process_seqs.., task: 1883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205350
	[0000][ M::kt_pipeline] read 1205350 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519704, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 835, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1221.75, 1144.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 2758, 4349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10765)
[0000][PE] mean and std.dev: (2609.61, 1667.44)
[0000][PE] low and high boundaries for proper pairs: (1, 13973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 412.384 CPU sec, 23.134 real sec
[0000] Calling mem_process_seqs.., task: 1884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519729, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 830, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (950.08, 761.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1374, 1958, 2931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6045)
[0000][PE] mean and std.dev: (2312.64, 1561.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205350 reads in 410.890 CPU sec, 22.994 real sec
[0000] Calling mem_process_seqs.., task: 1885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519932, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 873, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (966.15, 704.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1306, 3611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8705)
[0000][PE] mean and std.dev: (2324.86, 2191.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 408.175 CPU sec, 22.877 real sec
[0000] Calling mem_process_seqs.., task: 1886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520016, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (643, 1095, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (1018.28, 614.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1488, 2964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7080)
[0000][PE] mean and std.dev: (1775.15, 1177.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 411.150 CPU sec, 23.059 real sec
[0000] Calling mem_process_seqs.., task: 1887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519911, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 1319, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5441)
[0000][PE] mean and std.dev: (1572.00, 1287.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.55, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1747, 2479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1615.68, 736.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 411.428 CPU sec, 23.111 real sec
[0000] Calling mem_process_seqs.., task: 1888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519936, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 911, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (983.73, 739.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1493, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6528)
[0000][PE] mean and std.dev: (2008.52, 1426.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 411.272 CPU sec, 23.055 real sec
[0000] Calling mem_process_seqs.., task: 1889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519828, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (673, 1194, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (1244.33, 863.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1791, 2814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6210)
[0000][PE] mean and std.dev: (1949.13, 1218.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 410.452 CPU sec, 23.021 real sec
[0000] Calling mem_process_seqs.., task: 1890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520140, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 921, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1371.93, 1259.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1586, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (1329.58, 670.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 405.743 CPU sec, 22.737 real sec
[0000] Calling mem_process_seqs.., task: 1891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519678, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (887, 1488, 2826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6704)
[0000][PE] mean and std.dev: (1331.53, 950.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1626, 3703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8831)
[0000][PE] mean and std.dev: (2293.90, 2028.86)
[0000][PE] low and high boundaries for proper pairs: (1, 11395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 411.446 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 1892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519552, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (619, 1186, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5329)
[0000][PE] mean and std.dev: (1319.30, 834.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1158, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (1318.00, 655.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 411.828 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 1893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1204956
	[0000][ M::kt_pipeline] read 1204956 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520398, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 1017, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4345)
[0000][PE] mean and std.dev: (1161.53, 862.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1657, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5908)
[0000][PE] mean and std.dev: (1913.53, 1221.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 408.404 CPU sec, 22.936 real sec
[0000] Calling mem_process_seqs.., task: 1894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205264
	[0000][ M::kt_pipeline] read 1205264 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520581, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 928, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (1051.80, 699.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.19, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1071, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6156)
[0000][PE] mean and std.dev: (1510.39, 1325.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204956 reads in 403.310 CPU sec, 22.588 real sec
[0000] Calling mem_process_seqs.., task: 1895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520013, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (736, 1090, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5863)
[0000][PE] mean and std.dev: (1418.64, 1064.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1697, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5491)
[0000][PE] mean and std.dev: (1728.35, 1176.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205264 reads in 411.785 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 1896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520226, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 940, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1038.83, 1019.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 2096, 3117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6813)
[0000][PE] mean and std.dev: (2524.56, 1740.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 405.986 CPU sec, 22.739 real sec
[0000] Calling mem_process_seqs.., task: 1897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205224
	[0000][ M::kt_pipeline] read 1205224 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520261, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (566, 733, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2249)
[0000][PE] mean and std.dev: (699.57, 355.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1435, 2779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6191)
[0000][PE] mean and std.dev: (1995.05, 1342.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 406.415 CPU sec, 22.781 real sec
[0000] Calling mem_process_seqs.., task: 1898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520038, 3, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 511, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (683.29, 521.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1456, 1964, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4759)
[0000][PE] mean and std.dev: (1935.09, 1006.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205224 reads in 409.005 CPU sec, 22.932 real sec
[0000] Calling mem_process_seqs.., task: 1899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205310
	[0000][ M::kt_pipeline] read 1205310 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520295, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1043, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (892.42, 708.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1574, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (1516.22, 881.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 406.297 CPU sec, 22.715 real sec
[0000] Calling mem_process_seqs.., task: 1900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519802, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 812, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4850)
[0000][PE] mean and std.dev: (1065.32, 976.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.45, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1398, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (1350.67, 676.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205310 reads in 408.413 CPU sec, 22.857 real sec
[0000] Calling mem_process_seqs.., task: 1901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519953, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1001, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (1056.76, 920.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.37, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1655, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (1699.90, 864.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 410.851 CPU sec, 22.996 real sec
[0000] Calling mem_process_seqs.., task: 1902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520266, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (663, 1133, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6297)
[0000][PE] mean and std.dev: (1504.65, 1139.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1450, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (1602.76, 746.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 406.966 CPU sec, 22.791 real sec
[0000] Calling mem_process_seqs.., task: 1903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520444, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 874, 3139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8669)
[0000][PE] mean and std.dev: (1730.22, 1961.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.96, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1147, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (1501.38, 926.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 407.608 CPU sec, 22.881 real sec
[0000] Calling mem_process_seqs.., task: 1904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519932, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 658, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2847)
[0000][PE] mean and std.dev: (652.06, 485.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1425, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (1524.95, 722.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 410.263 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 1905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205300
	[0000][ M::kt_pipeline] read 1205300 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520496, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 831, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3833)
[0000][PE] mean and std.dev: (934.78, 740.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1636, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5248)
[0000][PE] mean and std.dev: (1563.55, 833.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 406.011 CPU sec, 22.768 real sec
[0000] Calling mem_process_seqs.., task: 1906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520008, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (693, 1292, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4713)
[0000][PE] mean and std.dev: (1240.86, 815.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 1494, 3500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8050)
[0000][PE] mean and std.dev: (2177.12, 1790.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205300 reads in 409.441 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 1907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520555, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 1077, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5670)
[0000][PE] mean and std.dev: (1310.73, 1080.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.55, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1313, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1535.70, 704.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 412.059 CPU sec, 23.133 real sec
[0000] Calling mem_process_seqs.., task: 1908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519935, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 840, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1007.81, 929.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1568, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5954)
[0000][PE] mean and std.dev: (1751.81, 1203.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 409.457 CPU sec, 23.026 real sec
[0000] Calling mem_process_seqs.., task: 1909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520129, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (574, 1247, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (1235.17, 735.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1574, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4726)
[0000][PE] mean and std.dev: (1675.73, 927.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 408.226 CPU sec, 22.913 real sec
[0000] Calling mem_process_seqs.., task: 1910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520254, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 1117, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1085.00, 810.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.98, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1027, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (1362.88, 941.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 406.893 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 1911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520034, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 541, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (739.27, 816.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1125, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1429.54, 993.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 406.996 CPU sec, 22.804 real sec
[0000] Calling mem_process_seqs.., task: 1912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519738, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 830, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4636)
[0000][PE] mean and std.dev: (1126.43, 1093.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1292, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (1419.39, 574.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 408.012 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 1913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519885, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 1077, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5119)
[0000][PE] mean and std.dev: (1256.91, 1118.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1602, 3010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6916)
[0000][PE] mean and std.dev: (1868.30, 1146.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 411.137 CPU sec, 23.152 real sec
[0000] Calling mem_process_seqs.., task: 1914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520010, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1117, 2165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5765)
[0000][PE] mean and std.dev: (1482.23, 1332.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1300, 3894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9534)
[0000][PE] mean and std.dev: (2443.89, 2158.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 411.143 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 1915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520116, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1211, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4873)
[0000][PE] mean and std.dev: (1217.93, 966.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 2506, 3282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7302)
[0000][PE] mean and std.dev: (2363.14, 1286.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 407.137 CPU sec, 22.839 real sec
[0000] Calling mem_process_seqs.., task: 1916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519955, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (508, 720, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (1035.29, 812.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1279, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5778)
[0000][PE] mean and std.dev: (1411.94, 1019.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 406.843 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 1917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520119, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1032, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (1119.55, 787.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.95, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1399, 2678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5884)
[0000][PE] mean and std.dev: (1839.35, 1366.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 407.073 CPU sec, 22.794 real sec
[0000] Calling mem_process_seqs.., task: 1918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520206, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 1178, 2540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6988)
[0000][PE] mean and std.dev: (1825.81, 1916.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1413, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (1580.68, 768.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 408.887 CPU sec, 22.901 real sec
[0000] Calling mem_process_seqs.., task: 1919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205306
	[0000][ M::kt_pipeline] read 1205306 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519628, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 483, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2331)
[0000][PE] mean and std.dev: (641.60, 460.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.24, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (692, 1734, 5545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15251)
[0000][PE] mean and std.dev: (3128.20, 3148.41)
[0000][PE] low and high boundaries for proper pairs: (1, 20104)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1549, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3609)
[0000][PE] mean and std.dev: (1505.27, 751.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 406.967 CPU sec, 22.848 real sec
[0000] Calling mem_process_seqs.., task: 1920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205312
	[0000][ M::kt_pipeline] read 1205312 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519979, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (716, 1051, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (1046.28, 557.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.04, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1568, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (1631.58, 698.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205306 reads in 409.707 CPU sec, 22.946 real sec
[0000] Calling mem_process_seqs.., task: 1921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520351, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 1079, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (939.42, 711.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1459, 2094, 2936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5890)
[0000][PE] mean and std.dev: (2075.26, 1050.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205312 reads in 408.525 CPU sec, 22.918 real sec
[0000] Calling mem_process_seqs.., task: 1922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520067, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 651, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4886)
[0000][PE] mean and std.dev: (995.88, 982.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.79, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1314, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1520.46, 961.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 407.072 CPU sec, 22.793 real sec
[0000] Calling mem_process_seqs.., task: 1923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520110, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (548, 1441, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6893)
[0000][PE] mean and std.dev: (1649.68, 1421.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1829, 3083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7297)
[0000][PE] mean and std.dev: (2274.19, 1643.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 407.865 CPU sec, 22.889 real sec
[0000] Calling mem_process_seqs.., task: 1924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520218, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 488, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (841.83, 733.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1201, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1184.23, 630.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 407.486 CPU sec, 22.804 real sec
[0000] Calling mem_process_seqs.., task: 1925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520400, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 632, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (787.00, 618.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1177, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (1246.67, 624.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 409.802 CPU sec, 22.952 real sec
[0000] Calling mem_process_seqs.., task: 1926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519667, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 960, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (840.65, 652.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.24, 120.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 1553, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (1627.44, 920.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 408.484 CPU sec, 22.891 real sec
[0000] Calling mem_process_seqs.., task: 1927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519547, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 871, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (979.25, 814.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1282, 3660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8790)
[0000][PE] mean and std.dev: (2355.00, 2181.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 409.572 CPU sec, 22.969 real sec
[0000] Calling mem_process_seqs.., task: 1928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519972, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 644, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (830.03, 780.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1259, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6393)
[0000][PE] mean and std.dev: (1551.82, 1026.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 405.538 CPU sec, 22.748 real sec
[0000] Calling mem_process_seqs.., task: 1929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519877, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (594, 906, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5811)
[0000][PE] mean and std.dev: (1336.15, 1171.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1248, 2680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6482)
[0000][PE] mean and std.dev: (1726.85, 1412.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 406.663 CPU sec, 22.822 real sec
[0000] Calling mem_process_seqs.., task: 1930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520119, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 455, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (743.28, 623.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 1248, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7076)
[0000][PE] mean and std.dev: (1635.72, 1243.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 404.108 CPU sec, 22.666 real sec
[0000] Calling mem_process_seqs.., task: 1931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520305, 2, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (555, 984, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (932.70, 536.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.43, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1665, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5245)
[0000][PE] mean and std.dev: (1777.06, 1096.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 409.489 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 1932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519618, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 882, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5555)
[0000][PE] mean and std.dev: (1211.04, 1118.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1573, 1741, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (221, 3601)
[0000][PE] mean and std.dev: (1863.79, 774.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 404.567 CPU sec, 22.757 real sec
[0000] Calling mem_process_seqs.., task: 1933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520016, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 566, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2817)
[0000][PE] mean and std.dev: (738.80, 548.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1396, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (1503.50, 834.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 409.685 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 1934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520186, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 702, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3107)
[0000][PE] mean and std.dev: (760.20, 707.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 120.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1779, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4874)
[0000][PE] mean and std.dev: (1837.00, 964.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 406.161 CPU sec, 22.760 real sec
[0000] Calling mem_process_seqs.., task: 1935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519768, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (595, 1114, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5749)
[0000][PE] mean and std.dev: (1246.73, 950.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1339, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (1208.85, 561.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 410.383 CPU sec, 22.971 real sec
[0000] Calling mem_process_seqs.., task: 1936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520154, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (568, 1114, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5335)
[0000][PE] mean and std.dev: (1365.52, 1173.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1440, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6034)
[0000][PE] mean and std.dev: (1932.38, 1402.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 407.613 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 1937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520260, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (663, 1223, 2697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6765)
[0000][PE] mean and std.dev: (1639.58, 1467.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1253, 1507, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4268)
[0000][PE] mean and std.dev: (1565.03, 761.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 405.138 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 1938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520315, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 838, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2609)
[0000][PE] mean and std.dev: (736.31, 489.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1175, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (1251.23, 535.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 406.816 CPU sec, 22.800 real sec
[0000] Calling mem_process_seqs.., task: 1939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519903, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (507, 805, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (1006.85, 788.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.82, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 1603, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (1597.67, 823.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 407.544 CPU sec, 22.863 real sec
[0000] Calling mem_process_seqs.., task: 1940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520418, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1052, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5420)
[0000][PE] mean and std.dev: (1239.45, 1080.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 2423, 4038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10272)
[0000][PE] mean and std.dev: (2928.40, 2643.86)
[0000][PE] low and high boundaries for proper pairs: (1, 13504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 406.292 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 1941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520076, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1115, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8516)
[0000][PE] mean and std.dev: (1673.04, 1605.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1834, 2881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6225)
[0000][PE] mean and std.dev: (2083.31, 1244.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 403.950 CPU sec, 22.645 real sec
[0000] Calling mem_process_seqs.., task: 1942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519779, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 838, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (994.44, 852.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.35, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1487, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2951)
[0000][PE] mean and std.dev: (1408.50, 450.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 408.062 CPU sec, 22.873 real sec
[0000] Calling mem_process_seqs.., task: 1943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520177, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 721, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (739.53, 573.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1036, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (1245.47, 605.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 408.017 CPU sec, 22.894 real sec
[0000] Calling mem_process_seqs.., task: 1944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520232, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 638, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (773.20, 555.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 1411, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5336)
[0000][PE] mean and std.dev: (1790.67, 1008.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 407.375 CPU sec, 22.827 real sec
[0000] Calling mem_process_seqs.., task: 1945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 519862, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1738, 3690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10192)
[0000][PE] mean and std.dev: (1974.38, 1658.17)
[0000][PE] low and high boundaries for proper pairs: (1, 13443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1554, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6152)
[0000][PE] mean and std.dev: (1492.37, 1033.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 406.835 CPU sec, 22.790 real sec
[0000] Calling mem_process_seqs.., task: 1946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520106, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (538, 1076, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6553)
[0000][PE] mean and std.dev: (1326.88, 1021.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1588, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5029)
[0000][PE] mean and std.dev: (1821.38, 1088.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 403.908 CPU sec, 22.588 real sec
[0000] Calling mem_process_seqs.., task: 1947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520175, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1144, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (1061.32, 809.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1266, 2374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5158)
[0000][PE] mean and std.dev: (1625.56, 947.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 406.339 CPU sec, 22.803 real sec
[0000] Calling mem_process_seqs.., task: 1948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520166, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (487, 834, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1018.12, 736.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.93, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1405, 2288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1549.50, 1127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 407.637 CPU sec, 22.892 real sec
[0000] Calling mem_process_seqs.., task: 1949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519903, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 1151, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (1071.12, 712.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1091, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (1288.38, 727.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 408.394 CPU sec, 22.883 real sec
[0000] Calling mem_process_seqs.., task: 1950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520250, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 898, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4237)
[0000][PE] mean and std.dev: (995.50, 759.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1504, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1581.08, 883.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 405.473 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 1951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520251, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 841, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3170)
[0000][PE] mean and std.dev: (950.36, 675.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1422, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (1328.91, 631.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 403.648 CPU sec, 22.601 real sec
[0000] Calling mem_process_seqs.., task: 1952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520113, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 1019, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (910.83, 586.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1185, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (1495.29, 1054.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 404.155 CPU sec, 22.620 real sec
[0000] Calling mem_process_seqs.., task: 1953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519924, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 1204, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6444)
[0000][PE] mean and std.dev: (1489.10, 1384.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1461, 1809, 3354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7140)
[0000][PE] mean and std.dev: (2084.52, 1167.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 407.045 CPU sec, 22.785 real sec
[0000] Calling mem_process_seqs.., task: 1954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520411, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 804, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2695)
[0000][PE] mean and std.dev: (714.12, 565.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1590, 2497, 3038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5934)
[0000][PE] mean and std.dev: (2406.29, 1339.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 405.827 CPU sec, 22.723 real sec
[0000] Calling mem_process_seqs.., task: 1955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519794, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 956, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (866.84, 628.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1075, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3839)
[0000][PE] mean and std.dev: (1342.17, 878.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 406.063 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 1956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519688, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 992, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5424)
[0000][PE] mean and std.dev: (1271.79, 998.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1547, 2935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7115)
[0000][PE] mean and std.dev: (1810.00, 1125.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 408.026 CPU sec, 22.847 real sec
[0000] Calling mem_process_seqs.., task: 1957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519706, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 758, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (764.53, 512.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.32, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1308, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (1755.50, 1060.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 407.249 CPU sec, 22.819 real sec
[0000] Calling mem_process_seqs.., task: 1958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520100, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 777, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6686)
[0000][PE] mean and std.dev: (1365.26, 1511.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1681, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5083)
[0000][PE] mean and std.dev: (1819.45, 1057.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 404.942 CPU sec, 22.655 real sec
[0000] Calling mem_process_seqs.., task: 1959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520277, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 758, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (916.15, 773.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1280, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6272)
[0000][PE] mean and std.dev: (1518.85, 1219.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 403.671 CPU sec, 22.606 real sec
[0000] Calling mem_process_seqs.., task: 1960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519901, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 636, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2448)
[0000][PE] mean and std.dev: (683.47, 462.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1310, 2433, 2805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5795)
[0000][PE] mean and std.dev: (1971.36, 1043.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 404.824 CPU sec, 22.669 real sec
[0000] Calling mem_process_seqs.., task: 1961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520089, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 839, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (1010.35, 820.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1346, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1479.79, 680.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 403.860 CPU sec, 22.618 real sec
[0000] Calling mem_process_seqs.., task: 1962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520223, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 884, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (944.00, 599.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1753, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6653)
[0000][PE] mean and std.dev: (1754.33, 1212.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 402.943 CPU sec, 22.581 real sec
[0000] Calling mem_process_seqs.., task: 1963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520104, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1328, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6374)
[0000][PE] mean and std.dev: (1749.79, 1570.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.25, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1642, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5491)
[0000][PE] mean and std.dev: (1736.31, 1160.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 407.263 CPU sec, 22.844 real sec
[0000] Calling mem_process_seqs.., task: 1964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519740, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 716, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (957.00, 832.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.48, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1373, 2661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5699)
[0000][PE] mean and std.dev: (1780.55, 1283.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 407.207 CPU sec, 22.816 real sec
[0000] Calling mem_process_seqs.., task: 1965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520319, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (507, 1340, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4821)
[0000][PE] mean and std.dev: (1277.87, 959.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1416, 3081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7367)
[0000][PE] mean and std.dev: (2179.04, 1789.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 406.633 CPU sec, 22.763 real sec
[0000] Calling mem_process_seqs.., task: 1966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520029, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 982, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (923.28, 775.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1963, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5576)
[0000][PE] mean and std.dev: (1869.35, 1104.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 405.787 CPU sec, 22.729 real sec
[0000] Calling mem_process_seqs.., task: 1967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520099, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 733, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (723.63, 577.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1712, 2886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6444)
[0000][PE] mean and std.dev: (2016.73, 1140.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 405.473 CPU sec, 22.722 real sec
[0000] Calling mem_process_seqs.., task: 1968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520493, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 828, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6772)
[0000][PE] mean and std.dev: (1805.72, 2075.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1399, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6066)
[0000][PE] mean and std.dev: (1794.00, 1277.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 404.836 CPU sec, 22.669 real sec
[0000] Calling mem_process_seqs.., task: 1969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520208, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 731, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3378)
[0000][PE] mean and std.dev: (857.84, 636.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1414, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6852)
[0000][PE] mean and std.dev: (1632.24, 963.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 405.226 CPU sec, 22.692 real sec
[0000] Calling mem_process_seqs.., task: 1970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520352, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 898, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1154.32, 1116.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1684, 2579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5363)
[0000][PE] mean and std.dev: (1822.65, 939.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 401.121 CPU sec, 22.449 real sec
[0000] Calling mem_process_seqs.., task: 1971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520063, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 769, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (973.53, 709.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.56, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 2111, 3115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7453)
[0000][PE] mean and std.dev: (2152.00, 1479.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 405.322 CPU sec, 22.754 real sec
[0000] Calling mem_process_seqs.., task: 1972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519858, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (470, 1005, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5456)
[0000][PE] mean and std.dev: (1065.91, 746.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 1114, 2955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7637)
[0000][PE] mean and std.dev: (1598.62, 1383.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 412.568 CPU sec, 23.155 real sec
[0000] Calling mem_process_seqs.., task: 1973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520076, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1104, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1267.00, 1068.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1616, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5010)
[0000][PE] mean and std.dev: (1823.18, 1036.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 409.082 CPU sec, 22.899 real sec
[0000] Calling mem_process_seqs.., task: 1974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520037, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 692, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (979.04, 839.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1460, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1628.55, 900.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 407.582 CPU sec, 22.826 real sec
[0000] Calling mem_process_seqs.., task: 1975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520150, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 1093, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (921.71, 626.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1649, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1276.75, 555.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 404.445 CPU sec, 22.650 real sec
[0000] Calling mem_process_seqs.., task: 1976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519767, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (635, 1090, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (1197.11, 734.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1269, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (1232.78, 395.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 405.462 CPU sec, 22.710 real sec
[0000] Calling mem_process_seqs.., task: 1977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520399, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (931, 1436, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1498.05, 940.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 902)
[0000][PE] mean and std.dev: (511.74, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1603, 3219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7349)
[0000][PE] mean and std.dev: (1932.00, 1108.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 405.899 CPU sec, 22.731 real sec
[0000] Calling mem_process_seqs.., task: 1978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520101, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (696, 998, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4746)
[0000][PE] mean and std.dev: (1234.81, 931.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1419, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6458)
[0000][PE] mean and std.dev: (1608.92, 1501.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 406.471 CPU sec, 22.791 real sec
[0000] Calling mem_process_seqs.., task: 1979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520693, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 915, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (1114.38, 879.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.38, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1794, 2732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5894)
[0000][PE] mean and std.dev: (1698.16, 806.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 403.647 CPU sec, 22.603 real sec
[0000] Calling mem_process_seqs.., task: 1980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520261, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 921, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4025)
[0000][PE] mean and std.dev: (1112.96, 850.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1789, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (1621.44, 769.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 413.501 CPU sec, 23.242 real sec
[0000] Calling mem_process_seqs.., task: 1981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520304, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 571, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5304)
[0000][PE] mean and std.dev: (1368.23, 1386.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.93, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1220, 1516, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1535.22, 887.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 405.802 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 1982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520100, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 666, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (778.80, 579.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1531, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (1517.83, 735.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 406.998 CPU sec, 22.807 real sec
[0000] Calling mem_process_seqs.., task: 1983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519889, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (554, 1379, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5375)
[0000][PE] mean and std.dev: (1426.03, 991.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1521, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5615)
[0000][PE] mean and std.dev: (1857.82, 1276.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 405.363 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 1984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519780, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 708, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (858.52, 673.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1602, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1576.77, 702.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 408.029 CPU sec, 22.902 real sec
[0000] Calling mem_process_seqs.., task: 1985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520349, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 855, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6369)
[0000][PE] mean and std.dev: (1408.43, 1342.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.65, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1577, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (1524.16, 501.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 407.801 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 1986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520390, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 791, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (817.12, 661.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1569, 3163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7057)
[0000][PE] mean and std.dev: (2269.00, 1623.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 406.706 CPU sec, 22.800 real sec
[0000] Calling mem_process_seqs.., task: 1987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520067, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 939, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (1009.00, 774.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1484, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5639)
[0000][PE] mean and std.dev: (1576.26, 1011.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 409.519 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 1988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519926, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 754, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (800.65, 622.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.84, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1736, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5566)
[0000][PE] mean and std.dev: (1710.88, 1211.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 412.411 CPU sec, 23.067 real sec
[0000] Calling mem_process_seqs.., task: 1989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519887, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 742, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5269)
[0000][PE] mean and std.dev: (1153.24, 1066.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.37, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1047, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2518)
[0000][PE] mean and std.dev: (1046.18, 506.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 408.672 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 1990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520181, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 882, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1039.59, 985.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.60, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1575, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (1478.29, 792.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 408.301 CPU sec, 22.873 real sec
[0000] Calling mem_process_seqs.., task: 1991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520051, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 843, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (1036.09, 773.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1589, 2547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5369)
[0000][PE] mean and std.dev: (1679.37, 789.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 409.649 CPU sec, 22.974 real sec
[0000] Calling mem_process_seqs.., task: 1992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519606, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 500, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5730)
[0000][PE] mean and std.dev: (1029.27, 1211.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 1461, 3816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8874)
[0000][PE] mean and std.dev: (2449.11, 1861.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 412.119 CPU sec, 23.084 real sec
[0000] Calling mem_process_seqs.., task: 1993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519689, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 541, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (866.70, 716.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1214, 3329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8471)
[0000][PE] mean and std.dev: (2015.35, 1788.13)
[0000][PE] low and high boundaries for proper pairs: (1, 11042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 408.655 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 1994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520255, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 988, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (920.46, 656.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1345, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (1659.65, 1314.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 404.444 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 1995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519888, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 672, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5594)
[0000][PE] mean and std.dev: (985.69, 859.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.79, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1225, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (1347.92, 776.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 409.299 CPU sec, 22.925 real sec
[0000] Calling mem_process_seqs.., task: 1996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520074, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 864, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5096)
[0000][PE] mean and std.dev: (1026.35, 1097.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1266, 3116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7648)
[0000][PE] mean and std.dev: (1680.91, 1239.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 407.368 CPU sec, 22.866 real sec
[0000] Calling mem_process_seqs.., task: 1997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520323, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (619, 1227, 3323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8731)
[0000][PE] mean and std.dev: (2067.78, 1898.35)
[0000][PE] low and high boundaries for proper pairs: (1, 11435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1615, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6639)
[0000][PE] mean and std.dev: (1690.20, 1063.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 406.205 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 1998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520365, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 742, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1136.89, 986.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.58, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1701, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (1741.59, 1049.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 409.770 CPU sec, 22.978 real sec
[0000] Calling mem_process_seqs.., task: 1999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519783, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 891, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1158.04, 931.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1484, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4957)
[0000][PE] mean and std.dev: (1359.23, 741.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 407.110 CPU sec, 22.838 real sec
[0000] Calling mem_process_seqs.., task: 2000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205254
	[0000][ M::kt_pipeline] read 1205254 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519855, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (671, 930, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (952.68, 602.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.31, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1329, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5449)
[0000][PE] mean and std.dev: (1440.87, 875.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 407.469 CPU sec, 22.801 real sec
[0000] Calling mem_process_seqs.., task: 2001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519874, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1076, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (1252.42, 1059.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.97, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1570, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4517)
[0000][PE] mean and std.dev: (1715.00, 852.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205254 reads in 404.244 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 2002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519746, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1192, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6629)
[0000][PE] mean and std.dev: (1456.70, 1514.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1827, 3318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7498)
[0000][PE] mean and std.dev: (2396.44, 1744.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 408.859 CPU sec, 22.895 real sec
[0000] Calling mem_process_seqs.., task: 2003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519796, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 657, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6737)
[0000][PE] mean and std.dev: (1457.16, 1553.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1161, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1487.41, 1073.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 407.879 CPU sec, 22.842 real sec
[0000] Calling mem_process_seqs.., task: 2004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519961, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 1116, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5296)
[0000][PE] mean and std.dev: (1370.87, 1343.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1481, 2832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6514)
[0000][PE] mean and std.dev: (1736.00, 1223.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 406.573 CPU sec, 22.775 real sec
[0000] Calling mem_process_seqs.., task: 2005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520033, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 413, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (647.70, 663.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1233, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (1255.61, 534.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 412.173 CPU sec, 23.103 real sec
[0000] Calling mem_process_seqs.., task: 2006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520047, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (773, 1343, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6197)
[0000][PE] mean and std.dev: (1620.29, 1213.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.26, 120.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (684, 900, 3500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9132)
[0000][PE] mean and std.dev: (1689.69, 1780.79)
[0000][PE] low and high boundaries for proper pairs: (1, 11948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 406.849 CPU sec, 22.801 real sec
[0000] Calling mem_process_seqs.., task: 2007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519892, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 1225, 3261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8937)
[0000][PE] mean and std.dev: (1900.52, 1765.21)
[0000][PE] low and high boundaries for proper pairs: (1, 11775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1298, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (1339.31, 624.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 413.994 CPU sec, 23.181 real sec
[0000] Calling mem_process_seqs.., task: 2008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519963, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 1187, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5447)
[0000][PE] mean and std.dev: (1307.47, 1113.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 408.044 CPU sec, 22.906 real sec
[0000] Calling mem_process_seqs.., task: 2009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519853, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (508, 803, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (947.65, 634.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 1038, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5521)
[0000][PE] mean and std.dev: (1402.95, 1107.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 408.328 CPU sec, 22.847 real sec
[0000] Calling mem_process_seqs.., task: 2010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519870, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 1032, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (994.54, 765.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1671, 3538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8190)
[0000][PE] mean and std.dev: (2370.96, 1914.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 410.899 CPU sec, 23.027 real sec
[0000] Calling mem_process_seqs.., task: 2011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205266
	[0000][ M::kt_pipeline] read 1205266 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 520121, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1039, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6273)
[0000][PE] mean and std.dev: (1457.51, 1347.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.75, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1675, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5905)
[0000][PE] mean and std.dev: (1790.53, 1190.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 408.305 CPU sec, 22.893 real sec
[0000] Calling mem_process_seqs.., task: 2012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519846, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (604, 1034, 2879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7429)
[0000][PE] mean and std.dev: (1600.67, 1585.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1439, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (142, 2712)
[0000][PE] mean and std.dev: (1422.71, 462.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205266 reads in 408.985 CPU sec, 22.915 real sec
[0000] Calling mem_process_seqs.., task: 2013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519352, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 817, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5223)
[0000][PE] mean and std.dev: (1127.95, 960.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1460, 6143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16493)
[0000][PE] mean and std.dev: (3006.93, 2881.53)
[0000][PE] low and high boundaries for proper pairs: (1, 21668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 413.438 CPU sec, 23.204 real sec
[0000] Calling mem_process_seqs.., task: 2014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519820, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 966, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3068)
[0000][PE] mean and std.dev: (833.53, 626.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1024, 3075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7479)
[0000][PE] mean and std.dev: (1717.37, 1222.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 406.384 CPU sec, 22.741 real sec
[0000] Calling mem_process_seqs.., task: 2015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520240, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (708, 1254, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3234)
[0000][PE] mean and std.dev: (1063.41, 646.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1382, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (1266.83, 662.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 407.848 CPU sec, 22.836 real sec
[0000] Calling mem_process_seqs.., task: 2016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520011, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 581, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4982)
[0000][PE] mean and std.dev: (1083.67, 1089.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1508, 2500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5590)
[0000][PE] mean and std.dev: (1746.52, 1128.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 409.478 CPU sec, 22.889 real sec
[0000] Calling mem_process_seqs.., task: 2017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520295, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1353, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7256)
[0000][PE] mean and std.dev: (1565.89, 1543.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.42, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1310, 1721, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4187)
[0000][PE] mean and std.dev: (1790.71, 856.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 408.799 CPU sec, 22.887 real sec
[0000] Calling mem_process_seqs.., task: 2018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519887, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 985, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (1129.05, 1092.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.87, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1327, 2324, 3653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8305)
[0000][PE] mean and std.dev: (2521.05, 1737.81)
[0000][PE] low and high boundaries for proper pairs: (1, 10631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 407.895 CPU sec, 22.843 real sec
[0000] Calling mem_process_seqs.., task: 2019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520633, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (574, 864, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4906)
[0000][PE] mean and std.dev: (1171.88, 897.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1556, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1665.86, 930.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 404.758 CPU sec, 22.690 real sec
[0000] Calling mem_process_seqs.., task: 2020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520006, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (610, 1050, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5545)
[0000][PE] mean and std.dev: (1346.79, 1128.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.87, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1261, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1536.00, 720.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 410.823 CPU sec, 23.029 real sec
[0000] Calling mem_process_seqs.., task: 2021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519787, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (543, 1244, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5829)
[0000][PE] mean and std.dev: (1471.67, 1153.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.67, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1537, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6188)
[0000][PE] mean and std.dev: (2057.70, 1539.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 404.461 CPU sec, 22.636 real sec
[0000] Calling mem_process_seqs.., task: 2022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205334
	[0000][ M::kt_pipeline] read 1205334 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 520014, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 868, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (822.87, 531.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.58, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1447, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4701)
[0000][PE] mean and std.dev: (1439.74, 1168.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 407.506 CPU sec, 22.857 real sec
[0000] Calling mem_process_seqs.., task: 2023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520201, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 992, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (1158.20, 857.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1251, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (1272.87, 741.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205334 reads in 405.815 CPU sec, 22.762 real sec
[0000] Calling mem_process_seqs.., task: 2024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520095, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 778, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (894.43, 684.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 2010, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1763.05, 885.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 404.467 CPU sec, 22.649 real sec
[0000] Calling mem_process_seqs.., task: 2025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205290
	[0000][ M::kt_pipeline] read 1205290 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520035, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 814, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5531)
[0000][PE] mean and std.dev: (1109.47, 905.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 1310, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (1172.80, 856.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 404.530 CPU sec, 22.644 real sec
[0000] Calling mem_process_seqs.., task: 2026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519943, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 836, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4440)
[0000][PE] mean and std.dev: (1054.06, 890.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1334, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (1403.47, 812.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205290 reads in 408.630 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 2027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520184, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 789, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (1135.69, 1010.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1483, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1728.07, 1184.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 407.019 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 2028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520090, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 1274, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5234)
[0000][PE] mean and std.dev: (1187.32, 918.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1376, 2704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6654)
[0000][PE] mean and std.dev: (1821.19, 1516.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 406.933 CPU sec, 22.766 real sec
[0000] Calling mem_process_seqs.., task: 2029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520044, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 1199, 2540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6720)
[0000][PE] mean and std.dev: (1562.08, 1280.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1567, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (1347.50, 588.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 404.212 CPU sec, 22.634 real sec
[0000] Calling mem_process_seqs.., task: 2030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520161, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (804, 1265, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5253)
[0000][PE] mean and std.dev: (1530.64, 1159.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.96, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 887, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1108.95, 754.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 406.966 CPU sec, 22.812 real sec
[0000] Calling mem_process_seqs.., task: 2031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520154, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 1322, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7620)
[0000][PE] mean and std.dev: (1340.00, 1118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.64, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1318, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1383.00, 993.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 406.713 CPU sec, 22.781 real sec
[0000] Calling mem_process_seqs.., task: 2032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519720, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 929, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (1013.67, 779.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.81, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1440, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1600.04, 813.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 407.032 CPU sec, 22.823 real sec
[0000] Calling mem_process_seqs.., task: 2033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519757, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 1010, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (920.00, 717.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.04, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1551, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (1558.82, 945.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 407.652 CPU sec, 22.827 real sec
[0000] Calling mem_process_seqs.., task: 2034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519972, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 754, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3191)
[0000][PE] mean and std.dev: (801.55, 489.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 896)
[0000][PE] mean and std.dev: (511.17, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1612, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1513.35, 722.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 405.906 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 2035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519806, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 1046, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4321)
[0000][PE] mean and std.dev: (1138.93, 972.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.29, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1720, 3310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7702)
[0000][PE] mean and std.dev: (2050.79, 1357.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 408.060 CPU sec, 22.862 real sec
[0000] Calling mem_process_seqs.., task: 2036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520222, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1243, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6435)
[0000][PE] mean and std.dev: (1372.64, 1231.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1289, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5679)
[0000][PE] mean and std.dev: (1771.59, 1373.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 402.895 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 2037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520280, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 736, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4038)
[0000][PE] mean and std.dev: (985.65, 820.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 1257, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (1031.17, 515.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 403.145 CPU sec, 22.634 real sec
[0000] Calling mem_process_seqs.., task: 2038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520064, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 521, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4355)
[0000][PE] mean and std.dev: (988.53, 974.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1445, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1396.07, 887.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 404.157 CPU sec, 22.637 real sec
[0000] Calling mem_process_seqs.., task: 2039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520467, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 705, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4082)
[0000][PE] mean and std.dev: (1040.92, 953.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1984, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (1965.70, 1012.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 405.422 CPU sec, 22.726 real sec
[0000] Calling mem_process_seqs.., task: 2040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 519692, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 844, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1121.75, 896.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.24, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1479, 3084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7030)
[0000][PE] mean and std.dev: (1664.00, 848.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 407.204 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 2041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519621, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 871, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3859)
[0000][PE] mean and std.dev: (940.88, 724.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1834, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4894)
[0000][PE] mean and std.dev: (1680.75, 639.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 407.404 CPU sec, 22.811 real sec
[0000] Calling mem_process_seqs.., task: 2042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520122, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (489, 1174, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (1067.47, 748.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1308, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (1388.78, 531.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 405.272 CPU sec, 22.720 real sec
[0000] Calling mem_process_seqs.., task: 2043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519826, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (665, 1047, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5669)
[0000][PE] mean and std.dev: (1270.50, 926.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.84, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1603, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6914)
[0000][PE] mean and std.dev: (2097.38, 1456.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 406.198 CPU sec, 22.754 real sec
[0000] Calling mem_process_seqs.., task: 2044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520497, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (667, 1172, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4861)
[0000][PE] mean and std.dev: (1387.50, 939.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1309, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2951)
[0000][PE] mean and std.dev: (1440.00, 549.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 403.563 CPU sec, 22.616 real sec
[0000] Calling mem_process_seqs.., task: 2045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519677, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 1107, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (1123.35, 885.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1380, 1602, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (548, 2628)
[0000][PE] mean and std.dev: (1528.94, 430.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 408.291 CPU sec, 22.883 real sec
[0000] Calling mem_process_seqs.., task: 2046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519714, 8, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 984, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1177.41, 998.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1476, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5270)
[0000][PE] mean and std.dev: (1477.03, 832.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 403.560 CPU sec, 22.621 real sec
[0000] Calling mem_process_seqs.., task: 2047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519549, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 708, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (934.62, 910.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.41, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1101, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (1307.88, 820.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 408.245 CPU sec, 22.884 real sec
[0000] Calling mem_process_seqs.., task: 2048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520403, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 711, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1108.24, 962.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1445, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4871)
[0000][PE] mean and std.dev: (1587.11, 794.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 403.487 CPU sec, 22.590 real sec
[0000] Calling mem_process_seqs.., task: 2049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520034, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 1150, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6199)
[0000][PE] mean and std.dev: (1585.65, 1471.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.92, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1085, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3836)
[0000][PE] mean and std.dev: (1242.61, 599.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 405.487 CPU sec, 22.676 real sec
[0000] Calling mem_process_seqs.., task: 2050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520762, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (523, 1380, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5383)
[0000][PE] mean and std.dev: (1318.30, 1087.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.33, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1341, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (1394.93, 630.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 403.095 CPU sec, 22.592 real sec
[0000] Calling mem_process_seqs.., task: 2051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520344, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 833, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (1048.62, 1132.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1274, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6278)
[0000][PE] mean and std.dev: (1794.68, 1540.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 403.322 CPU sec, 22.567 real sec
[0000] Calling mem_process_seqs.., task: 2052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519898, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1047, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5820)
[0000][PE] mean and std.dev: (1516.74, 1398.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.24, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1462, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (1602.44, 661.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 405.493 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 2053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519792, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (742, 1480, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6496)
[0000][PE] mean and std.dev: (1480.36, 1124.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.59, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1855, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6062)
[0000][PE] mean and std.dev: (1723.15, 943.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 406.304 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 2054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520259, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 1147, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6642)
[0000][PE] mean and std.dev: (1429.72, 1094.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1128, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (1545.76, 1012.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 404.038 CPU sec, 22.599 real sec
[0000] Calling mem_process_seqs.., task: 2055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520258, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 964, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6276)
[0000][PE] mean and std.dev: (1362.67, 1373.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.22, 120.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1512, 2674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5600)
[0000][PE] mean and std.dev: (1729.00, 954.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 409.454 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 2056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520406, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (699, 848, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5364)
[0000][PE] mean and std.dev: (1201.60, 997.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1635, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1697.91, 832.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 405.342 CPU sec, 22.674 real sec
[0000] Calling mem_process_seqs.., task: 2057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520202, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (663, 1094, 2364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5766)
[0000][PE] mean and std.dev: (1464.29, 1218.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 1140, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5154)
[0000][PE] mean and std.dev: (1238.44, 846.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 402.241 CPU sec, 22.544 real sec
[0000] Calling mem_process_seqs.., task: 2058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519785, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (678, 936, 3179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8181)
[0000][PE] mean and std.dev: (1920.60, 1879.98)
[0000][PE] low and high boundaries for proper pairs: (1, 10682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1654, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4685)
[0000][PE] mean and std.dev: (1652.95, 840.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 404.274 CPU sec, 22.651 real sec
[0000] Calling mem_process_seqs.., task: 2059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519807, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 639, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (819.89, 584.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1459, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1478.95, 663.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 407.672 CPU sec, 22.784 real sec
[0000] Calling mem_process_seqs.., task: 2060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520211, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (734, 1297, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (1190.46, 766.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (580, 1240, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5557)
[0000][PE] mean and std.dev: (1534.43, 1294.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 404.445 CPU sec, 22.637 real sec
[0000] Calling mem_process_seqs.., task: 2061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520323, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 1284, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (1005.87, 711.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1532, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (1634.94, 615.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 401.428 CPU sec, 22.441 real sec
[0000] Calling mem_process_seqs.., task: 2062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519637, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 969, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4483)
[0000][PE] mean and std.dev: (1081.43, 953.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1708, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (1717.14, 913.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 406.531 CPU sec, 22.750 real sec
[0000] Calling mem_process_seqs.., task: 2063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519471, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 747, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2497)
[0000][PE] mean and std.dev: (688.96, 525.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1405, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5623)
[0000][PE] mean and std.dev: (1475.73, 946.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 408.002 CPU sec, 22.881 real sec
[0000] Calling mem_process_seqs.., task: 2064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519897, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 968, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (958.88, 720.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.37, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1614, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6408)
[0000][PE] mean and std.dev: (1658.70, 961.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 406.888 CPU sec, 22.807 real sec
[0000] Calling mem_process_seqs.., task: 2065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519872, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 1032, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1183.93, 924.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1656, 2846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6226)
[0000][PE] mean and std.dev: (1694.60, 742.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 407.976 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 2066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519948, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 423, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (905.32, 859.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1634, 3100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7040)
[0000][PE] mean and std.dev: (1655.71, 894.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 405.304 CPU sec, 22.702 real sec
[0000] Calling mem_process_seqs.., task: 2067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205284
	[0000][ M::kt_pipeline] read 1205284 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519969, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 854, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (895.60, 650.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1214, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5418)
[0000][PE] mean and std.dev: (1387.65, 800.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 409.550 CPU sec, 22.967 real sec
[0000] Calling mem_process_seqs.., task: 2068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519785, 0, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 716, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (896.53, 776.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1264, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (1109.18, 504.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205284 reads in 406.806 CPU sec, 22.846 real sec
[0000] Calling mem_process_seqs.., task: 2069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520000, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 880, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (922.92, 587.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1128, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4848)
[0000][PE] mean and std.dev: (1373.83, 892.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 409.221 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 2070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520391, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1092, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5380)
[0000][PE] mean and std.dev: (1297.74, 1083.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1180, 2742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6240)
[0000][PE] mean and std.dev: (1625.28, 1032.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 408.060 CPU sec, 22.868 real sec
[0000] Calling mem_process_seqs.., task: 2071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205246
	[0000][ M::kt_pipeline] read 1205246 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519224, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 748, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (1201.38, 1118.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1096, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6201)
[0000][PE] mean and std.dev: (1574.28, 1181.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 407.863 CPU sec, 22.887 real sec
[0000] Calling mem_process_seqs.., task: 2072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519979, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 590, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (1019.11, 925.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1354, 2635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5867)
[0000][PE] mean and std.dev: (1737.38, 1109.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205246 reads in 410.244 CPU sec, 22.998 real sec
[0000] Calling mem_process_seqs.., task: 2073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520251, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 1171, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5246)
[0000][PE] mean and std.dev: (1387.11, 1215.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1107, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2598)
[0000][PE] mean and std.dev: (1169.88, 494.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 408.666 CPU sec, 22.874 real sec
[0000] Calling mem_process_seqs.., task: 2074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520302, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 870, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (998.92, 719.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1528, 1771, 3177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6475)
[0000][PE] mean and std.dev: (2070.87, 953.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 405.669 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 2075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520145, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 836, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5845)
[0000][PE] mean and std.dev: (1391.71, 1448.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 2558, 4667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11593)
[0000][PE] mean and std.dev: (3247.61, 2547.24)
[0000][PE] low and high boundaries for proper pairs: (1, 15056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 406.485 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 2076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520302, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 896, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3237)
[0000][PE] mean and std.dev: (935.94, 761.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1641, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6070)
[0000][PE] mean and std.dev: (1873.43, 1273.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 407.276 CPU sec, 22.830 real sec
[0000] Calling mem_process_seqs.., task: 2077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520043, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 624, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (854.04, 855.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.55, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1024, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (1094.53, 741.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 405.874 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 2078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520140, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 933, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (917.61, 721.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1343, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4749)
[0000][PE] mean and std.dev: (1539.25, 774.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 409.323 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 2079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520463, 12, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 649, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (818.40, 751.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (343, 1913, 3516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9862)
[0000][PE] mean and std.dev: (1934.08, 1766.26)
[0000][PE] low and high boundaries for proper pairs: (1, 13035)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1656, 3223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7267)
[0000][PE] mean and std.dev: (2272.81, 1803.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 406.167 CPU sec, 22.743 real sec
[0000] Calling mem_process_seqs.., task: 2080
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520395, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 892, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (805.05, 535.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1697, 3186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7910)
[0000][PE] mean and std.dev: (1876.17, 1579.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 403.079 CPU sec, 22.737 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000248 bp)...
[0000] Calling mem_process_seqs.., task: 2081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519701, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 654, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (732.27, 453.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1349, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5285)
[0000][PE] mean and std.dev: (1569.38, 1085.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 407.954 CPU sec, 22.919 real sec
[0000] Calling mem_process_seqs.., task: 2082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519924, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 1081, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6299)
[0000][PE] mean and std.dev: (1349.32, 1210.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.27, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1483, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (1428.32, 733.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 404.877 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 2083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205332
	[0000][ M::kt_pipeline] read 1205332 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520145, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (626, 874, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3599)
[0000][PE] mean and std.dev: (1121.84, 837.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.22, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1388, 1879, 3183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6773)
[0000][PE] mean and std.dev: (2137.65, 1180.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 410.028 CPU sec, 23.053 real sec
[0000] Calling mem_process_seqs.., task: 2084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519484, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 623, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (880.68, 852.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1167, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (1382.29, 776.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205332 reads in 413.879 CPU sec, 23.177 real sec
[0000] Calling mem_process_seqs.., task: 2085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520168, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 797, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4673)
[0000][PE] mean and std.dev: (1110.88, 1168.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1439, 2026, 3967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9023)
[0000][PE] mean and std.dev: (2595.15, 1968.05)
[0000][PE] low and high boundaries for proper pairs: (1, 11551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 408.378 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 2086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519700, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 781, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (940.35, 792.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1307, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5072)
[0000][PE] mean and std.dev: (1428.07, 909.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 408.881 CPU sec, 22.956 real sec
[0000] Calling mem_process_seqs.., task: 2087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205296
	[0000][ M::kt_pipeline] read 1205296 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520384, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 1290, 2857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7847)
[0000][PE] mean and std.dev: (1640.08, 1546.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1153, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5420)
[0000][PE] mean and std.dev: (1601.00, 935.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 408.157 CPU sec, 22.847 real sec
[0000] Calling mem_process_seqs.., task: 2088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520160, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 810, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4835)
[0000][PE] mean and std.dev: (1091.95, 963.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.99, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1351, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4833)
[0000][PE] mean and std.dev: (1334.93, 793.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205296 reads in 410.254 CPU sec, 23.010 real sec
[0000] Calling mem_process_seqs.., task: 2089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520072, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 802, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4634)
[0000][PE] mean and std.dev: (1105.44, 1055.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.72, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1283, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1262.45, 668.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 409.259 CPU sec, 22.915 real sec
[0000] Calling mem_process_seqs.., task: 2090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520150, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 1018, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (1133.75, 870.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1382, 1660, 3679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8273)
[0000][PE] mean and std.dev: (2564.00, 1927.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 411.635 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 2091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205268
	[0000][ M::kt_pipeline] read 1205268 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520025, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 695, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5089)
[0000][PE] mean and std.dev: (1233.71, 1289.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1267, 2620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6238)
[0000][PE] mean and std.dev: (1611.71, 1021.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 413.014 CPU sec, 23.106 real sec
[0000] Calling mem_process_seqs.., task: 2092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519721, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (609, 1377, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6000)
[0000][PE] mean and std.dev: (1407.50, 1059.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.71, 120.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1212, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4998)
[0000][PE] mean and std.dev: (1046.00, 663.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205268 reads in 411.286 CPU sec, 23.023 real sec
[0000] Calling mem_process_seqs.., task: 2093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205200
	[0000][ M::kt_pipeline] read 1205200 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519818, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 1126, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5484)
[0000][PE] mean and std.dev: (1380.83, 1215.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1365, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (1302.44, 545.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 416.311 CPU sec, 23.333 real sec
[0000] Calling mem_process_seqs.., task: 2094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205250
	[0000][ M::kt_pipeline] read 1205250 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520237, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1219, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5479)
[0000][PE] mean and std.dev: (1267.71, 1086.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1233, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (1363.00, 586.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205200 reads in 409.484 CPU sec, 22.946 real sec
[0000] Calling mem_process_seqs.., task: 2095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519564, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 474, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2797)
[0000][PE] mean and std.dev: (735.90, 562.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1836, 2875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6371)
[0000][PE] mean and std.dev: (2006.39, 1172.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205250 reads in 419.537 CPU sec, 23.539 real sec
[0000] Calling mem_process_seqs.., task: 2096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520472, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 982, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5269)
[0000][PE] mean and std.dev: (1422.00, 1392.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1096, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6297)
[0000][PE] mean and std.dev: (1330.22, 1011.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 405.049 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 2097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205208
	[0000][ M::kt_pipeline] read 1205208 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520085, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1007, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5569)
[0000][PE] mean and std.dev: (1223.72, 1008.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1435, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (1250.85, 622.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 407.717 CPU sec, 22.881 real sec
[0000] Calling mem_process_seqs.., task: 2098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519779, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 1235, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6251)
[0000][PE] mean and std.dev: (1579.85, 1590.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1200, 1392, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5901)
[0000][PE] mean and std.dev: (1968.47, 1273.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205208 reads in 416.247 CPU sec, 23.338 real sec
[0000] Calling mem_process_seqs.., task: 2099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205288
	[0000][ M::kt_pipeline] read 1205288 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520052, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1318, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6508)
[0000][PE] mean and std.dev: (1335.62, 1005.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1719, 3405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8193)
[0000][PE] mean and std.dev: (2222.19, 1738.88)
[0000][PE] low and high boundaries for proper pairs: (1, 10587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 408.540 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 2100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520145, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 947, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4220)
[0000][PE] mean and std.dev: (957.16, 650.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.53, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1440, 2428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5356)
[0000][PE] mean and std.dev: (1624.00, 1085.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205288 reads in 409.920 CPU sec, 22.926 real sec
[0000] Calling mem_process_seqs.., task: 2101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205192
	[0000][ M::kt_pipeline] read 1205192 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520115, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (681, 1110, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (1206.91, 789.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.76, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1319, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (1248.56, 674.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 407.613 CPU sec, 22.867 real sec
[0000] Calling mem_process_seqs.., task: 2102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519923, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (783, 1123, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5457)
[0000][PE] mean and std.dev: (1476.25, 1261.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1400, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5311)
[0000][PE] mean and std.dev: (1497.50, 878.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205192 reads in 407.589 CPU sec, 22.855 real sec
[0000] Calling mem_process_seqs.., task: 2103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519826, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 950, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (1117.56, 934.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1302, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (1322.38, 438.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 409.567 CPU sec, 22.972 real sec
[0000] Calling mem_process_seqs.., task: 2104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520132, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 1301, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7360)
[0000][PE] mean and std.dev: (1576.40, 1346.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1681, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3329)
[0000][PE] mean and std.dev: (1536.00, 754.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 408.498 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 2105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519930, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 638, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (677.94, 484.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.05, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1407, 4240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10790)
[0000][PE] mean and std.dev: (2502.96, 2046.48)
[0000][PE] low and high boundaries for proper pairs: (1, 14065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 413.524 CPU sec, 23.146 real sec
[0000] Calling mem_process_seqs.., task: 2106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520108, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 894, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5139)
[0000][PE] mean and std.dev: (1081.67, 887.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.53, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 406.177 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 2107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520033, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 818, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (1029.88, 833.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1700, 2727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5817)
[0000][PE] mean and std.dev: (1809.29, 1001.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 407.426 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 2108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520394, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 868, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (1290.16, 1122.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1664, 2727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6189)
[0000][PE] mean and std.dev: (1849.11, 1207.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 405.231 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 2109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519948, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 867, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (993.27, 858.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1499, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5756)
[0000][PE] mean and std.dev: (1402.76, 963.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 412.323 CPU sec, 23.157 real sec
[0000] Calling mem_process_seqs.., task: 2110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520227, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 675, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (817.50, 767.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1419, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (1343.00, 643.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 408.783 CPU sec, 22.890 real sec
[0000] Calling mem_process_seqs.., task: 2111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 519671, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1216, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5099)
[0000][PE] mean and std.dev: (1332.41, 1106.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.18, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1366, 2697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5917)
[0000][PE] mean and std.dev: (1688.45, 1102.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 411.548 CPU sec, 23.047 real sec
[0000] Calling mem_process_seqs.., task: 2112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519811, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 689, 3464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9656)
[0000][PE] mean and std.dev: (1625.74, 1792.38)
[0000][PE] low and high boundaries for proper pairs: (1, 12752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1606, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6343)
[0000][PE] mean and std.dev: (1720.08, 1267.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 419.235 CPU sec, 23.508 real sec
[0000] Calling mem_process_seqs.., task: 2113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519541, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (517, 919, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6337)
[0000][PE] mean and std.dev: (1219.96, 1089.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1231, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5516)
[0000][PE] mean and std.dev: (1573.43, 1179.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 408.616 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 2114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 520000, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 634, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2290)
[0000][PE] mean and std.dev: (558.09, 431.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.51, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1503, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (1476.84, 696.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 407.614 CPU sec, 22.827 real sec
[0000] Calling mem_process_seqs.., task: 2115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520180, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 449, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4841)
[0000][PE] mean and std.dev: (781.06, 737.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1504, 3055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7309)
[0000][PE] mean and std.dev: (1947.44, 1193.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 408.001 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 2116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519755, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 1802, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6753)
[0000][PE] mean and std.dev: (1316.22, 1021.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.47, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1109, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (1065.64, 498.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 411.564 CPU sec, 23.067 real sec
[0000] Calling mem_process_seqs.., task: 2117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520631, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 606, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2097)
[0000][PE] mean and std.dev: (714.21, 531.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (511.25, 120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1582, 2206, 2823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5305)
[0000][PE] mean and std.dev: (2159.76, 1123.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 409.901 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 2118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520180, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 847, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1008.56, 784.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.33, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1377, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4922)
[0000][PE] mean and std.dev: (1837.48, 1001.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 406.152 CPU sec, 22.770 real sec
[0000] Calling mem_process_seqs.., task: 2119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205272
	[0000][ M::kt_pipeline] read 1205272 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519435, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 1211, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (1201.22, 924.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1554, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5331)
[0000][PE] mean and std.dev: (1875.95, 1111.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 403.209 CPU sec, 22.575 real sec
[0000] Calling mem_process_seqs.., task: 2120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519526, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 698, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (917.38, 704.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.45, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1403, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1394.85, 767.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205272 reads in 410.925 CPU sec, 23.017 real sec
[0000] Calling mem_process_seqs.., task: 2121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519957, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1234, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1186.75, 941.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1314, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (1465.00, 644.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 411.212 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 2122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519636, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 1381, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5544)
[0000][PE] mean and std.dev: (1312.89, 1046.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.89, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1438, 2865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7095)
[0000][PE] mean and std.dev: (2034.71, 1860.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 411.977 CPU sec, 23.087 real sec
[0000] Calling mem_process_seqs.., task: 2123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205218
	[0000][ M::kt_pipeline] read 1205218 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519929, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 699, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5726)
[0000][PE] mean and std.dev: (1079.05, 1077.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.31, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1213, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (1131.09, 615.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 408.782 CPU sec, 22.902 real sec
[0000] Calling mem_process_seqs.., task: 2124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 520402, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 968, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1235.03, 992.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.50, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1400, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (1508.69, 813.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205218 reads in 407.245 CPU sec, 22.826 real sec
[0000] Calling mem_process_seqs.., task: 2125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205002
	[0000][ M::kt_pipeline] read 1205002 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519951, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 1017, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (1045.38, 939.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1394, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5213)
[0000][PE] mean and std.dev: (1674.21, 1162.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 405.552 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 2126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519874, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 975, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (1250.11, 990.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1454, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5571)
[0000][PE] mean and std.dev: (1926.44, 1331.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205002 reads in 407.006 CPU sec, 22.793 real sec
[0000] Calling mem_process_seqs.., task: 2127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520323, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 510, 2619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7231)
[0000][PE] mean and std.dev: (1034.08, 1150.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1202, 2521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5599)
[0000][PE] mean and std.dev: (1737.33, 1138.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 406.031 CPU sec, 22.729 real sec
[0000] Calling mem_process_seqs.., task: 2128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519616, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1481, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5323)
[0000][PE] mean and std.dev: (1233.83, 879.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.39, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1023, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1233.80, 723.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 409.350 CPU sec, 22.932 real sec
[0000] Calling mem_process_seqs.., task: 2129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 520387, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 792, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6216)
[0000][PE] mean and std.dev: (1272.64, 1318.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1274, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1461.07, 1003.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 405.671 CPU sec, 22.731 real sec
[0000] Calling mem_process_seqs.., task: 2130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519756, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1048, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5291)
[0000][PE] mean and std.dev: (1261.14, 1165.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (435, 722, 3766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10428)
[0000][PE] mean and std.dev: (1722.30, 1808.80)
[0000][PE] low and high boundaries for proper pairs: (1, 13759)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1336, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (1305.08, 552.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 407.264 CPU sec, 22.786 real sec
[0000] Calling mem_process_seqs.., task: 2131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520212, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 855, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6582)
[0000][PE] mean and std.dev: (1311.89, 1147.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.61, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1554, 4435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11439)
[0000][PE] mean and std.dev: (2818.79, 2916.44)
[0000][PE] low and high boundaries for proper pairs: (1, 14941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 410.658 CPU sec, 23.026 real sec
[0000] Calling mem_process_seqs.., task: 2132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205194
	[0000][ M::kt_pipeline] read 1205194 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519970, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 883, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (1047.69, 692.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1648, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (1574.71, 813.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 408.104 CPU sec, 22.875 real sec
[0000] Calling mem_process_seqs.., task: 2133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519993, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 417, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (850.88, 897.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1036, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1218.25, 689.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205194 reads in 410.298 CPU sec, 23.004 real sec
[0000] Calling mem_process_seqs.., task: 2134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520262, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (534, 773, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5469)
[0000][PE] mean and std.dev: (1317.00, 1067.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.77, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1443, 2734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6844)
[0000][PE] mean and std.dev: (1948.13, 1770.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 402.026 CPU sec, 22.515 real sec
[0000] Calling mem_process_seqs.., task: 2135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520262, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 1235, 2732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7500)
[0000][PE] mean and std.dev: (1741.81, 1862.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.35, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1597, 2252, 3402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7012)
[0000][PE] mean and std.dev: (2265.94, 1256.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 404.709 CPU sec, 22.670 real sec
[0000] Calling mem_process_seqs.., task: 2136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519925, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (555, 908, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (912.20, 520.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1588, 3187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7105)
[0000][PE] mean and std.dev: (1914.18, 1283.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 409.010 CPU sec, 22.926 real sec
[0000] Calling mem_process_seqs.., task: 2137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519963, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (649, 1031, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (1062.61, 629.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1421, 3119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7599)
[0000][PE] mean and std.dev: (1723.10, 1293.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 409.298 CPU sec, 22.932 real sec
[0000] Calling mem_process_seqs.., task: 2138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520492, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 1398, 4862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13644)
[0000][PE] mean and std.dev: (2485.72, 2359.07)
[0000][PE] low and high boundaries for proper pairs: (1, 18035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1325, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (1371.60, 708.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 407.137 CPU sec, 22.848 real sec
[0000] Calling mem_process_seqs.., task: 2139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519864, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 745, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (996.52, 806.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1639, 4680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11984)
[0000][PE] mean and std.dev: (2785.76, 2668.90)
[0000][PE] low and high boundaries for proper pairs: (1, 15636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 408.705 CPU sec, 22.877 real sec
[0000] Calling mem_process_seqs.., task: 2140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520124, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (894, 1476, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5526)
[0000][PE] mean and std.dev: (1790.11, 1400.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1672, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1601.85, 838.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 409.751 CPU sec, 22.944 real sec
[0000] Calling mem_process_seqs.., task: 2141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520045, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (653, 1307, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6140)
[0000][PE] mean and std.dev: (1496.90, 1130.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1293, 1616, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5412)
[0000][PE] mean and std.dev: (1771.52, 932.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 409.084 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 2142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519877, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 765, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4642)
[0000][PE] mean and std.dev: (1118.36, 977.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1506, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5152)
[0000][PE] mean and std.dev: (1703.62, 910.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 408.112 CPU sec, 22.875 real sec
[0000] Calling mem_process_seqs.., task: 2143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520050, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (727, 915, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (1061.16, 683.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1736, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (1545.77, 668.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 406.387 CPU sec, 22.759 real sec
[0000] Calling mem_process_seqs.., task: 2144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520225, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 870, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (929.76, 733.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.69, 120.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1206, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (1322.77, 862.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 406.086 CPU sec, 22.737 real sec
[0000] Calling mem_process_seqs.., task: 2145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519626, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (653, 909, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4013)
[0000][PE] mean and std.dev: (1065.53, 657.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1843, 2795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6999)
[0000][PE] mean and std.dev: (1862.36, 1250.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9101)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 414.119 CPU sec, 23.202 real sec
[0000] Calling mem_process_seqs.., task: 2146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205238
	[0000][ M::kt_pipeline] read 1205238 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520168, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (860, 1017, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (1121.50, 762.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1270, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5922)
[0000][PE] mean and std.dev: (1691.81, 1102.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 404.441 CPU sec, 22.627 real sec
[0000] Calling mem_process_seqs.., task: 2147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520028, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 861, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (974.95, 854.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.43, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1181, 2930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6740)
[0000][PE] mean and std.dev: (1391.25, 879.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205238 reads in 407.689 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 2148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205366
	[0000][ M::kt_pipeline] read 1205366 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520394, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 1115, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4444)
[0000][PE] mean and std.dev: (1016.73, 803.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1568, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1593.71, 874.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 403.989 CPU sec, 22.635 real sec
[0000] Calling mem_process_seqs.., task: 2149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519318, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1115, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (948.47, 684.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1505, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5179)
[0000][PE] mean and std.dev: (1680.93, 1001.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205366 reads in 412.821 CPU sec, 23.100 real sec
[0000] Calling mem_process_seqs.., task: 2150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520653, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 923, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4757)
[0000][PE] mean and std.dev: (1149.73, 893.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 1740, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6401)
[0000][PE] mean and std.dev: (1922.44, 1184.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 405.467 CPU sec, 22.710 real sec
[0000] Calling mem_process_seqs.., task: 2151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520377, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 683, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6898)
[0000][PE] mean and std.dev: (1280.58, 1340.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.24, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1254, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (1097.75, 605.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 405.237 CPU sec, 22.698 real sec
[0000] Calling mem_process_seqs.., task: 2152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520314, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 692, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (974.91, 859.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.44, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1544, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (1420.62, 805.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 404.679 CPU sec, 22.648 real sec
[0000] Calling mem_process_seqs.., task: 2153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519988, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (581, 1025, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5126)
[0000][PE] mean and std.dev: (1274.75, 995.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.54, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1524, 3650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8784)
[0000][PE] mean and std.dev: (2570.78, 2561.08)
[0000][PE] low and high boundaries for proper pairs: (1, 12815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 405.325 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 2154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205188
	[0000][ M::kt_pipeline] read 1205188 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520106, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (670, 1160, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5080)
[0000][PE] mean and std.dev: (1440.67, 1143.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.47, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1720, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (1454.94, 746.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 404.240 CPU sec, 22.605 real sec
[0000] Calling mem_process_seqs.., task: 2155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520205, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (716, 965, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4811)
[0000][PE] mean and std.dev: (1232.12, 1075.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1740, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (1650.44, 659.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205188 reads in 409.103 CPU sec, 22.922 real sec
[0000] Calling mem_process_seqs.., task: 2156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520294, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 997, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (928.00, 569.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1420, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (1399.75, 861.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 407.965 CPU sec, 22.832 real sec
[0000] Calling mem_process_seqs.., task: 2157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520269, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 1147, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8555)
[0000][PE] mean and std.dev: (1780.35, 1930.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.29, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 2288, 5877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15529)
[0000][PE] mean and std.dev: (3183.27, 2524.86)
[0000][PE] low and high boundaries for proper pairs: (1, 20355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 408.026 CPU sec, 22.851 real sec
[0000] Calling mem_process_seqs.., task: 2158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520168, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 936, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5743)
[0000][PE] mean and std.dev: (1304.37, 1362.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1483, 3344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8346)
[0000][PE] mean and std.dev: (2184.38, 1975.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 406.496 CPU sec, 22.791 real sec
[0000] Calling mem_process_seqs.., task: 2159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519949, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 885, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5485)
[0000][PE] mean and std.dev: (1331.48, 1334.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.46, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1773, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4285)
[0000][PE] mean and std.dev: (1713.67, 758.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 410.738 CPU sec, 23.010 real sec
[0000] Calling mem_process_seqs.., task: 2160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519887, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 728, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (920.62, 740.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.59, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1486, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5089)
[0000][PE] mean and std.dev: (1811.70, 1038.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 406.911 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 2161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 520148, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (612, 792, 2828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7260)
[0000][PE] mean and std.dev: (1470.15, 1184.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1458, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1668.04, 1048.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 408.428 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 2162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205270
	[0000][ M::kt_pipeline] read 1205270 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519870, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 979, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (1076.92, 821.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.66, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1290, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (1280.53, 725.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 408.748 CPU sec, 22.951 real sec
[0000] Calling mem_process_seqs.., task: 2163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205256
	[0000][ M::kt_pipeline] read 1205256 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520268, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 510, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (659.00, 496.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.44, 120.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1297, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (1103.93, 464.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205270 reads in 407.993 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 2164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519905, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (543, 996, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (1044.96, 722.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.67, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1729, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5785)
[0000][PE] mean and std.dev: (1957.62, 1012.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205256 reads in 412.928 CPU sec, 23.164 real sec
[0000] Calling mem_process_seqs.., task: 2165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520035, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 925, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (957.95, 678.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.76, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1346, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4821)
[0000][PE] mean and std.dev: (1552.23, 769.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 407.506 CPU sec, 22.810 real sec
[0000] Calling mem_process_seqs.., task: 2166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519969, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 943, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (1118.43, 1072.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.41, 120.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1485, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6219)
[0000][PE] mean and std.dev: (1927.59, 1518.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 408.317 CPU sec, 22.860 real sec
[0000] Calling mem_process_seqs.., task: 2167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519903, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 388, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (575.60, 409.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (105, 498, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5067)
[0000][PE] mean and std.dev: (1107.80, 1252.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6721)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1536, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7189)
[0000][PE] mean and std.dev: (1750.14, 1190.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 408.575 CPU sec, 22.896 real sec
[0000] Calling mem_process_seqs.., task: 2168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519905, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1216, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4343)
[0000][PE] mean and std.dev: (1086.58, 863.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 2322, 2685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5977)
[0000][PE] mean and std.dev: (2099.78, 1260.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 409.040 CPU sec, 22.903 real sec
[0000] Calling mem_process_seqs.., task: 2169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205328
	[0000][ M::kt_pipeline] read 1205328 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519788, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1074, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6450)
[0000][PE] mean and std.dev: (1471.67, 1459.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (475, 1069, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4723)
[0000][PE] mean and std.dev: (1384.80, 1118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 410.134 CPU sec, 23.008 real sec
[0000] Calling mem_process_seqs.., task: 2170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519960, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 925, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5283)
[0000][PE] mean and std.dev: (1124.04, 925.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1288, 1825, 3115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6769)
[0000][PE] mean and std.dev: (1952.61, 973.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205328 reads in 407.374 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 2171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519982, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (552, 1010, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (1270.10, 979.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.62, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1234, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5360)
[0000][PE] mean and std.dev: (1398.59, 1008.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 408.204 CPU sec, 22.837 real sec
[0000] Calling mem_process_seqs.., task: 2172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205282
	[0000][ M::kt_pipeline] read 1205282 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520182, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 1413, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (1315.85, 1087.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1463, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1607.91, 801.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 408.441 CPU sec, 22.875 real sec
[0000] Calling mem_process_seqs.., task: 2173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 520012, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 980, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (975.62, 648.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.52, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1970, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (2038.55, 1005.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205282 reads in 406.841 CPU sec, 22.793 real sec
[0000] Calling mem_process_seqs.., task: 2174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519998, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (585, 1126, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5919)
[0000][PE] mean and std.dev: (1413.46, 1243.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.31, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (612, 1557, 3459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9153)
[0000][PE] mean and std.dev: (2155.04, 2087.40)
[0000][PE] low and high boundaries for proper pairs: (1, 12000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 409.928 CPU sec, 22.972 real sec
[0000] Calling mem_process_seqs.., task: 2175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520033, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1267, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5890)
[0000][PE] mean and std.dev: (1496.20, 1467.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1434, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (1284.91, 615.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 412.005 CPU sec, 23.082 real sec
[0000] Calling mem_process_seqs.., task: 2176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519509, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 849, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (879.20, 695.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1218, 1724, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1855.45, 913.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 411.429 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 2177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 520689, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 798, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (913.70, 797.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.44, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1414, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (1286.20, 503.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 403.968 CPU sec, 22.643 real sec
[0000] Calling mem_process_seqs.., task: 2178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520041, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 657, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3768)
[0000][PE] mean and std.dev: (762.74, 650.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1198, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5614)
[0000][PE] mean and std.dev: (1610.00, 1222.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 417.317 CPU sec, 23.385 real sec
[0000] Calling mem_process_seqs.., task: 2179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519856, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 752, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (982.92, 893.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.39, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1451, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5279)
[0000][PE] mean and std.dev: (1644.14, 932.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 409.691 CPU sec, 22.939 real sec
[0000] Calling mem_process_seqs.., task: 2180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205260
	[0000][ M::kt_pipeline] read 1205260 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 520430, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 1484, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7668)
[0000][PE] mean and std.dev: (1757.12, 2024.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (497, 1379, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5570)
[0000][PE] mean and std.dev: (1326.88, 855.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 409.213 CPU sec, 22.904 real sec
[0000] Calling mem_process_seqs.., task: 2181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519540, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (604, 1017, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4885)
[0000][PE] mean and std.dev: (1441.00, 1272.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.83, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1590, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5319)
[0000][PE] mean and std.dev: (1529.06, 987.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205260 reads in 409.610 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 2182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205230
	[0000][ M::kt_pipeline] read 1205230 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 520060, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 831, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1017.00, 751.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1413, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (1336.26, 696.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 410.036 CPU sec, 22.980 real sec
[0000] Calling mem_process_seqs.., task: 2183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 520117, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 1509, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6144)
[0000][PE] mean and std.dev: (1538.38, 1096.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1974, 3842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9218)
[0000][PE] mean and std.dev: (2502.35, 2129.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205230 reads in 406.571 CPU sec, 22.802 real sec
[0000] Calling mem_process_seqs.., task: 2184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519989, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 781, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (1131.61, 1174.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.21, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1280, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5271)
[0000][PE] mean and std.dev: (1431.20, 878.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 407.299 CPU sec, 22.836 real sec
[0000] Calling mem_process_seqs.., task: 2185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519885, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (520, 1085, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1260.94, 1026.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.40, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1478, 2690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6070)
[0000][PE] mean and std.dev: (1838.00, 1339.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 409.222 CPU sec, 22.926 real sec
[0000] Calling mem_process_seqs.., task: 2186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205202
	[0000][ M::kt_pipeline] read 1205202 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520018, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 968, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3468)
[0000][PE] mean and std.dev: (978.37, 793.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.65, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1383, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (1361.68, 673.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 410.075 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 2187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205274
	[0000][ M::kt_pipeline] read 1205274 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 520397, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 727, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6826)
[0000][PE] mean and std.dev: (1203.00, 1120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.96, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (493, 975, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2962)
[0000][PE] mean and std.dev: (765.00, 375.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205202 reads in 407.110 CPU sec, 22.831 real sec
[0000] Calling mem_process_seqs.., task: 2188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519784, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 595, 2668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7494)
[0000][PE] mean and std.dev: (1442.81, 1929.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1253, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (1343.50, 671.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205274 reads in 409.386 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 2189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519995, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (687, 1349, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (1364.03, 803.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.52, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1282, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7590)
[0000][PE] mean and std.dev: (1919.87, 1490.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 406.474 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 2190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520403, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (576, 1307, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6339)
[0000][PE] mean and std.dev: (1670.22, 1337.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.68, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1642, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (1637.48, 784.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 407.627 CPU sec, 22.829 real sec
[0000] Calling mem_process_seqs.., task: 2191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205252
	[0000][ M::kt_pipeline] read 1205252 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519911, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 1086, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1225.73, 954.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1481, 3327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8127)
[0000][PE] mean and std.dev: (2093.12, 1692.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 407.851 CPU sec, 22.840 real sec
[0000] Calling mem_process_seqs.., task: 2192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519728, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (562, 1458, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5257)
[0000][PE] mean and std.dev: (1220.92, 731.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.88, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1670, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1676.38, 992.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205252 reads in 408.389 CPU sec, 22.863 real sec
[0000] Calling mem_process_seqs.., task: 2193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519716, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 1017, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (914.24, 606.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.44, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1112, 3205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8101)
[0000][PE] mean and std.dev: (1754.88, 1384.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 410.950 CPU sec, 23.028 real sec
[0000] Calling mem_process_seqs.., task: 2194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520395, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 978, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5790)
[0000][PE] mean and std.dev: (1293.65, 1015.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.36, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1087, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7301)
[0000][PE] mean and std.dev: (1842.14, 1766.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 404.827 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 2195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520097, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (568, 1130, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1204.35, 882.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.57, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1810, 2160, 3184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5932)
[0000][PE] mean and std.dev: (2137.93, 974.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 406.818 CPU sec, 22.770 real sec
[0000] Calling mem_process_seqs.., task: 2196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 520357, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 1083, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5466)
[0000][PE] mean and std.dev: (1244.91, 1125.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.70, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1204, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4264)
[0000][PE] mean and std.dev: (1390.14, 783.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 410.289 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 2197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520477, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 946, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4654)
[0000][PE] mean and std.dev: (1005.19, 758.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (511.90, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (487, 986, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5542)
[0000][PE] mean and std.dev: (1005.33, 703.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 407.955 CPU sec, 22.874 real sec
[0000] Calling mem_process_seqs.., task: 2198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205240
	[0000][ M::kt_pipeline] read 1205240 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520471, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (521, 1163, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (1110.83, 929.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.55, 120.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1300, 1732, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1675.24, 702.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 407.959 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 2199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520105, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 759, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5512)
[0000][PE] mean and std.dev: (1014.90, 802.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1260, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (1394.43, 957.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205240 reads in 408.286 CPU sec, 22.908 real sec
[0000] Calling mem_process_seqs.., task: 2200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 520171, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (837, 1181, 3801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9729)
[0000][PE] mean and std.dev: (2374.82, 2342.75)
[0000][PE] low and high boundaries for proper pairs: (1, 12693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.78, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1089, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (1195.32, 541.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 407.251 CPU sec, 22.795 real sec
[0000] Calling mem_process_seqs.., task: 2201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 520008, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 560, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (881.55, 967.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 899)
[0000][PE] mean and std.dev: (511.11, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1582, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (1576.00, 790.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 410.361 CPU sec, 22.984 real sec
[0000] Calling mem_process_seqs.., task: 2202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205278
	[0000][ M::kt_pipeline] read 1205278 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519666, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 818, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (907.61, 650.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.49, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1404, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5805)
[0000][PE] mean and std.dev: (1715.57, 1329.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 409.162 CPU sec, 22.918 real sec
[0000] Calling mem_process_seqs.., task: 2203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519812, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 831, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1191.64, 1041.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 1538, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (1625.86, 859.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205278 reads in 409.100 CPU sec, 22.908 real sec
[0000] Calling mem_process_seqs.., task: 2204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 520342, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 625, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5307)
[0000][PE] mean and std.dev: (1243.23, 1171.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.74, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1538, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5254)
[0000][PE] mean and std.dev: (1614.64, 856.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 403.699 CPU sec, 22.634 real sec
[0000] Calling mem_process_seqs.., task: 2205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519806, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 752, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (845.68, 508.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.60, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1475, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1394.59, 694.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 409.640 CPU sec, 23.003 real sec
[0000] Calling mem_process_seqs.., task: 2206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519977, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 907, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (801.60, 594.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1526, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1829.47, 923.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 411.817 CPU sec, 23.090 real sec
[0000] Calling mem_process_seqs.., task: 2207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 520346, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 529, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (917.48, 827.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.73, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1377, 2035, 2524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4818)
[0000][PE] mean and std.dev: (1975.59, 950.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 403.781 CPU sec, 22.621 real sec
[0000] Calling mem_process_seqs.., task: 2208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 520511, 1, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 1151, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1275.65, 1069.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (512.03, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1229, 2776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6234)
[0000][PE] mean and std.dev: (1623.58, 1159.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 405.224 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 2209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 519716, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 636, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2697)
[0000][PE] mean and std.dev: (792.57, 641.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.42, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1090, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (1295.95, 757.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 410.056 CPU sec, 22.962 real sec
[0000] Calling mem_process_seqs.., task: 2210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519671, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 933, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4117)
[0000][PE] mean and std.dev: (1146.00, 1146.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 900)
[0000][PE] mean and std.dev: (512.04, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1808, 2789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6823)
[0000][PE] mean and std.dev: (1776.24, 1329.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 409.940 CPU sec, 22.961 real sec
[0000] Calling mem_process_seqs.., task: 2211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520047, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 916, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6182)
[0000][PE] mean and std.dev: (1340.35, 1331.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.63, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 1667, 2879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6045)
[0000][PE] mean and std.dev: (1782.69, 919.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 407.476 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 2212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519665, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 737, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (1043.03, 959.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.56, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1736, 2577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5545)
[0000][PE] mean and std.dev: (1924.20, 1064.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 408.792 CPU sec, 22.880 real sec
[0000] Calling mem_process_seqs.., task: 2213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519789, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 842, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5046)
[0000][PE] mean and std.dev: (1295.76, 1384.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.48, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1094, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (1268.87, 749.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 410.407 CPU sec, 22.999 real sec
[0000] Calling mem_process_seqs.., task: 2214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519857, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 866, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (912.15, 629.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.50, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 1126, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7769)
[0000][PE] mean and std.dev: (1767.39, 1515.89)
[0000][PE] low and high boundaries for proper pairs: (1, 10220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 411.876 CPU sec, 23.116 real sec
[0000] Calling mem_process_seqs.., task: 2215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 19922874, nseq: 133374
	[0000][ M::kt_pipeline] read 133374 sequences (19922874 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 520229, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 1368, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4915)
[0000][PE] mean and std.dev: (1363.84, 1227.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 504, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.53, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1340, 1490, 3269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7127)
[0000][PE] mean and std.dev: (2148.87, 1591.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 409.637 CPU sec, 22.961 real sec
[0000] Calling mem_process_seqs.., task: 2216
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 133374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 57398, 0, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 503, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 897)
[0000][PE] mean and std.dev: (511.54, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 133374 reads in 46.143 CPU sec, 2.683 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.195498 MHz
Runtime profile:

	Time taken for main_mem function: 50436.91 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2453.22, (2453.22, 2453.22)
	Writing IO time (SAM) avg: 3983.18, (3983.18, 3983.18)
	Reading IO time (Reference Genome) avg: 17.68, (17.68, 17.68)
	Index read time avg: 27.27, (27.27, 27.27)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 50391.88
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 50324.59, (50324.59, 50324.59)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 19055.02, (19055.02, 19055.02)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 31056.40, (31056.40, 31056.40)
		SMEM compute avg: 10373.69, (10433.80, 10334.82)
		SAL compute avg: 3963.70, (3978.26, 3941.20)
				MEM_SA avg: 1785.85, (1789.03, 1781.83)

		BSW time, avg: 12749.07, (12751.31, 12745.27)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
