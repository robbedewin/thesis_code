Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000242 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517268, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 388, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (748.68, 700.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 1432, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (1231.39, 915.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 335.810 CPU sec, 19.176 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517136, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 455, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5499)
[0000][PE] mean and std.dev: (1125.24, 1333.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1258, 3064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7026)
[0000][PE] mean and std.dev: (1662.56, 1265.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 333.098 CPU sec, 18.823 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516905, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 484, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (700.56, 542.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1395, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5878)
[0000][PE] mean and std.dev: (1617.06, 986.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 332.715 CPU sec, 18.691 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517294, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 444, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (832.12, 763.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.32, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1679, 3285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7919)
[0000][PE] mean and std.dev: (1836.71, 1233.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 330.436 CPU sec, 18.538 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517498, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 344, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1556)
[0000][PE] mean and std.dev: (453.50, 357.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.20, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1326, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (1363.72, 634.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 327.583 CPU sec, 18.425 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516945, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 900, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5403)
[0000][PE] mean and std.dev: (1142.92, 1097.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1732, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1977.06, 1045.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 326.675 CPU sec, 18.928 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516893, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 418, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (558.84, 552.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.96, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1520, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (1415.58, 598.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 333.801 CPU sec, 18.807 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517397, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 441, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (703.17, 615.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1284, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2774)
[0000][PE] mean and std.dev: (1236.59, 467.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 328.307 CPU sec, 18.420 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517126, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 859, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (1048.00, 931.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.79, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1049, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2798)
[0000][PE] mean and std.dev: (1006.67, 400.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 335.566 CPU sec, 18.825 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516927, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 928, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (890.43, 494.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1755, 2882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6248)
[0000][PE] mean and std.dev: (1741.20, 800.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 330.319 CPU sec, 18.627 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516800, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 360, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (569.56, 488.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1166, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (1149.87, 621.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 330.320 CPU sec, 18.533 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516815, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 864, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5883)
[0000][PE] mean and std.dev: (1032.31, 818.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1569, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1426.77, 742.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 330.396 CPU sec, 18.539 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516463, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 538, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7176)
[0000][PE] mean and std.dev: (1746.11, 1986.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1547, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5050)
[0000][PE] mean and std.dev: (1656.61, 882.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 331.046 CPU sec, 18.560 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516723, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1142, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6182)
[0000][PE] mean and std.dev: (1420.64, 1350.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1451, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3882)
[0000][PE] mean and std.dev: (1407.35, 738.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 330.502 CPU sec, 18.551 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516711, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 572, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (743.26, 739.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1376, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1430.12, 949.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 330.555 CPU sec, 18.537 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516766, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1058, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4672)
[0000][PE] mean and std.dev: (1062.57, 807.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1371, 3395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8829)
[0000][PE] mean and std.dev: (2107.89, 1828.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 328.960 CPU sec, 18.460 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516453, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1046, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4449)
[0000][PE] mean and std.dev: (1122.73, 810.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1174, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (1268.70, 585.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 332.596 CPU sec, 18.726 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516992, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 641, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (951.17, 878.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1201, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3977)
[0000][PE] mean and std.dev: (1266.59, 882.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 333.836 CPU sec, 18.897 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517496, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 345, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (624.10, 596.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.18, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1536, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5785)
[0000][PE] mean and std.dev: (1747.85, 980.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 334.350 CPU sec, 19.397 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517139, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 530, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (755.38, 585.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 335.752 CPU sec, 19.146 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516665, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 451, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (621.26, 572.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1283, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (1147.69, 767.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 336.986 CPU sec, 18.959 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517284, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 523, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3805)
[0000][PE] mean and std.dev: (879.63, 632.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.69, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 1102, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (1115.71, 630.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 333.660 CPU sec, 18.759 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516816, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 498, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2676)
[0000][PE] mean and std.dev: (657.32, 502.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1714, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (1759.29, 961.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 332.379 CPU sec, 18.693 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516840, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 341, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5997)
[0000][PE] mean and std.dev: (1084.59, 1071.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1121, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (1153.20, 672.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 329.571 CPU sec, 18.660 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517085, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 613, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (795.33, 746.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1511, 2727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6565)
[0000][PE] mean and std.dev: (1580.38, 842.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 331.822 CPU sec, 18.675 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516944, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 633, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5692)
[0000][PE] mean and std.dev: (1098.86, 1330.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1349, 1485, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (1662.10, 435.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 329.586 CPU sec, 18.539 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517080, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 846, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1177.93, 1003.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1400, 1845, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (1537.64, 616.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 330.101 CPU sec, 18.617 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517325, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1087, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (1084.59, 848.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 2555, 3615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8817)
[0000][PE] mean and std.dev: (2817.28, 2216.47)
[0000][PE] low and high boundaries for proper pairs: (1, 11683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 332.528 CPU sec, 18.716 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517306, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 599, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7176)
[0000][PE] mean and std.dev: (1284.37, 1271.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1497, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4634)
[0000][PE] mean and std.dev: (1538.13, 948.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 329.052 CPU sec, 18.482 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516698, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 665, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5527)
[0000][PE] mean and std.dev: (1171.50, 1208.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1070, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (1099.29, 450.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 331.255 CPU sec, 18.638 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517073, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 500, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (758.00, 750.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.84, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1266, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5180)
[0000][PE] mean and std.dev: (1550.19, 902.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 335.127 CPU sec, 18.909 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517243, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 588, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (744.00, 526.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.20, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1357, 2589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6055)
[0000][PE] mean and std.dev: (1600.56, 1119.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 337.206 CPU sec, 18.982 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517011, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 387, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (671.46, 605.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 2125, 3796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9234)
[0000][PE] mean and std.dev: (2295.38, 1614.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 331.019 CPU sec, 18.644 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517268, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 446, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (814.30, 897.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.36, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1189, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (1342.21, 796.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 328.361 CPU sec, 18.423 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516942, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1205, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4952)
[0000][PE] mean and std.dev: (1207.33, 955.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1301, 1605, 3275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7223)
[0000][PE] mean and std.dev: (1981.65, 1266.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 326.690 CPU sec, 18.404 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516737, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 857, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (905.72, 761.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1250, 2403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1557.16, 1074.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 331.209 CPU sec, 18.604 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517404, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 932, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4597)
[0000][PE] mean and std.dev: (1251.56, 1016.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1503, 2875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6645)
[0000][PE] mean and std.dev: (1696.50, 864.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 330.059 CPU sec, 18.566 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516952, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 691, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6321)
[0000][PE] mean and std.dev: (1371.87, 1586.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1244, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3919)
[0000][PE] mean and std.dev: (1338.31, 710.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 334.022 CPU sec, 18.749 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517207, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 481, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2584)
[0000][PE] mean and std.dev: (677.06, 551.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1301, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4642)
[0000][PE] mean and std.dev: (1491.14, 977.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 330.376 CPU sec, 18.651 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516432, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 349, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2256)
[0000][PE] mean and std.dev: (454.15, 371.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1462, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5595)
[0000][PE] mean and std.dev: (1732.61, 1057.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 328.787 CPU sec, 18.495 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517277, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 469, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3234)
[0000][PE] mean and std.dev: (712.83, 724.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1260, 2917, 4521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11043)
[0000][PE] mean and std.dev: (2902.30, 1829.75)
[0000][PE] low and high boundaries for proper pairs: (1, 14304)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1481, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5008)
[0000][PE] mean and std.dev: (1620.39, 1186.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 326.212 CPU sec, 18.342 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517576, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 1251, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5718)
[0000][PE] mean and std.dev: (1453.30, 1150.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1519, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5356)
[0000][PE] mean and std.dev: (1630.73, 1020.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 327.614 CPU sec, 18.414 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516876, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 996, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5158)
[0000][PE] mean and std.dev: (1201.50, 1052.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1652, 2691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6135)
[0000][PE] mean and std.dev: (1680.62, 979.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 333.525 CPU sec, 18.733 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516994, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1028, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (978.36, 864.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1502, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (1491.95, 898.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 335.471 CPU sec, 18.860 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516727, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 457, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4368)
[0000][PE] mean and std.dev: (966.90, 993.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.30, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1045, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (1216.50, 837.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 331.318 CPU sec, 18.617 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517037, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 467, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5395)
[0000][PE] mean and std.dev: (942.80, 1012.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.91, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1235, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (1211.94, 729.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 329.424 CPU sec, 18.506 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516740, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 400, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1771)
[0000][PE] mean and std.dev: (532.56, 374.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1282, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1477.05, 735.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 337.769 CPU sec, 19.036 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516795, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 565, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (935.13, 746.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.36, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1351, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (1411.15, 802.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 330.793 CPU sec, 18.595 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517437, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 734, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (733.67, 535.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1254, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5654)
[0000][PE] mean and std.dev: (1637.96, 902.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 329.238 CPU sec, 18.506 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517384, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 855, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5586)
[0000][PE] mean and std.dev: (1512.78, 1525.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.74, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1847, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5478)
[0000][PE] mean and std.dev: (1411.50, 663.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 325.382 CPU sec, 18.274 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517294, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 707, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6045)
[0000][PE] mean and std.dev: (1340.35, 1510.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (421, 1455, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7039)
[0000][PE] mean and std.dev: (1571.00, 1255.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 323.270 CPU sec, 18.172 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517590, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 559, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (836.07, 846.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1447, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (1522.53, 831.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 330.145 CPU sec, 18.611 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516801, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 718, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (848.93, 729.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1161, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (1447.62, 981.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 330.836 CPU sec, 18.605 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517092, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 861, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (923.94, 654.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1080, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (1206.19, 734.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 328.676 CPU sec, 18.440 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516544, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 811, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (1172.44, 1038.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1336, 1679, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5374)
[0000][PE] mean and std.dev: (1803.86, 896.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 332.660 CPU sec, 18.899 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517211, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1344, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (1184.20, 938.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1471, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3810)
[0000][PE] mean and std.dev: (1238.67, 625.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 328.859 CPU sec, 18.498 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516914, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 396, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (858.06, 1024.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1888, 3109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6875)
[0000][PE] mean and std.dev: (2007.61, 1135.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 327.424 CPU sec, 18.385 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517041, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 822, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (780.14, 795.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.86, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1654, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5193)
[0000][PE] mean and std.dev: (1811.17, 1172.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 327.966 CPU sec, 18.445 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516861, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 895, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (936.77, 792.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.21, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1586, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6923)
[0000][PE] mean and std.dev: (1959.26, 1259.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 327.911 CPU sec, 18.432 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517198, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 720, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (871.80, 802.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 980, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (1228.19, 706.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 325.599 CPU sec, 18.412 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517327, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 515, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (912.58, 903.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1339, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5423)
[0000][PE] mean and std.dev: (1594.05, 885.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 332.100 CPU sec, 18.680 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517058, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 675, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (742.41, 573.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1388, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (1453.35, 789.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 331.863 CPU sec, 18.727 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517151, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 401, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4405)
[0000][PE] mean and std.dev: (726.37, 792.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1701, 3020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6776)
[0000][PE] mean and std.dev: (1882.00, 1158.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 328.903 CPU sec, 18.514 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516927, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 509, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4684)
[0000][PE] mean and std.dev: (972.52, 883.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1331, 1690, 2711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5471)
[0000][PE] mean and std.dev: (1835.57, 690.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 325.194 CPU sec, 18.338 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517223, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 618, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (798.28, 620.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.34, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1412, 3368, 4657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11147)
[0000][PE] mean and std.dev: (3134.21, 1847.19)
[0000][PE] low and high boundaries for proper pairs: (1, 14392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 324.248 CPU sec, 18.214 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517173, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 786, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (872.69, 584.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1387, 3148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7442)
[0000][PE] mean and std.dev: (2215.56, 1872.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 327.243 CPU sec, 18.400 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517107, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 693, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (783.50, 656.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1509, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (1460.25, 569.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 330.403 CPU sec, 18.544 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517258, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 1284, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (1269.85, 936.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1549, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (1598.21, 620.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 331.283 CPU sec, 18.626 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516791, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 858, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1162.20, 1014.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (496, 1128, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5059)
[0000][PE] mean and std.dev: (1207.27, 729.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 329.693 CPU sec, 18.522 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516405, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 402, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (735.17, 683.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1132, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (1109.57, 537.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 331.054 CPU sec, 18.730 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517074, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 407, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (774.48, 782.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1163, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (1176.94, 727.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 326.362 CPU sec, 18.357 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516730, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 350, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2453)
[0000][PE] mean and std.dev: (447.11, 412.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1366, 2192, 3056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6436)
[0000][PE] mean and std.dev: (2089.83, 979.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 325.695 CPU sec, 18.311 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517196, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 869, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (811.00, 681.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1459, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6303)
[0000][PE] mean and std.dev: (1690.73, 1474.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 326.000 CPU sec, 18.292 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516888, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (486, 1482, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1044.55, 726.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1246, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2852)
[0000][PE] mean and std.dev: (1006.67, 368.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 326.948 CPU sec, 18.397 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516987, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 365, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (587.23, 574.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.66, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1348, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6293)
[0000][PE] mean and std.dev: (1412.14, 954.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 327.459 CPU sec, 18.401 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516864, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 788, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2213)
[0000][PE] mean and std.dev: (708.67, 496.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1195, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2668)
[0000][PE] mean and std.dev: (1225.64, 540.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 326.768 CPU sec, 18.390 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516613, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 974, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4950)
[0000][PE] mean and std.dev: (1232.04, 1046.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1193, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1201.75, 736.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 331.040 CPU sec, 18.809 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516834, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 435, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5832)
[0000][PE] mean and std.dev: (1027.04, 953.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1364, 2871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6595)
[0000][PE] mean and std.dev: (2045.69, 1658.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 327.951 CPU sec, 18.514 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516654, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 344, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2654)
[0000][PE] mean and std.dev: (387.00, 321.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1496, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (1545.92, 639.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 324.970 CPU sec, 18.269 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516493, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 498, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3078)
[0000][PE] mean and std.dev: (750.38, 677.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1234, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (1418.90, 803.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 326.567 CPU sec, 18.407 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517267, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 393, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3544)
[0000][PE] mean and std.dev: (844.00, 900.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1195, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (1161.55, 592.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 324.516 CPU sec, 18.211 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516668, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 561, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (667.84, 467.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1343, 3192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7896)
[0000][PE] mean and std.dev: (1570.47, 1278.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 327.740 CPU sec, 18.450 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517491, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 1113, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4654)
[0000][PE] mean and std.dev: (1162.88, 916.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1163, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (998.26, 426.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 327.025 CPU sec, 18.429 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517305, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 527, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (860.60, 852.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.74, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 1121, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (1479.42, 1463.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 329.331 CPU sec, 18.513 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516968, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 407, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (697.00, 651.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.97, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1402, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (1411.46, 765.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 329.441 CPU sec, 18.599 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516846, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 855, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (1230.29, 1147.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.19, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1510, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (1282.17, 695.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 324.007 CPU sec, 18.243 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516772, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 880, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (963.71, 872.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1154, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (1255.67, 728.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 326.623 CPU sec, 18.327 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517331, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (568, 907, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (856.69, 510.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1361, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1560.22, 1053.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 325.027 CPU sec, 18.239 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517536, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 529, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5000)
[0000][PE] mean and std.dev: (929.72, 874.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1245, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (1285.35, 825.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 324.084 CPU sec, 18.201 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516914, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 908, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6443)
[0000][PE] mean and std.dev: (1491.19, 1433.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1694, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5899)
[0000][PE] mean and std.dev: (1700.05, 1157.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 329.278 CPU sec, 18.480 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516743, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 415, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1852)
[0000][PE] mean and std.dev: (533.33, 299.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.52, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 825, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (900.60, 440.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 328.557 CPU sec, 18.424 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516932, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 520, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (892.18, 895.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1351, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (1386.91, 891.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 330.573 CPU sec, 18.781 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516716, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (534, 1503, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6906)
[0000][PE] mean and std.dev: (1812.31, 1593.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1353, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4530)
[0000][PE] mean and std.dev: (1655.37, 872.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 324.656 CPU sec, 18.263 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516847, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 414, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (567.38, 455.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.93, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1328, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4559)
[0000][PE] mean and std.dev: (1655.12, 1163.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 327.133 CPU sec, 19.043 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516877, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 287, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (674.33, 669.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1234, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5060)
[0000][PE] mean and std.dev: (1339.81, 801.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 323.510 CPU sec, 18.524 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516949, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 904, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (960.68, 883.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.58, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1121, 2374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5486)
[0000][PE] mean and std.dev: (1364.83, 853.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 324.652 CPU sec, 18.589 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516740, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 663, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4622)
[0000][PE] mean and std.dev: (970.38, 870.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1187, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (1249.50, 714.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 334.366 CPU sec, 21.130 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516674, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 897, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1169.80, 1069.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1165, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1376.62, 860.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 326.290 CPU sec, 19.315 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516599, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 740, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4158)
[0000][PE] mean and std.dev: (936.00, 1000.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1448, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4768)
[0000][PE] mean and std.dev: (1326.43, 743.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 325.678 CPU sec, 18.552 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517137, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 501, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (721.00, 697.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1331, 3204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7736)
[0000][PE] mean and std.dev: (1698.30, 1127.63)
[0000][PE] low and high boundaries for proper pairs: (1, 10002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 323.102 CPU sec, 18.671 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517058, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 947, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7462)
[0000][PE] mean and std.dev: (1593.19, 1506.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1386, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (1404.45, 606.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 326.768 CPU sec, 18.781 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517136, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 524, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (885.16, 821.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1412, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (1359.58, 693.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 324.348 CPU sec, 18.521 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516470, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 948, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5614)
[0000][PE] mean and std.dev: (1308.69, 1350.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1385, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (1292.79, 686.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 327.107 CPU sec, 18.688 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516833, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 385, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (671.40, 557.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 938, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (1062.83, 646.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 324.256 CPU sec, 18.501 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516755, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 339, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2454)
[0000][PE] mean and std.dev: (465.17, 390.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1505, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4324)
[0000][PE] mean and std.dev: (1189.00, 702.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 328.789 CPU sec, 19.011 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517033, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 680, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (852.27, 611.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1296, 4132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10230)
[0000][PE] mean and std.dev: (2145.09, 2020.08)
[0000][PE] low and high boundaries for proper pairs: (1, 13279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 324.295 CPU sec, 18.541 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516655, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 388, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (870.83, 897.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1272, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (1500.76, 822.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 329.090 CPU sec, 19.052 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517483, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 840, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2636)
[0000][PE] mean and std.dev: (823.12, 532.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1339, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5238)
[0000][PE] mean and std.dev: (1485.43, 1010.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 323.253 CPU sec, 18.285 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517380, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 733, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3236)
[0000][PE] mean and std.dev: (839.33, 716.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1306, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4482)
[0000][PE] mean and std.dev: (1385.53, 798.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 327.473 CPU sec, 19.341 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516935, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 412, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5471)
[0000][PE] mean and std.dev: (857.45, 940.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.32, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1162, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6398)
[0000][PE] mean and std.dev: (1537.25, 944.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 323.309 CPU sec, 18.478 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516504, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 448, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (961.43, 877.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1559, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5369)
[0000][PE] mean and std.dev: (1819.44, 1444.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 321.684 CPU sec, 18.572 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517140, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 856, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3658)
[0000][PE] mean and std.dev: (993.73, 844.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1502, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (1386.70, 788.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 323.680 CPU sec, 18.691 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517116, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 856, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6161)
[0000][PE] mean and std.dev: (1237.74, 1148.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1439, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (1581.24, 1059.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 324.009 CPU sec, 18.539 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516589, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 442, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (631.19, 497.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1165, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (1042.60, 373.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 328.792 CPU sec, 18.782 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517160, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 452, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (786.15, 727.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1335, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (1632.64, 1201.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 325.332 CPU sec, 18.732 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517323, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 963, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1098.52, 884.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 1346, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (1469.72, 1110.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 322.246 CPU sec, 18.519 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517232, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 679, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (905.24, 763.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1189, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (1284.07, 713.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 327.275 CPU sec, 18.663 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517401, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 376, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (690.96, 759.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1255, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1316.28, 774.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 324.731 CPU sec, 18.816 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516866, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 562, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5167)
[0000][PE] mean and std.dev: (1198.28, 1052.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1239, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (1349.81, 727.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 324.591 CPU sec, 18.775 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516948, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 515, 3027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8617)
[0000][PE] mean and std.dev: (1396.57, 1583.91)
[0000][PE] low and high boundaries for proper pairs: (1, 11412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1174, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5386)
[0000][PE] mean and std.dev: (1398.82, 919.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 325.119 CPU sec, 18.725 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516502, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 309, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (594.88, 652.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.46, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1375, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1416.83, 720.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 326.268 CPU sec, 18.659 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516963, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 574, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (632.48, 485.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1619, 3192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7446)
[0000][PE] mean and std.dev: (2037.48, 1374.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 324.661 CPU sec, 18.542 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516914, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (834, 1518, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5637)
[0000][PE] mean and std.dev: (1609.30, 1130.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1745, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5389)
[0000][PE] mean and std.dev: (1831.77, 1039.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 325.309 CPU sec, 18.590 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517007, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 752, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2469)
[0000][PE] mean and std.dev: (679.64, 469.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 2014, 3273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7857)
[0000][PE] mean and std.dev: (2139.00, 1424.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 325.527 CPU sec, 18.585 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517022, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 904, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4764)
[0000][PE] mean and std.dev: (1101.95, 836.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.21, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 2077, 2586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (1770.87, 750.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 323.619 CPU sec, 18.482 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517124, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 1015, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (1131.82, 977.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1279, 3023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7009)
[0000][PE] mean and std.dev: (2074.67, 1483.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 328.425 CPU sec, 18.750 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516918, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 822, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4505)
[0000][PE] mean and std.dev: (1100.09, 1027.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1489, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (1116.58, 629.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 325.669 CPU sec, 18.411 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517106, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 642, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (814.00, 661.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1502, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6074)
[0000][PE] mean and std.dev: (1876.65, 1419.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 326.214 CPU sec, 18.307 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516806, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1191, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4056)
[0000][PE] mean and std.dev: (981.68, 748.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.34, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1513, 4214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10396)
[0000][PE] mean and std.dev: (2646.53, 2489.78)
[0000][PE] low and high boundaries for proper pairs: (1, 13487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 324.361 CPU sec, 18.222 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517187, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 721, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (966.10, 917.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.76, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1488, 2332, 2704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5136)
[0000][PE] mean and std.dev: (2019.52, 909.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 321.861 CPU sec, 18.094 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517075, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 928, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4601)
[0000][PE] mean and std.dev: (805.55, 621.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.22, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1170, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (1404.46, 815.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 325.085 CPU sec, 18.254 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517099, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (539, 1094, 2953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7781)
[0000][PE] mean and std.dev: (1575.78, 1510.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1338, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (1187.07, 564.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 323.134 CPU sec, 18.277 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516687, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 527, 3035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8569)
[0000][PE] mean and std.dev: (1310.47, 1508.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1930, 3572, 4236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8848)
[0000][PE] mean and std.dev: (2487.62, 1502.50)
[0000][PE] low and high boundaries for proper pairs: (1, 11154)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1343, 2020, 3844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8846)
[0000][PE] mean and std.dev: (2750.72, 2330.84)
[0000][PE] low and high boundaries for proper pairs: (1, 12074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 324.836 CPU sec, 18.572 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516845, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 440, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (774.58, 723.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1513, 2056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1589.60, 869.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 325.293 CPU sec, 18.546 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517031, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 1069, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (1111.44, 1110.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1423, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (1395.50, 730.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 328.756 CPU sec, 18.949 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516738, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (701, 1519, 2329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5585)
[0000][PE] mean and std.dev: (1529.25, 1224.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1372, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5368)
[0000][PE] mean and std.dev: (1463.57, 899.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 324.065 CPU sec, 18.197 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516806, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 652, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4436)
[0000][PE] mean and std.dev: (993.71, 984.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.17, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1359, 1585, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4560)
[0000][PE] mean and std.dev: (1687.06, 864.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 323.062 CPU sec, 18.153 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517259, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 484, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (811.00, 773.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (516, 1406, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6120)
[0000][PE] mean and std.dev: (1597.21, 1226.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 320.685 CPU sec, 18.000 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517396, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 292, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (604.70, 695.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (749, 3001, 6210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17132)
[0000][PE] mean and std.dev: (3755.60, 2867.60)
[0000][PE] low and high boundaries for proper pairs: (1, 22593)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1666, 3246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7446)
[0000][PE] mean and std.dev: (1860.89, 1184.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 323.143 CPU sec, 18.171 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516720, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 688, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4884)
[0000][PE] mean and std.dev: (1116.85, 1136.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1253, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (178, 2448)
[0000][PE] mean and std.dev: (1182.33, 407.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 325.211 CPU sec, 18.295 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516674, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 815, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (949.84, 687.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1156, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4530)
[0000][PE] mean and std.dev: (1506.67, 1095.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 325.776 CPU sec, 18.316 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517007, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 438, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1628)
[0000][PE] mean and std.dev: (371.71, 266.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 903, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4227)
[0000][PE] mean and std.dev: (1189.43, 863.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 320.964 CPU sec, 18.300 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517158, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 388, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5723)
[0000][PE] mean and std.dev: (1033.10, 1172.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1394, 1533, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (8, 3473)
[0000][PE] mean and std.dev: (1587.11, 781.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 320.606 CPU sec, 18.372 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517289, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 493, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (720.40, 652.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.17, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1366, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (1415.31, 553.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 320.425 CPU sec, 18.289 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516780, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 485, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4690)
[0000][PE] mean and std.dev: (1021.68, 1140.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1500, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (1547.93, 769.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 324.226 CPU sec, 18.639 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516842, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 743, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (895.70, 702.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1276, 3568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8600)
[0000][PE] mean and std.dev: (1874.24, 1221.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 322.353 CPU sec, 18.333 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516822, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 1022, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (1007.81, 833.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1588, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6385)
[0000][PE] mean and std.dev: (1964.70, 1347.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 324.198 CPU sec, 18.530 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516921, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 761, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4625)
[0000][PE] mean and std.dev: (992.04, 897.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1064, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (1014.33, 556.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 320.819 CPU sec, 18.197 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516968, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 985, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (1090.05, 972.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1773, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (1478.20, 445.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 325.025 CPU sec, 18.697 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517055, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 547, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1707)
[0000][PE] mean and std.dev: (432.38, 229.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1516, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5475)
[0000][PE] mean and std.dev: (1625.81, 758.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 325.406 CPU sec, 18.674 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516487, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 444, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (584.50, 506.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1373, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5534)
[0000][PE] mean and std.dev: (1480.11, 1177.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 322.060 CPU sec, 18.411 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516812, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 880, 2670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7260)
[0000][PE] mean and std.dev: (1362.95, 1421.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.76, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1736, 2552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5498)
[0000][PE] mean and std.dev: (1775.25, 998.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 322.103 CPU sec, 18.670 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516920, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 835, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1039.65, 842.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1423, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6290)
[0000][PE] mean and std.dev: (1873.93, 1514.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 321.763 CPU sec, 18.366 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516997, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 386, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2161)
[0000][PE] mean and std.dev: (507.81, 447.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1409, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5534)
[0000][PE] mean and std.dev: (1812.18, 1325.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 323.058 CPU sec, 18.485 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516783, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 909, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (886.84, 682.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1480, 1671, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3991)
[0000][PE] mean and std.dev: (1856.15, 660.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 324.216 CPU sec, 18.459 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517165, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1211, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1361.90, 1007.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1372, 2645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5959)
[0000][PE] mean and std.dev: (1718.88, 1129.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 321.046 CPU sec, 18.314 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516956, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 450, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (944.14, 955.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1659, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1791.20, 901.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 325.564 CPU sec, 18.557 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517057, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 690, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (988.30, 880.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1526, 1788, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4496)
[0000][PE] mean and std.dev: (1666.75, 786.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 323.029 CPU sec, 18.326 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516979, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 319, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (649.36, 678.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.75, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1078, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (969.29, 464.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 323.299 CPU sec, 18.392 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517138, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 422, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (783.13, 840.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1372, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (1630.24, 923.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 320.656 CPU sec, 18.452 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516741, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 781, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3329)
[0000][PE] mean and std.dev: (950.38, 792.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1087, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3662)
[0000][PE] mean and std.dev: (1237.41, 638.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 321.691 CPU sec, 18.347 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516867, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 780, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3436)
[0000][PE] mean and std.dev: (873.86, 638.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1299, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1359.94, 922.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 321.284 CPU sec, 18.033 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517225, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 545, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4965)
[0000][PE] mean and std.dev: (1224.12, 1504.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.74, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1142, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (1152.41, 506.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 324.219 CPU sec, 18.233 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516626, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 528, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (906.50, 802.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1250, 1424, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (308, 2663)
[0000][PE] mean and std.dev: (1503.88, 409.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 320.477 CPU sec, 18.000 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517232, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 440, 771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1541)
[0000][PE] mean and std.dev: (452.48, 233.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1200, 2779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6577)
[0000][PE] mean and std.dev: (1952.42, 1697.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 319.195 CPU sec, 17.986 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517143, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 908, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4201)
[0000][PE] mean and std.dev: (1086.93, 838.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1412, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (1548.20, 641.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 323.060 CPU sec, 18.423 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517014, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 821, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6634)
[0000][PE] mean and std.dev: (1458.48, 1508.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1264, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (1474.50, 764.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 322.624 CPU sec, 18.474 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517147, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 820, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4866)
[0000][PE] mean and std.dev: (1198.19, 1048.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.43, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1343, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (1348.55, 618.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 323.048 CPU sec, 18.364 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516758, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (519, 709, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (891.11, 680.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.73, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1208, 3834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9700)
[0000][PE] mean and std.dev: (1920.54, 1523.79)
[0000][PE] low and high boundaries for proper pairs: (1, 12633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 326.052 CPU sec, 18.786 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516832, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 516, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (713.13, 638.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.73, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (500, 1180, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1210.50, 871.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 322.389 CPU sec, 18.280 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517392, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 505, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (931.46, 805.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1423, 1788, 4031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9247)
[0000][PE] mean and std.dev: (2443.77, 1502.66)
[0000][PE] low and high boundaries for proper pairs: (1, 11855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 324.932 CPU sec, 18.583 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516645, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 661, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3278)
[0000][PE] mean and std.dev: (723.04, 524.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.70, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1396, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (1279.05, 643.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 328.225 CPU sec, 18.716 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517196, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 441, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1254)
[0000][PE] mean and std.dev: (476.29, 349.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1750, 3842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9438)
[0000][PE] mean and std.dev: (2181.75, 1444.13)
[0000][PE] low and high boundaries for proper pairs: (1, 12236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 322.305 CPU sec, 18.085 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517118, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 1038, 2832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7906)
[0000][PE] mean and std.dev: (1687.11, 1832.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1948, 3455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8389)
[0000][PE] mean and std.dev: (2392.75, 2106.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 318.412 CPU sec, 17.920 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517221, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 511, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2319)
[0000][PE] mean and std.dev: (572.67, 426.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1196, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (912.42, 400.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 320.000 CPU sec, 17.976 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517147, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 672, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (835.79, 785.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1412, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5902)
[0000][PE] mean and std.dev: (1560.18, 1149.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 320.958 CPU sec, 18.005 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516927, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 878, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (903.55, 677.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (672, 1028, 2735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6861)
[0000][PE] mean and std.dev: (1519.00, 1157.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 321.268 CPU sec, 18.053 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517081, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 417, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (628.78, 573.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.95, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1059, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2540)
[0000][PE] mean and std.dev: (947.93, 426.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 317.219 CPU sec, 17.862 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516554, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 467, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (865.34, 881.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1195, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (1250.17, 526.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 321.319 CPU sec, 18.112 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516764, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 763, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (745.95, 710.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.20, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1240, 2969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7313)
[0000][PE] mean and std.dev: (1625.48, 1233.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 319.293 CPU sec, 17.935 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517367, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1364, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (1111.19, 786.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1344, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (1164.00, 625.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 324.022 CPU sec, 18.194 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516775, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 946, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (971.72, 673.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1315, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4941)
[0000][PE] mean and std.dev: (1538.12, 948.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 324.365 CPU sec, 18.184 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517061, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 524, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (649.61, 489.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1022, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5851)
[0000][PE] mean and std.dev: (1461.29, 848.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 322.184 CPU sec, 18.066 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516955, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 456, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (905.71, 857.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1331, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (1377.05, 716.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 320.379 CPU sec, 18.013 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517058, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 779, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (755.55, 608.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1062, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (1170.25, 480.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 322.093 CPU sec, 18.261 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516876, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 598, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (701.74, 437.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1135, 2591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6293)
[0000][PE] mean and std.dev: (1343.05, 974.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 323.032 CPU sec, 18.098 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517093, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 461, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5187)
[0000][PE] mean and std.dev: (888.40, 861.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1284, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (1302.33, 710.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 314.016 CPU sec, 17.617 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517250, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 586, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4393)
[0000][PE] mean and std.dev: (1026.62, 985.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.71, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1520, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1569.65, 830.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 317.887 CPU sec, 17.812 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516906, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 675, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2417)
[0000][PE] mean and std.dev: (726.04, 542.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.17, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1235, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3282)
[0000][PE] mean and std.dev: (1291.39, 696.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 319.458 CPU sec, 17.924 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517204, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 616, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (1106.54, 1224.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1306, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4353)
[0000][PE] mean and std.dev: (1431.00, 758.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 320.149 CPU sec, 17.964 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517042, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 385, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (789.50, 839.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 897, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5318)
[0000][PE] mean and std.dev: (1360.53, 882.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 316.657 CPU sec, 17.760 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517377, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 415, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (612.89, 439.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1377, 1775, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (1675.47, 750.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 318.866 CPU sec, 17.884 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516842, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 518, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1108.70, 1127.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1260, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5729)
[0000][PE] mean and std.dev: (1585.33, 1066.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 322.736 CPU sec, 18.093 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517292, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 633, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (788.36, 603.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1687, 2949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7205)
[0000][PE] mean and std.dev: (1878.72, 1219.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 318.310 CPU sec, 17.857 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517064, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 614, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2153)
[0000][PE] mean and std.dev: (604.90, 499.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 2365, 3135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7853)
[0000][PE] mean and std.dev: (2165.23, 1413.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 321.947 CPU sec, 18.094 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516685, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 526, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (1057.67, 1116.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1838, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (1519.28, 465.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 322.747 CPU sec, 18.105 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517013, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 509, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (968.06, 965.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1285, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1631.24, 1180.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 317.594 CPU sec, 17.817 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516588, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 827, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3653)
[0000][PE] mean and std.dev: (947.48, 837.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1183, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (1398.85, 938.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 319.699 CPU sec, 17.946 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517156, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 396, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2446)
[0000][PE] mean and std.dev: (555.62, 475.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1392, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (1122.50, 481.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 317.902 CPU sec, 17.816 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516547, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 510, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1244.62, 1418.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1330, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (250, 2575)
[0000][PE] mean and std.dev: (1278.90, 249.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 323.837 CPU sec, 18.161 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516925, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 994, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7183)
[0000][PE] mean and std.dev: (1522.18, 1199.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1681, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (173, 2708)
[0000][PE] mean and std.dev: (1472.38, 418.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 319.618 CPU sec, 17.971 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517286, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 574, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (868.74, 645.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 1708, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (1603.20, 563.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 318.932 CPU sec, 17.875 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516806, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 525, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (1005.79, 1010.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1389, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (231, 2611)
[0000][PE] mean and std.dev: (1372.60, 340.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 321.265 CPU sec, 18.014 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517123, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 578, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5060)
[0000][PE] mean and std.dev: (1041.41, 1035.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1585, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5325)
[0000][PE] mean and std.dev: (1787.10, 1088.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 323.195 CPU sec, 18.109 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516705, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 420, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (702.75, 679.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1190, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (1181.53, 652.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 321.172 CPU sec, 18.003 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517145, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 674, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (901.42, 624.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1316, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (1667.86, 953.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 319.889 CPU sec, 17.931 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517062, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (649, 1545, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4309)
[0000][PE] mean and std.dev: (1394.04, 817.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1681, 2884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6654)
[0000][PE] mean and std.dev: (1807.00, 1055.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 315.453 CPU sec, 17.722 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517425, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 905, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (889.48, 610.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.17, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1112, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (1051.64, 485.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 322.285 CPU sec, 18.072 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516649, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 707, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4037)
[0000][PE] mean and std.dev: (849.78, 646.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1296, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (1251.56, 575.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 320.391 CPU sec, 17.995 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517094, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 351, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1095)
[0000][PE] mean and std.dev: (342.95, 140.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.26, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1674, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (1693.21, 1053.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 320.052 CPU sec, 17.937 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516845, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 749, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (991.61, 877.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1242, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (1226.00, 690.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 322.275 CPU sec, 18.050 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517153, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 721, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2902)
[0000][PE] mean and std.dev: (842.06, 591.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1380, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (1328.24, 643.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 322.684 CPU sec, 18.099 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516440, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 436, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2117)
[0000][PE] mean and std.dev: (611.92, 477.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1452, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (1145.00, 451.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 323.028 CPU sec, 18.114 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517039, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 449, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (748.71, 667.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1395, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1450.68, 849.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 322.028 CPU sec, 18.075 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516749, 11, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 726, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (910.25, 712.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1408, 2803, 4269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9991)
[0000][PE] mean and std.dev: (2681.45, 1899.23)
[0000][PE] low and high boundaries for proper pairs: (1, 12852)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 910, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4237)
[0000][PE] mean and std.dev: (1128.56, 733.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 326.544 CPU sec, 18.325 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516813, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 1026, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (842.41, 728.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1274, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5238)
[0000][PE] mean and std.dev: (1480.57, 633.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 317.357 CPU sec, 17.812 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517012, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 614, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (801.22, 724.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1288, 2959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6707)
[0000][PE] mean and std.dev: (1849.20, 1444.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 317.589 CPU sec, 17.792 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516929, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1063, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (1029.15, 909.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1334, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (1416.00, 896.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 321.748 CPU sec, 18.055 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517338, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 360, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1511)
[0000][PE] mean and std.dev: (457.94, 369.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1043, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2772)
[0000][PE] mean and std.dev: (995.71, 359.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 320.165 CPU sec, 17.928 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517297, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 934, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (884.65, 550.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 1033, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (1157.07, 865.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 318.734 CPU sec, 17.870 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517273, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 574, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5527)
[0000][PE] mean and std.dev: (1112.45, 1051.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1439, 1639, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (145, 3380)
[0000][PE] mean and std.dev: (1572.71, 473.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 318.063 CPU sec, 17.820 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517229, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 571, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2950)
[0000][PE] mean and std.dev: (645.64, 448.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1224, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5326)
[0000][PE] mean and std.dev: (1556.24, 997.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 321.913 CPU sec, 18.074 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517083, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 518, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (672.22, 503.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 1086, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (1002.35, 593.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 319.965 CPU sec, 17.948 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516532, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 533, 2589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7411)
[0000][PE] mean and std.dev: (694.71, 741.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1233, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (1279.72, 883.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 319.083 CPU sec, 17.862 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517048, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 761, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3986)
[0000][PE] mean and std.dev: (1075.00, 898.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.82, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 1227, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (1274.76, 836.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 321.550 CPU sec, 18.032 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517143, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 1004, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (950.00, 649.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 320.849 CPU sec, 17.983 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516802, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 447, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3525)
[0000][PE] mean and std.dev: (744.80, 619.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1813, 3530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7992)
[0000][PE] mean and std.dev: (2398.24, 1850.29)
[0000][PE] low and high boundaries for proper pairs: (1, 10223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 320.016 CPU sec, 17.959 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517098, 2, 37)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 853, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5010)
[0000][PE] mean and std.dev: (1291.07, 1218.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1388, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4104)
[0000][PE] mean and std.dev: (1294.78, 756.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 319.831 CPU sec, 17.982 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516754, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1057, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6244)
[0000][PE] mean and std.dev: (1143.05, 1105.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.67, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 1364, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (1410.60, 873.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 320.632 CPU sec, 17.996 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516506, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 712, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (1042.22, 872.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.28, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (442, 1046, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (1217.56, 889.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 321.576 CPU sec, 18.024 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516707, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 566, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (870.92, 779.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1548, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4194)
[0000][PE] mean and std.dev: (1497.68, 732.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 322.229 CPU sec, 18.066 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517208, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 325, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (745.59, 725.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1298, 3450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8554)
[0000][PE] mean and std.dev: (1989.69, 1820.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 317.758 CPU sec, 17.817 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517115, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 700, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3759)
[0000][PE] mean and std.dev: (876.00, 770.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.35, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1426, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (1216.40, 534.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 319.348 CPU sec, 17.884 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517458, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 381, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2419)
[0000][PE] mean and std.dev: (658.32, 674.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1253, 1713, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5579)
[0000][PE] mean and std.dev: (1827.17, 1003.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 323.081 CPU sec, 18.139 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517194, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 431, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (786.81, 803.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1765, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (1444.20, 793.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 321.064 CPU sec, 18.002 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517203, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 500, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (761.90, 717.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (467, 927, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5738)
[0000][PE] mean and std.dev: (1178.70, 1062.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 319.820 CPU sec, 17.986 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516859, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 679, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (973.24, 740.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.79, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1708, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (1752.64, 719.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 322.434 CPU sec, 18.087 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516910, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 499, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2386)
[0000][PE] mean and std.dev: (632.50, 643.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1169, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (1533.41, 1103.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 321.502 CPU sec, 18.030 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516789, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 413, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1873)
[0000][PE] mean and std.dev: (516.90, 437.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1276, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5734)
[0000][PE] mean and std.dev: (1379.82, 631.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 321.013 CPU sec, 18.001 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517156, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 502, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (763.78, 637.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.31, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1396, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4729)
[0000][PE] mean and std.dev: (1238.00, 527.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 321.022 CPU sec, 18.016 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516614, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 901, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3539)
[0000][PE] mean and std.dev: (746.58, 616.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 1484, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5071)
[0000][PE] mean and std.dev: (1214.00, 761.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 322.700 CPU sec, 18.081 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517377, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 910, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (1067.23, 842.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.00, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1490, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (1451.57, 486.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 318.017 CPU sec, 17.818 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517174, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 772, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (910.92, 742.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.81, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1258, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (1115.84, 611.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 321.729 CPU sec, 18.074 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516928, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 404, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (672.56, 604.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1670, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1599.19, 1012.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 319.535 CPU sec, 17.941 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517147, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 438, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1718)
[0000][PE] mean and std.dev: (516.07, 385.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.99, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1346, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (1360.26, 673.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 321.561 CPU sec, 18.046 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517112, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 643, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (640.12, 454.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1494, 1797, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (2117.00, 1183.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 317.173 CPU sec, 17.805 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517523, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 377, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (725.84, 591.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.96, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1168, 1826, 3362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7750)
[0000][PE] mean and std.dev: (2162.31, 1400.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 316.453 CPU sec, 17.736 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516648, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 687, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (884.23, 713.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.79, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1459, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4745)
[0000][PE] mean and std.dev: (1472.35, 888.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 325.230 CPU sec, 18.263 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517408, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 422, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2267)
[0000][PE] mean and std.dev: (483.77, 461.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.79, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1300, 1350, 3918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9154)
[0000][PE] mean and std.dev: (2217.77, 1822.30)
[0000][PE] low and high boundaries for proper pairs: (1, 11772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 318.412 CPU sec, 17.855 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516856, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 842, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3747)
[0000][PE] mean and std.dev: (840.10, 688.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.59, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 1096, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (1022.78, 653.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 320.729 CPU sec, 17.969 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516911, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 640, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (727.96, 474.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1290, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (1313.82, 497.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 320.003 CPU sec, 17.949 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517236, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 819, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5911)
[0000][PE] mean and std.dev: (1175.15, 1344.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1169, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (1168.21, 545.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 318.762 CPU sec, 17.908 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516597, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 709, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (1020.76, 1182.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1625, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1597.69, 830.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 322.090 CPU sec, 18.041 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516981, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 812, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4578)
[0000][PE] mean and std.dev: (1292.30, 1339.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1680, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1659.36, 826.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 320.775 CPU sec, 18.015 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516330, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 558, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (841.27, 654.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1288, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4196)
[0000][PE] mean and std.dev: (1641.33, 926.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 322.006 CPU sec, 18.061 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516675, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 917, 2764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7616)
[0000][PE] mean and std.dev: (1507.29, 1458.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.17, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1195, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (1440.50, 517.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 322.634 CPU sec, 18.101 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516964, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 479, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (686.74, 650.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.73, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1257, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5046)
[0000][PE] mean and std.dev: (1508.33, 950.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 320.793 CPU sec, 17.988 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516990, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 437, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (923.86, 943.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.24, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1512, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4368)
[0000][PE] mean and std.dev: (1563.68, 875.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 320.480 CPU sec, 17.979 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517124, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 850, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5110)
[0000][PE] mean and std.dev: (1265.53, 1083.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 1402, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5225)
[0000][PE] mean and std.dev: (1531.30, 974.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 322.096 CPU sec, 18.099 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516958, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 712, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4158)
[0000][PE] mean and std.dev: (985.94, 896.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.71, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1244, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1431.91, 912.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 323.405 CPU sec, 18.157 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517127, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 348, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2256)
[0000][PE] mean and std.dev: (480.21, 378.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1121, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (1554.62, 1069.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 318.795 CPU sec, 17.892 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517208, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 442, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2477)
[0000][PE] mean and std.dev: (602.53, 610.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.84, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1308, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (1513.83, 972.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 321.279 CPU sec, 18.008 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517276, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 840, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3669)
[0000][PE] mean and std.dev: (911.35, 866.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1004, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (1137.13, 657.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 323.038 CPU sec, 18.128 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516477, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 360, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (645.96, 548.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.63, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1377, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (1404.00, 714.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 323.154 CPU sec, 18.138 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516793, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 948, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (1290.94, 1245.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.31, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1308, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4085)
[0000][PE] mean and std.dev: (1103.14, 543.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 320.971 CPU sec, 17.993 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516435, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 793, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3373)
[0000][PE] mean and std.dev: (867.32, 548.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1430, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5695)
[0000][PE] mean and std.dev: (1585.82, 1059.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 325.177 CPU sec, 18.238 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517199, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 629, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (678.56, 581.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.26, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1321, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5124)
[0000][PE] mean and std.dev: (1151.20, 632.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 324.141 CPU sec, 18.199 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517035, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 872, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4441)
[0000][PE] mean and std.dev: (1075.81, 917.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1883, 3327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7983)
[0000][PE] mean and std.dev: (2085.30, 1603.01)
[0000][PE] low and high boundaries for proper pairs: (1, 10311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 318.337 CPU sec, 17.890 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517130, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 379, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1746)
[0000][PE] mean and std.dev: (412.29, 263.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (487, 1219, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4690)
[0000][PE] mean and std.dev: (1311.62, 939.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 321.760 CPU sec, 18.071 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516551, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 522, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2674)
[0000][PE] mean and std.dev: (625.64, 572.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.73, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (300, 2393, 3733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10599)
[0000][PE] mean and std.dev: (2437.80, 2441.02)
[0000][PE] low and high boundaries for proper pairs: (1, 14032)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1760, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4345)
[0000][PE] mean and std.dev: (1599.78, 757.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 326.209 CPU sec, 18.274 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517223, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 382, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2005)
[0000][PE] mean and std.dev: (431.04, 424.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1225, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (1470.21, 723.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 320.975 CPU sec, 17.983 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517225, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 539, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5260)
[0000][PE] mean and std.dev: (1144.25, 1197.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1199, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (72, 2192)
[0000][PE] mean and std.dev: (1014.87, 312.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 319.390 CPU sec, 17.943 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517372, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 343, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2975)
[0000][PE] mean and std.dev: (489.57, 512.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1956, 3037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7179)
[0000][PE] mean and std.dev: (2223.35, 1656.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 321.313 CPU sec, 18.020 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516597, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 893, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (910.22, 856.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1406, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (1290.14, 518.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 325.964 CPU sec, 18.285 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517219, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 720, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4361)
[0000][PE] mean and std.dev: (859.33, 616.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1179, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (1446.40, 874.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 320.754 CPU sec, 17.989 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516729, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 993, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (1047.36, 831.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 839, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4862)
[0000][PE] mean and std.dev: (872.43, 624.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 319.869 CPU sec, 17.946 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517193, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 450, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2323)
[0000][PE] mean and std.dev: (581.68, 447.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.79, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1492, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4496)
[0000][PE] mean and std.dev: (1473.17, 711.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 324.297 CPU sec, 18.198 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517048, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 604, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3866)
[0000][PE] mean and std.dev: (825.65, 690.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 999, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6462)
[0000][PE] mean and std.dev: (1349.07, 1158.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 319.847 CPU sec, 17.964 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516758, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 453, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5067)
[0000][PE] mean and std.dev: (944.48, 1047.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 1985, 2684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5564)
[0000][PE] mean and std.dev: (1936.93, 736.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 321.264 CPU sec, 18.029 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517155, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 265, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (935.87, 1162.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1339, 2779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6395)
[0000][PE] mean and std.dev: (1735.62, 1368.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 320.943 CPU sec, 18.012 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516388, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 804, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5060)
[0000][PE] mean and std.dev: (1402.57, 1361.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1645, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (1688.00, 833.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 321.061 CPU sec, 17.980 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516891, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1043, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7740)
[0000][PE] mean and std.dev: (1525.20, 1614.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1728, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5571)
[0000][PE] mean and std.dev: (1766.52, 1064.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 325.253 CPU sec, 18.253 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516950, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 880, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (881.43, 686.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (660, 899, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1309.47, 928.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 319.309 CPU sec, 17.923 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517014, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 695, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6408)
[0000][PE] mean and std.dev: (1125.43, 996.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1589, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (1484.44, 521.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 324.032 CPU sec, 18.194 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516511, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 629, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (776.45, 523.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.68, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1390, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4229)
[0000][PE] mean and std.dev: (1379.65, 751.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 324.227 CPU sec, 18.183 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516757, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 475, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2610)
[0000][PE] mean and std.dev: (686.76, 474.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1532, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7464)
[0000][PE] mean and std.dev: (1988.32, 1230.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 317.576 CPU sec, 17.832 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517203, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 751, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (755.19, 482.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.65, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 1200, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3871)
[0000][PE] mean and std.dev: (1167.09, 628.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 317.409 CPU sec, 17.802 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516860, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 842, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (987.65, 872.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.74, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1500, 3892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10388)
[0000][PE] mean and std.dev: (2296.29, 2496.07)
[0000][PE] low and high boundaries for proper pairs: (1, 13636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 321.722 CPU sec, 18.036 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516868, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 567, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (967.95, 834.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (616, 1432, 2403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5977)
[0000][PE] mean and std.dev: (1639.19, 1290.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 323.961 CPU sec, 18.164 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517218, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 862, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7507)
[0000][PE] mean and std.dev: (1664.45, 1782.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1332, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (46, 2876)
[0000][PE] mean and std.dev: (1352.00, 560.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 318.385 CPU sec, 17.870 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516581, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 454, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (692.87, 577.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1506, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5395)
[0000][PE] mean and std.dev: (1535.17, 828.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 318.632 CPU sec, 17.851 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517188, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 843, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (709.95, 495.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1435, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1450.46, 823.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 320.545 CPU sec, 17.967 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516812, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 952, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (1093.33, 895.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1440, 2036, 2761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5403)
[0000][PE] mean and std.dev: (1807.10, 550.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 319.621 CPU sec, 17.924 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517325, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 583, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5314)
[0000][PE] mean and std.dev: (1147.37, 1043.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1742, 2810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6302)
[0000][PE] mean and std.dev: (1856.74, 978.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 316.033 CPU sec, 17.721 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517092, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 835, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5882)
[0000][PE] mean and std.dev: (1275.87, 1219.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1620, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (1726.12, 798.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 315.380 CPU sec, 17.668 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516627, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 381, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2306)
[0000][PE] mean and std.dev: (398.20, 318.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1136, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (1172.20, 474.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 323.851 CPU sec, 18.168 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517158, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 892, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (1072.96, 901.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.43, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1395, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4948)
[0000][PE] mean and std.dev: (1547.75, 764.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 318.527 CPU sec, 17.839 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516443, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 387, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1726)
[0000][PE] mean and std.dev: (407.00, 240.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1425, 2959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7343)
[0000][PE] mean and std.dev: (1927.38, 1657.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 320.062 CPU sec, 17.932 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516717, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 640, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (851.25, 879.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1277, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (1244.00, 488.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 316.049 CPU sec, 17.697 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517265, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1037, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4838)
[0000][PE] mean and std.dev: (1071.21, 777.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 1005, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (1054.94, 557.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 318.846 CPU sec, 17.887 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517133, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 838, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (996.15, 965.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1560, 1667, 2684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (1782.79, 744.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 318.354 CPU sec, 17.847 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516412, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (553, 1142, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (1083.50, 916.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1598, 2800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6274)
[0000][PE] mean and std.dev: (1821.28, 1291.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 314.461 CPU sec, 17.604 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516972, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 457, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (906.62, 801.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1412, 3169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7437)
[0000][PE] mean and std.dev: (1578.67, 1027.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 313.449 CPU sec, 17.576 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516924, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 513, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4785)
[0000][PE] mean and std.dev: (885.10, 750.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1362, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (1520.92, 771.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 319.835 CPU sec, 17.924 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516990, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 654, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (814.44, 662.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1313, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (1315.58, 747.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 320.116 CPU sec, 17.930 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517017, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 552, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4941)
[0000][PE] mean and std.dev: (938.36, 927.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1730, 3052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6792)
[0000][PE] mean and std.dev: (1887.44, 1211.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 315.901 CPU sec, 17.702 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516665, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 631, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (796.53, 666.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1609, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1792.38, 945.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 317.520 CPU sec, 17.793 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517049, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 517, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (702.36, 543.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.20, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1262, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (57, 2507)
[0000][PE] mean and std.dev: (1124.27, 478.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 321.196 CPU sec, 17.998 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516744, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 723, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (788.89, 804.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1354, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3871)
[0000][PE] mean and std.dev: (1309.70, 647.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 316.024 CPU sec, 17.701 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516880, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 492, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (900.44, 879.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1293, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (1155.41, 542.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 319.072 CPU sec, 17.919 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517142, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 551, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (669.16, 504.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1491, 2937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6699)
[0000][PE] mean and std.dev: (2048.35, 1492.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 316.158 CPU sec, 17.801 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516815, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 774, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (760.78, 655.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1812, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6308)
[0000][PE] mean and std.dev: (1745.00, 1139.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 319.339 CPU sec, 17.866 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516923, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 503, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (828.41, 812.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1294, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (1572.12, 1049.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 315.248 CPU sec, 17.650 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516892, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 891, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (977.55, 794.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.63, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1614, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5029)
[0000][PE] mean and std.dev: (1700.82, 958.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 322.324 CPU sec, 18.134 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517374, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (513, 936, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3225)
[0000][PE] mean and std.dev: (821.65, 509.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1331, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1490.48, 888.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 314.351 CPU sec, 17.606 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517006, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 743, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (925.85, 736.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1634, 3004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6728)
[0000][PE] mean and std.dev: (1970.47, 1455.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 318.058 CPU sec, 17.823 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517180, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 617, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1065.22, 1103.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1526, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1541.00, 1022.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 315.842 CPU sec, 17.697 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516564, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 413, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2609)
[0000][PE] mean and std.dev: (538.72, 434.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1138, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (1254.06, 519.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 320.308 CPU sec, 18.050 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517031, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 697, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (876.38, 753.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.93, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1873, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5464)
[0000][PE] mean and std.dev: (1702.62, 859.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 317.181 CPU sec, 17.782 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517411, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1221, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (940.27, 761.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1517, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4467)
[0000][PE] mean and std.dev: (1875.08, 873.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 316.485 CPU sec, 17.748 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516970, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 999, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6236)
[0000][PE] mean and std.dev: (1398.21, 1335.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.75, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1663, 1959, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4720)
[0000][PE] mean and std.dev: (1867.86, 683.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 315.189 CPU sec, 17.675 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517155, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 611, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2720)
[0000][PE] mean and std.dev: (719.80, 561.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1180, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4041)
[0000][PE] mean and std.dev: (1452.88, 754.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 320.468 CPU sec, 17.991 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517126, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 564, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (870.12, 794.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1347, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5439)
[0000][PE] mean and std.dev: (1841.06, 1348.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 315.519 CPU sec, 17.678 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516992, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (846, 1039, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2667)
[0000][PE] mean and std.dev: (1120.74, 662.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 316.608 CPU sec, 17.801 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516523, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 782, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (875.22, 745.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1272, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6114)
[0000][PE] mean and std.dev: (1651.50, 1042.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 320.480 CPU sec, 17.964 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517113, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 373, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (567.96, 520.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.73, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1192, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1310.89, 779.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 316.367 CPU sec, 17.789 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517182, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 673, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (814.15, 632.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1459, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5248)
[0000][PE] mean and std.dev: (1569.50, 1129.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 315.143 CPU sec, 17.663 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517115, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 832, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5013)
[0000][PE] mean and std.dev: (1074.40, 974.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1347, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1458.90, 711.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 313.041 CPU sec, 17.562 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516966, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 507, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2697)
[0000][PE] mean and std.dev: (660.61, 515.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1637, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1456.64, 585.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 321.085 CPU sec, 18.002 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517200, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 889, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (1024.16, 947.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.97, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1543, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (1536.53, 1098.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 320.582 CPU sec, 17.957 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516766, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 715, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (970.27, 855.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 996, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3843)
[0000][PE] mean and std.dev: (1200.29, 700.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 319.651 CPU sec, 17.946 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516304, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 395, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (767.00, 628.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1305, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (1203.38, 734.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 316.760 CPU sec, 17.748 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517020, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 413, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (756.19, 811.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1350, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3212)
[0000][PE] mean and std.dev: (1282.37, 578.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 319.249 CPU sec, 17.898 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516754, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 498, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (707.46, 533.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1154, 2479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5777)
[0000][PE] mean and std.dev: (1498.50, 1164.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 319.573 CPU sec, 17.883 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517158, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 415, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (653.67, 530.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1090, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3180)
[0000][PE] mean and std.dev: (1275.06, 577.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 317.006 CPU sec, 17.752 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517197, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 458, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2563)
[0000][PE] mean and std.dev: (675.36, 614.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 1110, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (1024.83, 648.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 315.114 CPU sec, 17.627 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517019, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 520, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (571.65, 503.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 312.187 CPU sec, 17.490 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517127, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 335, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (632.00, 578.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1509, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5045)
[0000][PE] mean and std.dev: (1682.55, 1080.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 308.568 CPU sec, 17.295 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516525, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 505, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2243)
[0000][PE] mean and std.dev: (629.42, 437.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1653, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5043)
[0000][PE] mean and std.dev: (1733.12, 963.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 310.914 CPU sec, 17.423 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516917, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 633, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (873.57, 749.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1329, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2899)
[0000][PE] mean and std.dev: (1324.06, 589.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 307.522 CPU sec, 17.256 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516797, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 643, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (734.52, 628.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1083, 4507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11811)
[0000][PE] mean and std.dev: (2173.69, 2016.48)
[0000][PE] low and high boundaries for proper pairs: (1, 15463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 311.868 CPU sec, 17.516 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517309, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1135, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5405)
[0000][PE] mean and std.dev: (1035.22, 819.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.96, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1178, 2853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6997)
[0000][PE] mean and std.dev: (1841.88, 1444.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 310.553 CPU sec, 17.457 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516558, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 754, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (1014.76, 891.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 2326, 3172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7156)
[0000][PE] mean and std.dev: (2195.67, 1335.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 311.004 CPU sec, 17.432 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516932, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 294, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2157)
[0000][PE] mean and std.dev: (475.74, 404.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 1224, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (961.88, 577.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 311.624 CPU sec, 17.463 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516706, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 408, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2086)
[0000][PE] mean and std.dev: (584.81, 523.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.18, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1439, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (1275.33, 518.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 309.237 CPU sec, 17.327 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516716, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 386, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (738.50, 806.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.78, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 1782, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (1677.11, 683.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 312.573 CPU sec, 17.539 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517062, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 804, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (858.91, 732.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.20, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1026, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (1261.87, 670.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 309.657 CPU sec, 17.350 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517244, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 562, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (710.08, 572.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1222, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1412.48, 877.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 310.504 CPU sec, 17.391 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517464, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 889, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5520)
[0000][PE] mean and std.dev: (1043.74, 929.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (180, 1625, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7002)
[0000][PE] mean and std.dev: (1658.30, 1723.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9276)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 1248, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5804)
[0000][PE] mean and std.dev: (1296.80, 976.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 309.465 CPU sec, 17.323 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517117, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1000, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6012)
[0000][PE] mean and std.dev: (1215.28, 1025.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.01, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1015, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (1157.36, 714.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 308.824 CPU sec, 17.278 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517270, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 571, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1808)
[0000][PE] mean and std.dev: (573.35, 343.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1544, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (1705.47, 1181.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 307.464 CPU sec, 17.245 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516593, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 619, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4063)
[0000][PE] mean and std.dev: (850.76, 779.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1173, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6008)
[0000][PE] mean and std.dev: (1466.32, 854.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 309.042 CPU sec, 17.306 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517384, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 470, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (732.68, 628.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 1295, 2808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7342)
[0000][PE] mean and std.dev: (1837.35, 1540.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 311.758 CPU sec, 17.453 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516946, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1028, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (1021.82, 760.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.73, 120.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1432, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (1532.29, 969.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 310.216 CPU sec, 17.402 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516970, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 578, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (817.04, 656.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2988, 4138, 4970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8934)
[0000][PE] mean and std.dev: (4131.70, 2036.69)
[0000][PE] low and high boundaries for proper pairs: (1, 12278)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1260, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1321.21, 738.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 310.195 CPU sec, 17.369 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516901, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 618, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (793.38, 714.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.62, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 1182, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (1148.88, 740.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 311.155 CPU sec, 17.419 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517073, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 395, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2515)
[0000][PE] mean and std.dev: (614.38, 448.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.21, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 999, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (974.83, 321.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 313.655 CPU sec, 17.590 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517606, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 479, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3898)
[0000][PE] mean and std.dev: (891.97, 860.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (454, 1375, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (1118.92, 809.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 309.025 CPU sec, 17.289 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516770, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 732, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (761.96, 632.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.71, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 927, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5665)
[0000][PE] mean and std.dev: (1273.50, 880.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 313.072 CPU sec, 17.582 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516867, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 812, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (863.53, 588.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1141, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (1312.50, 898.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 313.887 CPU sec, 17.572 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516428, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 449, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4429)
[0000][PE] mean and std.dev: (862.10, 798.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1616, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (1262.50, 673.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 315.949 CPU sec, 17.731 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516675, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 648, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (900.00, 728.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.43, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1440, 1629, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (1654.81, 853.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 315.270 CPU sec, 17.677 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517478, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 547, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (859.20, 732.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (519, 1288, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (1488.20, 1089.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 314.441 CPU sec, 17.669 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517196, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 964, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (1086.67, 973.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1717, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (1846.72, 1066.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 314.500 CPU sec, 17.640 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516960, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 668, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3106)
[0000][PE] mean and std.dev: (726.85, 609.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.79, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1829, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5875)
[0000][PE] mean and std.dev: (1791.89, 1430.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 314.546 CPU sec, 17.654 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516659, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (753, 1253, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5352)
[0000][PE] mean and std.dev: (1345.57, 874.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1526, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (10, 3130)
[0000][PE] mean and std.dev: (1534.54, 429.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 318.052 CPU sec, 17.810 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516735, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 444, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (788.69, 638.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1150, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (1378.07, 895.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 316.681 CPU sec, 17.735 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517184, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 1041, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (1037.15, 821.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1410, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (1490.12, 926.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 313.551 CPU sec, 17.575 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517017, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 449, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (795.75, 777.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 2052, 3640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9284)
[0000][PE] mean and std.dev: (2377.82, 1866.20)
[0000][PE] low and high boundaries for proper pairs: (1, 12106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 312.411 CPU sec, 17.501 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517080, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 626, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6022)
[0000][PE] mean and std.dev: (1255.95, 1494.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1473, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (1399.76, 663.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 311.883 CPU sec, 17.475 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517257, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (590, 1098, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (1257.81, 941.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (515.27, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 1602, 2759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5775)
[0000][PE] mean and std.dev: (1839.10, 1016.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 311.853 CPU sec, 17.470 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516587, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 521, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2756)
[0000][PE] mean and std.dev: (464.95, 359.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1347, 1831, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (2097.50, 1048.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6290)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1569, 4387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11355)
[0000][PE] mean and std.dev: (2254.00, 1804.30)
[0000][PE] low and high boundaries for proper pairs: (1, 14839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 317.348 CPU sec, 17.809 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516914, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 520, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (525.23, 429.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1551, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5099)
[0000][PE] mean and std.dev: (1579.71, 731.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 312.060 CPU sec, 17.478 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516781, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 572, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (953.80, 959.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1529, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (1435.04, 666.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 313.479 CPU sec, 17.571 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517102, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 505, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3497)
[0000][PE] mean and std.dev: (786.73, 588.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1443, 2973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6711)
[0000][PE] mean and std.dev: (1830.16, 1515.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 317.634 CPU sec, 17.794 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517109, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 855, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2811)
[0000][PE] mean and std.dev: (791.67, 718.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1977, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (1597.57, 835.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 312.090 CPU sec, 17.530 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516633, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 1035, 3707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10589)
[0000][PE] mean and std.dev: (1573.30, 1664.60)
[0000][PE] low and high boundaries for proper pairs: (1, 14030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.28, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1419, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (1431.33, 769.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 315.909 CPU sec, 17.734 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516831, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 714, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (969.17, 875.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1520, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (1436.47, 913.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 315.590 CPU sec, 17.683 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517015, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 394, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2091)
[0000][PE] mean and std.dev: (498.78, 326.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 930, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5979)
[0000][PE] mean and std.dev: (1423.72, 1283.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 313.577 CPU sec, 17.582 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517193, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 976, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (1166.45, 899.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1302, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1813.84, 1373.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 317.157 CPU sec, 17.773 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516993, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 414, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (601.18, 486.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1343, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (1277.05, 539.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 318.498 CPU sec, 17.870 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517100, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 284, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (622.39, 670.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1291, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5246)
[0000][PE] mean and std.dev: (1565.45, 665.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 314.922 CPU sec, 17.678 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517257, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1074, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6946)
[0000][PE] mean and std.dev: (1267.38, 973.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1151, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (1182.44, 575.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 312.431 CPU sec, 17.566 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517023, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 463, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2372)
[0000][PE] mean and std.dev: (564.00, 421.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.72, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1198, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5284)
[0000][PE] mean and std.dev: (1682.73, 1198.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 313.386 CPU sec, 17.583 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517408, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 551, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (722.59, 638.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.85, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1406, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5677)
[0000][PE] mean and std.dev: (1389.77, 747.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 311.402 CPU sec, 17.434 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517346, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 1256, 2583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6877)
[0000][PE] mean and std.dev: (1646.83, 1356.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1011, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (1152.07, 630.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 312.243 CPU sec, 17.531 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517741, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 369, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (729.00, 657.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.21, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1613, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6137)
[0000][PE] mean and std.dev: (1747.18, 1203.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 309.024 CPU sec, 17.345 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517133, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 990, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4997)
[0000][PE] mean and std.dev: (1054.75, 1044.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1621, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4771)
[0000][PE] mean and std.dev: (1416.00, 763.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 313.493 CPU sec, 17.579 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517018, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 741, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5098)
[0000][PE] mean and std.dev: (1251.48, 1060.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 1245, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (1113.08, 694.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 313.279 CPU sec, 17.602 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517090, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 569, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3768)
[0000][PE] mean and std.dev: (885.37, 807.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.81, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1517, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1569.05, 576.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 313.609 CPU sec, 17.565 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516783, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 863, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4714)
[0000][PE] mean and std.dev: (1120.79, 1047.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (560, 1078, 2465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6275)
[0000][PE] mean and std.dev: (1498.26, 1159.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 313.948 CPU sec, 17.627 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516833, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 1075, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5683)
[0000][PE] mean and std.dev: (1256.14, 965.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.95, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 1525, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (1793.08, 779.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5430)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 311.601 CPU sec, 17.518 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517017, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 1335, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4567)
[0000][PE] mean and std.dev: (1220.78, 904.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1137, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5898)
[0000][PE] mean and std.dev: (1660.00, 1201.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 310.662 CPU sec, 17.462 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517229, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 441, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (588.68, 537.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1142, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (390, 2130)
[0000][PE] mean and std.dev: (1137.50, 265.79)
[0000][PE] low and high boundaries for proper pairs: (42, 2478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 316.427 CPU sec, 17.736 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516536, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1157, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1169.23, 947.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.84, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1833, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5905)
[0000][PE] mean and std.dev: (1925.05, 1256.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 313.981 CPU sec, 17.612 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517036, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 663, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5763)
[0000][PE] mean and std.dev: (915.06, 864.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1823, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (1697.30, 737.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 316.415 CPU sec, 17.743 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516314, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 907, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (879.67, 656.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1780, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (1582.57, 889.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 316.701 CPU sec, 17.799 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516363, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 343, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (647.37, 576.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1464, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (1705.18, 1037.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 314.023 CPU sec, 17.603 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517226, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 820, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (712.82, 525.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 2048, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5560)
[0000][PE] mean and std.dev: (1912.00, 818.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 313.125 CPU sec, 17.566 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516853, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 514, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4806)
[0000][PE] mean and std.dev: (773.71, 722.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.62, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1425, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (1375.75, 749.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 311.945 CPU sec, 17.475 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516848, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 476, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (668.81, 662.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (539, 1052, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6002)
[0000][PE] mean and std.dev: (1407.80, 982.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 313.585 CPU sec, 17.574 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517022, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 593, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2393)
[0000][PE] mean and std.dev: (658.60, 454.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.19, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 951, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (1123.53, 796.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 316.641 CPU sec, 17.758 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516602, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 925, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4594)
[0000][PE] mean and std.dev: (1154.27, 1001.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1615, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4323)
[0000][PE] mean and std.dev: (1539.08, 606.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 313.870 CPU sec, 17.579 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516689, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 368, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (560.33, 566.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1282, 1387, 2711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5569)
[0000][PE] mean and std.dev: (1692.78, 864.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 314.799 CPU sec, 17.667 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517094, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 799, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (900.65, 714.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 964, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (1215.41, 892.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 314.554 CPU sec, 17.634 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516883, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 764, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (723.82, 545.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1523, 1749, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4358)
[0000][PE] mean and std.dev: (1864.92, 614.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 314.196 CPU sec, 17.638 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516968, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 605, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4835)
[0000][PE] mean and std.dev: (859.26, 868.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1336, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5079)
[0000][PE] mean and std.dev: (1487.19, 1000.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 316.401 CPU sec, 17.822 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516936, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1065, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (931.33, 696.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1111, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5301)
[0000][PE] mean and std.dev: (1428.44, 843.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 314.065 CPU sec, 17.628 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517167, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 664, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (753.38, 501.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1396, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1362.07, 772.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 311.814 CPU sec, 17.505 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516839, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 471, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2056)
[0000][PE] mean and std.dev: (606.67, 386.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.21, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1486, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (1456.06, 496.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 312.770 CPU sec, 17.532 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517174, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 816, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5177)
[0000][PE] mean and std.dev: (1136.11, 890.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1105, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (1240.45, 593.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 314.050 CPU sec, 17.630 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516960, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 678, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7307)
[0000][PE] mean and std.dev: (1368.11, 1392.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1724, 3262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8096)
[0000][PE] mean and std.dev: (2029.17, 1596.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 316.476 CPU sec, 17.732 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516616, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 596, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4630)
[0000][PE] mean and std.dev: (1072.43, 1023.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (690, 1246, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6522)
[0000][PE] mean and std.dev: (1480.25, 977.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 313.991 CPU sec, 17.600 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517408, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 744, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2737)
[0000][PE] mean and std.dev: (741.28, 616.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.94, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1359, 2899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6305)
[0000][PE] mean and std.dev: (1676.89, 1193.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 314.424 CPU sec, 17.634 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516989, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 534, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4854)
[0000][PE] mean and std.dev: (1028.82, 1106.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (488, 768, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4457)
[0000][PE] mean and std.dev: (1174.21, 942.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 315.299 CPU sec, 17.672 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516931, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (510, 987, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1112.47, 773.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 1066, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (1008.18, 566.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 315.294 CPU sec, 17.691 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516787, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 455, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (1044.84, 1068.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (450, 1136, 2847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7641)
[0000][PE] mean and std.dev: (1368.59, 1096.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 313.188 CPU sec, 17.542 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516772, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 930, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1124.30, 1022.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 1742, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1598.90, 559.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 317.343 CPU sec, 17.776 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516441, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 474, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5255)
[0000][PE] mean and std.dev: (1089.48, 1180.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 1472, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (1571.72, 649.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 316.491 CPU sec, 17.733 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517582, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 420, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5251)
[0000][PE] mean and std.dev: (1083.40, 1033.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1346, 3817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9547)
[0000][PE] mean and std.dev: (2181.65, 2194.06)
[0000][PE] low and high boundaries for proper pairs: (1, 12412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 312.317 CPU sec, 17.499 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516651, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 480, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2962)
[0000][PE] mean and std.dev: (648.36, 588.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1224, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1149.11, 678.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 316.480 CPU sec, 17.757 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516846, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 392, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (819.88, 873.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1125, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (1295.91, 752.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 312.978 CPU sec, 17.550 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517002, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 461, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (708.76, 561.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 976, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2356)
[0000][PE] mean and std.dev: (961.44, 374.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 312.626 CPU sec, 17.512 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517046, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 350, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (531.67, 488.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1789, 2846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6482)
[0000][PE] mean and std.dev: (1948.59, 1395.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 314.277 CPU sec, 17.614 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516829, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 840, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6268)
[0000][PE] mean and std.dev: (1178.82, 1105.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1869, 2717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6219)
[0000][PE] mean and std.dev: (1992.18, 1367.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 316.456 CPU sec, 17.819 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517089, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 498, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6541)
[0000][PE] mean and std.dev: (1270.19, 1636.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1086, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2458)
[0000][PE] mean and std.dev: (1037.86, 423.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 312.584 CPU sec, 17.511 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516801, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 588, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (611.92, 457.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1308, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5260)
[0000][PE] mean and std.dev: (1600.06, 871.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 315.187 CPU sec, 17.692 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516694, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 419, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1769)
[0000][PE] mean and std.dev: (453.36, 294.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.00, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1410, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5081)
[0000][PE] mean and std.dev: (1799.00, 1015.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 318.288 CPU sec, 17.872 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516971, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 491, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (784.35, 745.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1318, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4560)
[0000][PE] mean and std.dev: (1527.32, 851.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 316.945 CPU sec, 17.827 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516881, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 919, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (1026.12, 907.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1329, 1978, 3418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7596)
[0000][PE] mean and std.dev: (2289.50, 1622.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 315.104 CPU sec, 17.682 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516534, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 407, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (864.56, 878.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1327, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (1386.26, 606.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 314.239 CPU sec, 17.664 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517156, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 458, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5008)
[0000][PE] mean and std.dev: (892.75, 1062.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1383, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1290.82, 718.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 318.781 CPU sec, 17.883 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517035, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 540, 1010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2398)
[0000][PE] mean and std.dev: (656.35, 501.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.99, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1480, 1609, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (464, 3004)
[0000][PE] mean and std.dev: (1617.07, 526.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 317.515 CPU sec, 17.814 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516808, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 720, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (756.53, 517.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1210, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (44, 2479)
[0000][PE] mean and std.dev: (1150.23, 423.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 317.901 CPU sec, 17.922 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517010, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 1020, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3581)
[0000][PE] mean and std.dev: (1058.81, 761.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 967, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (155, 1950)
[0000][PE] mean and std.dev: (998.10, 317.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 316.418 CPU sec, 17.731 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517020, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 741, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4343)
[0000][PE] mean and std.dev: (915.45, 918.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1435, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (1370.19, 534.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 310.926 CPU sec, 17.432 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516858, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 418, 719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1681)
[0000][PE] mean and std.dev: (467.55, 329.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1657, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4741)
[0000][PE] mean and std.dev: (1795.27, 1162.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 314.382 CPU sec, 17.620 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516465, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 857, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1071.25, 1033.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.42, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1330, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (1290.62, 664.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 314.124 CPU sec, 17.612 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517068, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 704, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6743)
[0000][PE] mean and std.dev: (1498.15, 1639.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1234, 3501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8253)
[0000][PE] mean and std.dev: (1776.45, 1309.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 313.463 CPU sec, 17.584 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517027, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 594, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (889.41, 814.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 1021, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (1121.50, 898.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 314.386 CPU sec, 17.605 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517534, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 605, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (976.61, 865.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1862, 2862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6546)
[0000][PE] mean and std.dev: (1969.94, 1368.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 315.005 CPU sec, 17.651 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516924, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (629, 695, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (990.53, 688.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1432, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3050)
[0000][PE] mean and std.dev: (1259.06, 477.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 314.214 CPU sec, 17.598 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516688, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (489, 1249, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4863)
[0000][PE] mean and std.dev: (1190.00, 910.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.67, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1264, 3237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7975)
[0000][PE] mean and std.dev: (1646.31, 1502.49)
[0000][PE] low and high boundaries for proper pairs: (1, 10344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 314.808 CPU sec, 17.650 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516518, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 611, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4536)
[0000][PE] mean and std.dev: (953.48, 855.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1298, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4209)
[0000][PE] mean and std.dev: (1203.00, 563.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 314.406 CPU sec, 17.635 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517122, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 352, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3693)
[0000][PE] mean and std.dev: (671.09, 782.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1455, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (1212.71, 548.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 312.884 CPU sec, 17.550 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517267, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 906, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3791)
[0000][PE] mean and std.dev: (980.88, 743.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (440, 1238, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (1210.23, 828.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 311.163 CPU sec, 17.418 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516576, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 278, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1628)
[0000][PE] mean and std.dev: (412.88, 388.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1413, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (1574.86, 957.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 316.485 CPU sec, 17.735 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516617, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 490, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (857.15, 770.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1517, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 2849)
[0000][PE] mean and std.dev: (1482.18, 574.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 316.521 CPU sec, 17.731 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516893, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 601, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (780.78, 633.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1095, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (1193.95, 665.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 319.460 CPU sec, 17.930 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517090, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 990, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5407)
[0000][PE] mean and std.dev: (1350.04, 1356.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1338, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (1241.38, 621.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 315.493 CPU sec, 17.807 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517075, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 693, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (829.83, 870.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1440, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (1478.18, 723.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 312.146 CPU sec, 17.498 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516810, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 464, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (805.25, 787.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.22, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1467, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (1517.93, 955.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 317.037 CPU sec, 17.793 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516927, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 637, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (873.07, 744.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1480, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (1400.61, 730.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 310.942 CPU sec, 17.442 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517015, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 420, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (803.83, 735.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1180, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (1277.07, 681.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 315.517 CPU sec, 18.092 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517007, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (589, 1257, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4405)
[0000][PE] mean and std.dev: (1496.09, 1185.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1486, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (1384.70, 738.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 312.802 CPU sec, 17.522 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516866, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 390, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (658.21, 606.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.38, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 1140, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3110)
[0000][PE] mean and std.dev: (1065.56, 625.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 314.538 CPU sec, 17.613 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516968, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 952, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4865)
[0000][PE] mean and std.dev: (1182.35, 945.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1481, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (1777.79, 1018.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 312.416 CPU sec, 17.516 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517288, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 339, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (609.30, 672.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1585, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1606.60, 694.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 313.920 CPU sec, 17.583 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517014, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 432, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (687.92, 596.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1283, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6027)
[0000][PE] mean and std.dev: (1598.74, 1115.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 314.999 CPU sec, 17.665 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517248, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 824, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (1007.83, 817.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1245, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1336.00, 780.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 313.752 CPU sec, 17.623 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517269, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (480, 995, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (1076.87, 748.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.33, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1425, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (1349.81, 493.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 312.162 CPU sec, 17.487 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516775, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 934, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (920.74, 728.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1224, 2568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6034)
[0000][PE] mean and std.dev: (1555.25, 1120.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 315.758 CPU sec, 17.695 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516824, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 613, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6440)
[0000][PE] mean and std.dev: (1117.00, 1224.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1736, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6185)
[0000][PE] mean and std.dev: (1910.67, 1057.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 314.946 CPU sec, 17.677 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517056, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 449, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (792.35, 751.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1443, 1894, 3331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7107)
[0000][PE] mean and std.dev: (2201.50, 1261.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 313.967 CPU sec, 17.600 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516444, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 1129, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5243)
[0000][PE] mean and std.dev: (1254.03, 1019.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.31, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1449, 1543, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (481, 2901)
[0000][PE] mean and std.dev: (1530.78, 404.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 315.275 CPU sec, 17.653 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517321, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 404, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (929.23, 978.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1284, 1857, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (1704.83, 873.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 310.950 CPU sec, 17.411 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516796, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 1036, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (1047.82, 735.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1381, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5027)
[0000][PE] mean and std.dev: (1497.87, 790.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 316.143 CPU sec, 17.735 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517298, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 486, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (553.11, 422.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (515.32, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1122, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5183)
[0000][PE] mean and std.dev: (1401.38, 924.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 311.296 CPU sec, 17.450 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517137, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 610, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3302)
[0000][PE] mean and std.dev: (757.78, 601.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 967, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3282)
[0000][PE] mean and std.dev: (939.86, 577.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 312.392 CPU sec, 17.618 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517201, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 793, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4912)
[0000][PE] mean and std.dev: (1143.17, 1083.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (421, 1237, 2560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6838)
[0000][PE] mean and std.dev: (1813.12, 1799.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 314.892 CPU sec, 17.687 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516660, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 912, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5034)
[0000][PE] mean and std.dev: (1128.82, 1088.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1196, 3448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8288)
[0000][PE] mean and std.dev: (1554.00, 1202.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 317.787 CPU sec, 17.873 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516761, 9, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 418, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (702.44, 750.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1234, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (1497.45, 997.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 316.320 CPU sec, 17.767 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517185, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 661, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (817.33, 717.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 2729, 4487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11343)
[0000][PE] mean and std.dev: (2724.62, 1760.31)
[0000][PE] low and high boundaries for proper pairs: (1, 14771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 317.721 CPU sec, 17.852 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516632, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 587, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (777.71, 588.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (487, 2610, 3709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10153)
[0000][PE] mean and std.dev: (2825.20, 2585.35)
[0000][PE] low and high boundaries for proper pairs: (1, 13375)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1238, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (1366.62, 814.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 314.476 CPU sec, 17.654 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517193, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 827, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3046)
[0000][PE] mean and std.dev: (806.12, 520.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.97, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1326, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5358)
[0000][PE] mean and std.dev: (1480.95, 1025.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 315.637 CPU sec, 17.711 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516918, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 1217, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6703)
[0000][PE] mean and std.dev: (1451.25, 1396.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1185, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (1268.38, 623.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 319.915 CPU sec, 17.976 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516307, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 830, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (885.56, 609.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1594, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5876)
[0000][PE] mean and std.dev: (1603.83, 977.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 319.743 CPU sec, 17.918 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516577, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1008, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (909.91, 713.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.17, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1322, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5583)
[0000][PE] mean and std.dev: (1590.61, 1317.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 313.312 CPU sec, 17.557 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516896, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 655, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5290)
[0000][PE] mean and std.dev: (1239.95, 1176.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.70, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1281, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (1195.83, 608.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 311.821 CPU sec, 17.500 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517094, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 1059, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5944)
[0000][PE] mean and std.dev: (894.36, 773.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.31, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 317.581 CPU sec, 17.908 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517120, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 694, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (1050.00, 975.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1299, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1247.28, 611.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 312.543 CPU sec, 17.578 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516991, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 1203, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (1410.00, 1198.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1190, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4948)
[0000][PE] mean and std.dev: (1497.54, 658.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 315.646 CPU sec, 17.741 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516910, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 317, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 706)
[0000][PE] mean and std.dev: (274.86, 99.89)
[0000][PE] low and high boundaries for proper pairs: (1, 856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1437, 4269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11227)
[0000][PE] mean and std.dev: (2400.75, 2612.51)
[0000][PE] low and high boundaries for proper pairs: (1, 14706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 314.664 CPU sec, 17.672 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516750, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 403, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (733.00, 739.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.27, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1445, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (1382.20, 662.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 320.151 CPU sec, 18.013 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516293, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 339, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2518)
[0000][PE] mean and std.dev: (447.33, 376.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1374, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1411.06, 612.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 319.309 CPU sec, 17.861 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517070, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 567, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (800.15, 744.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.32, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1409, 1887, 3882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8828)
[0000][PE] mean and std.dev: (2666.36, 2055.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 314.119 CPU sec, 17.605 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516851, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 492, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (751.08, 721.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1538, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (1326.53, 575.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 320.942 CPU sec, 18.061 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517162, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 422, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (654.09, 601.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1317, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (1316.64, 522.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 317.221 CPU sec, 17.808 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517055, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 603, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (834.69, 659.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1448, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (1423.19, 718.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 318.793 CPU sec, 17.930 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516574, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 905, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (1019.88, 706.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1246, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (1350.85, 717.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 313.004 CPU sec, 17.601 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516342, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 520, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (656.21, 544.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1724, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (1642.62, 863.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 315.998 CPU sec, 17.801 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516728, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 463, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (672.21, 647.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1300, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (1111.33, 481.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 316.399 CPU sec, 17.807 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517221, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 778, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (893.61, 1026.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1531, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4481)
[0000][PE] mean and std.dev: (1804.27, 1105.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 311.868 CPU sec, 17.499 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516824, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 435, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (747.22, 746.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.40, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1634, 3052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6978)
[0000][PE] mean and std.dev: (1922.50, 1254.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 318.084 CPU sec, 17.916 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516683, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 1099, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (955.29, 823.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1491, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (1674.82, 708.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 314.568 CPU sec, 17.640 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517373, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 672, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (671.42, 507.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (546, 1509, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (1535.37, 1127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 313.353 CPU sec, 17.565 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517609, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 1005, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (926.85, 699.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1708, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4924)
[0000][PE] mean and std.dev: (1752.21, 1036.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 314.364 CPU sec, 17.610 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517013, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 462, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2944)
[0000][PE] mean and std.dev: (511.00, 434.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 1777, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (1690.88, 524.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 322.646 CPU sec, 18.094 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516479, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 485, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2021)
[0000][PE] mean and std.dev: (446.36, 242.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 1040, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (1331.44, 884.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 321.372 CPU sec, 18.005 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516822, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 667, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (923.00, 808.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.70, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1370, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4809)
[0000][PE] mean and std.dev: (1370.73, 763.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 312.882 CPU sec, 17.521 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516518, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (489, 1334, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (1114.15, 708.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1485, 1637, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1467.25, 605.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 316.345 CPU sec, 17.727 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516881, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 738, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2737)
[0000][PE] mean and std.dev: (687.23, 590.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1247, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2697)
[0000][PE] mean and std.dev: (1208.36, 461.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 313.421 CPU sec, 17.572 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516816, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 510, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (661.28, 516.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1819, 2657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5965)
[0000][PE] mean and std.dev: (1651.27, 983.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 316.092 CPU sec, 17.766 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517244, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 584, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2852)
[0000][PE] mean and std.dev: (747.41, 668.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (471, 1714, 7177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20589)
[0000][PE] mean and std.dev: (3546.00, 3465.49)
[0000][PE] low and high boundaries for proper pairs: (1, 27295)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1347, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5378)
[0000][PE] mean and std.dev: (1353.92, 695.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 312.751 CPU sec, 17.537 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517218, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 513, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (697.89, 652.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1280, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (1255.00, 646.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 315.987 CPU sec, 17.766 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517238, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 449, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3101)
[0000][PE] mean and std.dev: (696.00, 688.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.93, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 1825, 3496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7928)
[0000][PE] mean and std.dev: (1990.39, 1350.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 314.073 CPU sec, 17.567 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516805, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 921, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (1053.52, 837.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1379, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (1474.53, 726.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 314.446 CPU sec, 17.625 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517082, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 441, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (690.89, 581.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1407, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1487.88, 960.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 311.821 CPU sec, 17.470 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517228, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 1228, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1183.75, 970.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1488, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (1516.38, 740.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 315.334 CPU sec, 17.693 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516626, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1088, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4636)
[0000][PE] mean and std.dev: (1223.40, 981.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1683, 2759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6885)
[0000][PE] mean and std.dev: (1776.08, 1445.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 315.837 CPU sec, 17.702 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517302, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1002, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (1039.15, 820.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.25, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1301, 1941, 3171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6911)
[0000][PE] mean and std.dev: (2039.69, 1304.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 316.095 CPU sec, 17.716 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516757, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 705, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (649.05, 475.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 1636, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6905)
[0000][PE] mean and std.dev: (1850.75, 1668.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 321.119 CPU sec, 18.068 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517102, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 675, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3105)
[0000][PE] mean and std.dev: (680.91, 456.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1209, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (1385.50, 905.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 315.860 CPU sec, 17.698 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516918, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 677, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (889.29, 832.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.74, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1911, 2766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5914)
[0000][PE] mean and std.dev: (1618.55, 648.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 317.701 CPU sec, 17.808 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517391, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 693, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2760)
[0000][PE] mean and std.dev: (769.19, 557.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1157, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (1218.06, 492.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 315.875 CPU sec, 17.690 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516938, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 817, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (874.88, 617.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.31, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1559, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4503)
[0000][PE] mean and std.dev: (1431.38, 647.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 317.323 CPU sec, 17.790 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517601, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 1029, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (1008.60, 708.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.00, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1335, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5403)
[0000][PE] mean and std.dev: (1564.47, 1178.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 316.124 CPU sec, 17.691 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517115, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 584, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (747.78, 726.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.99, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1385, 2689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6403)
[0000][PE] mean and std.dev: (1593.67, 1147.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 314.067 CPU sec, 17.563 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517113, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 826, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5531)
[0000][PE] mean and std.dev: (1277.58, 1261.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1541, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1388.80, 752.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 317.016 CPU sec, 17.754 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517008, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 522, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4393)
[0000][PE] mean and std.dev: (882.61, 879.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1301, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (1312.00, 784.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 322.689 CPU sec, 18.052 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517428, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 498, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2565)
[0000][PE] mean and std.dev: (738.86, 616.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1339, 1451, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5440)
[0000][PE] mean and std.dev: (1776.31, 939.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 312.966 CPU sec, 17.556 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516704, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 686, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4808)
[0000][PE] mean and std.dev: (1078.81, 1027.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1279, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7186)
[0000][PE] mean and std.dev: (1677.57, 1367.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 314.076 CPU sec, 17.602 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516644, 12, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 740, 2726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7656)
[0000][PE] mean and std.dev: (1245.82, 1430.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (297, 1188, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (1021.45, 959.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4893)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1900, 3140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7808)
[0000][PE] mean and std.dev: (1939.48, 1342.38)
[0000][PE] low and high boundaries for proper pairs: (1, 10142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 312.932 CPU sec, 17.544 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516656, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 915, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (930.83, 735.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (466, 764, 3586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9826)
[0000][PE] mean and std.dev: (1930.00, 2271.56)
[0000][PE] low and high boundaries for proper pairs: (1, 12946)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1176, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (1249.33, 719.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 314.973 CPU sec, 17.657 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517181, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 591, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (504.62, 313.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.82, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1306, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (1315.81, 481.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 314.158 CPU sec, 17.618 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517808, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 878, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3319)
[0000][PE] mean and std.dev: (857.30, 686.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.79, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1398, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (1428.85, 708.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 313.322 CPU sec, 17.587 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516783, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 691, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (731.38, 551.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 2266, 3003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6635)
[0000][PE] mean and std.dev: (2080.28, 1070.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 316.698 CPU sec, 17.754 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517089, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1016, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (951.11, 763.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1268, 1627, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (1550.20, 717.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 312.621 CPU sec, 17.512 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517337, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 400, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (886.35, 942.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.96, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1402, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (1445.69, 797.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 314.283 CPU sec, 17.631 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517014, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 890, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (915.83, 743.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1022, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (195, 2025)
[0000][PE] mean and std.dev: (991.08, 356.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 314.760 CPU sec, 17.647 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516418, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 809, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (895.75, 689.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1283, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5538)
[0000][PE] mean and std.dev: (1613.25, 878.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 311.984 CPU sec, 17.481 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517177, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 406, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (599.70, 497.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1266, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5153)
[0000][PE] mean and std.dev: (1385.35, 824.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 314.371 CPU sec, 17.608 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517337, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 432, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (970.61, 943.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1343, 3144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7936)
[0000][PE] mean and std.dev: (1793.88, 1415.67)
[0000][PE] low and high boundaries for proper pairs: (1, 10332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 313.062 CPU sec, 17.561 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516991, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 616, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (950.56, 875.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.33, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (110, 3635, 4790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14150)
[0000][PE] mean and std.dev: (3164.80, 3005.46)
[0000][PE] low and high boundaries for proper pairs: (1, 18830)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1263, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (1311.43, 698.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 314.124 CPU sec, 17.614 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516590, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 747, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (949.08, 795.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1081, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (1102.53, 639.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 321.095 CPU sec, 18.054 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517003, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 734, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (874.61, 889.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.99, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (386, 988, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (891.45, 569.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 316.332 CPU sec, 17.733 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516959, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 495, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2902)
[0000][PE] mean and std.dev: (681.52, 547.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1155, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (1315.44, 732.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 317.918 CPU sec, 17.824 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516831, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 549, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (797.04, 758.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1131, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (1251.31, 716.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 314.309 CPU sec, 17.597 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517235, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 854, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (1007.45, 901.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1303, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4812)
[0000][PE] mean and std.dev: (1417.41, 938.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 312.833 CPU sec, 17.557 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516934, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 700, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2535)
[0000][PE] mean and std.dev: (810.55, 464.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1557, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1518.40, 897.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 315.522 CPU sec, 17.690 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516830, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 779, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (1027.74, 829.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.83, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1525, 3172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7846)
[0000][PE] mean and std.dev: (1697.80, 1445.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 315.665 CPU sec, 17.694 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517185, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 680, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (673.17, 531.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1446, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (22, 2517)
[0000][PE] mean and std.dev: (1286.65, 403.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 315.408 CPU sec, 17.706 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517637, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 659, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3057)
[0000][PE] mean and std.dev: (802.67, 624.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.39, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1465, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (1457.20, 563.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5430)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 313.732 CPU sec, 17.600 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517119, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 1211, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5319)
[0000][PE] mean and std.dev: (1148.50, 929.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1373, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (1221.33, 389.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 314.406 CPU sec, 17.615 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516562, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 603, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7155)
[0000][PE] mean and std.dev: (1316.64, 1288.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 318.149 CPU sec, 17.889 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517192, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 447, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (671.23, 543.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1072, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1188.32, 662.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 314.806 CPU sec, 17.635 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517006, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 600, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5255)
[0000][PE] mean and std.dev: (1260.69, 1358.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.31, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1270, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (1280.30, 558.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 314.708 CPU sec, 17.676 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516651, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1312, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5643)
[0000][PE] mean and std.dev: (1424.73, 1298.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1467, 2580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6494)
[0000][PE] mean and std.dev: (1600.75, 1054.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 312.269 CPU sec, 17.517 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517279, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 446, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (823.96, 720.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1064, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1459.79, 1075.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 314.507 CPU sec, 17.607 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517041, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 1161, 3457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9807)
[0000][PE] mean and std.dev: (1947.76, 2066.97)
[0000][PE] low and high boundaries for proper pairs: (1, 12982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (134, 841, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (1052.30, 1144.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1725, 2793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6239)
[0000][PE] mean and std.dev: (1849.46, 1520.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 313.262 CPU sec, 17.546 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516986, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 459, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (772.44, 677.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1182, 2875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6923)
[0000][PE] mean and std.dev: (1649.09, 1219.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 312.757 CPU sec, 17.519 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517185, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 597, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2555)
[0000][PE] mean and std.dev: (604.87, 464.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1449, 1635, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4890)
[0000][PE] mean and std.dev: (1934.86, 994.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 315.043 CPU sec, 17.682 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517067, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 525, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (906.06, 830.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 1482, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5099)
[0000][PE] mean and std.dev: (1343.07, 654.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 314.707 CPU sec, 17.628 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517059, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 827, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (993.41, 852.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (642, 1300, 3084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7968)
[0000][PE] mean and std.dev: (1794.47, 1616.94)
[0000][PE] low and high boundaries for proper pairs: (1, 10410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 315.901 CPU sec, 17.706 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517312, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 935, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (997.88, 859.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1505, 6814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18822)
[0000][PE] mean and std.dev: (3050.47, 3150.57)
[0000][PE] low and high boundaries for proper pairs: (1, 24826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 315.036 CPU sec, 17.656 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517295, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 814, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2950)
[0000][PE] mean and std.dev: (781.62, 589.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1204, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4611)
[0000][PE] mean and std.dev: (1559.68, 909.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 312.965 CPU sec, 17.531 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516785, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 495, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (638.43, 460.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.78, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1075, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2554)
[0000][PE] mean and std.dev: (1139.92, 415.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 316.398 CPU sec, 17.743 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516554, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 1181, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6785)
[0000][PE] mean and std.dev: (1397.81, 1499.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1307, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (1173.10, 639.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 316.041 CPU sec, 17.718 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516846, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 674, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2541)
[0000][PE] mean and std.dev: (789.72, 586.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1231, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (1253.69, 480.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 314.327 CPU sec, 17.623 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517329, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 396, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (901.91, 979.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.58, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 940, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (1139.40, 658.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 314.423 CPU sec, 17.647 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516967, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 565, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (789.17, 688.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1782, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (1837.86, 959.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 316.753 CPU sec, 17.740 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516583, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 983, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6383)
[0000][PE] mean and std.dev: (1407.95, 1383.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1192, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (1067.28, 700.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 314.619 CPU sec, 17.663 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517057, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 425, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4117)
[0000][PE] mean and std.dev: (919.06, 934.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1370, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4798)
[0000][PE] mean and std.dev: (1389.70, 788.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 311.880 CPU sec, 17.461 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516803, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 738, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (809.52, 564.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1416, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6728)
[0000][PE] mean and std.dev: (2217.56, 1797.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 316.487 CPU sec, 17.855 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517030, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 909, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (804.05, 530.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1024, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1194.08, 510.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 318.947 CPU sec, 17.955 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516958, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 804, 2901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8027)
[0000][PE] mean and std.dev: (1817.17, 2043.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (583, 1477, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4531)
[0000][PE] mean and std.dev: (1312.32, 712.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 313.604 CPU sec, 17.578 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516939, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 907, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5141)
[0000][PE] mean and std.dev: (1223.52, 1047.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.18, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1502, 4162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10256)
[0000][PE] mean and std.dev: (2366.00, 2058.12)
[0000][PE] low and high boundaries for proper pairs: (1, 13303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 315.035 CPU sec, 17.627 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517094, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 590, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (905.97, 858.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1548, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3602)
[0000][PE] mean and std.dev: (1395.12, 732.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 315.020 CPU sec, 17.652 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516920, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 897, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4030)
[0000][PE] mean and std.dev: (978.39, 804.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1736, 1995, 2683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (2193.54, 932.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 316.863 CPU sec, 17.795 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517148, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 454, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1659)
[0000][PE] mean and std.dev: (524.41, 400.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (515, 1242, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (1072.41, 646.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 313.887 CPU sec, 17.580 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517280, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 489, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2371)
[0000][PE] mean and std.dev: (640.57, 499.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 1348, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2977)
[0000][PE] mean and std.dev: (1125.33, 674.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 313.579 CPU sec, 17.587 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517003, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 346, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1830)
[0000][PE] mean and std.dev: (528.59, 450.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.75, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1357, 1743, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4441)
[0000][PE] mean and std.dev: (1866.33, 737.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 316.092 CPU sec, 17.766 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516596, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 445, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (595.75, 402.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1781, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5352)
[0000][PE] mean and std.dev: (1773.29, 920.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 314.013 CPU sec, 17.612 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517123, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 263, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2183)
[0000][PE] mean and std.dev: (421.39, 388.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1101, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2603)
[0000][PE] mean and std.dev: (1102.94, 540.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 317.896 CPU sec, 17.816 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516903, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 387, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (684.14, 582.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1749, 3077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7559)
[0000][PE] mean and std.dev: (1825.00, 1157.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 314.185 CPU sec, 17.612 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516793, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 1207, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (1110.17, 682.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 1323, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4805)
[0000][PE] mean and std.dev: (1483.28, 982.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 317.667 CPU sec, 17.859 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517106, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 434, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2455)
[0000][PE] mean and std.dev: (608.12, 572.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1375, 2612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6248)
[0000][PE] mean and std.dev: (1414.84, 1151.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 311.364 CPU sec, 17.478 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517118, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 391, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (725.10, 768.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1663, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5838)
[0000][PE] mean and std.dev: (1767.11, 1234.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 314.752 CPU sec, 17.698 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517004, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 960, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (818.00, 666.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1264, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (1384.71, 750.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 316.310 CPU sec, 17.756 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517096, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 630, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (766.19, 754.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (501, 1753, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (1436.92, 1078.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 315.792 CPU sec, 17.690 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517299, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 596, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (925.18, 891.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.94, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1482, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4885)
[0000][PE] mean and std.dev: (1552.19, 1085.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 313.460 CPU sec, 17.546 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517259, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 700, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (934.22, 950.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 973, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (1169.38, 620.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 315.406 CPU sec, 17.660 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516977, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 792, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4215)
[0000][PE] mean and std.dev: (913.08, 857.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1339, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5110)
[0000][PE] mean and std.dev: (1517.12, 950.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 314.846 CPU sec, 17.628 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516666, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 896, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1021.86, 799.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.60, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1289, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (1096.25, 455.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 318.521 CPU sec, 17.870 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517058, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 514, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (904.96, 903.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1289, 3394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8756)
[0000][PE] mean and std.dev: (1770.38, 1385.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 316.218 CPU sec, 17.725 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516784, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 839, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5056)
[0000][PE] mean and std.dev: (975.48, 894.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1756, 2611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5761)
[0000][PE] mean and std.dev: (1917.89, 1143.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 313.464 CPU sec, 17.654 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517208, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 951, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1009.12, 796.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1952, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (1813.56, 715.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 313.726 CPU sec, 17.597 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517285, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 781, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (920.09, 647.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 1311, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1257.40, 780.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 316.520 CPU sec, 17.778 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517172, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 761, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (708.29, 499.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 2077, 4152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10282)
[0000][PE] mean and std.dev: (2501.80, 1547.56)
[0000][PE] low and high boundaries for proper pairs: (1, 13347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 312.588 CPU sec, 17.510 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516571, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 985, 2583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6985)
[0000][PE] mean and std.dev: (1302.82, 1217.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1349, 3011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6779)
[0000][PE] mean and std.dev: (1795.00, 1246.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 316.955 CPU sec, 17.772 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516859, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 844, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (826.84, 503.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.00, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1374, 2109, 3171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6765)
[0000][PE] mean and std.dev: (2130.38, 843.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 314.750 CPU sec, 17.635 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516808, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 863, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (965.22, 829.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1294, 1513, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3889)
[0000][PE] mean and std.dev: (1549.94, 505.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 312.636 CPU sec, 17.535 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516962, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 679, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1177.62, 1085.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1430, 2900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6592)
[0000][PE] mean and std.dev: (1829.06, 1114.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 315.240 CPU sec, 17.682 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516488, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 570, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (805.19, 719.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1303, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4650)
[0000][PE] mean and std.dev: (1396.05, 744.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 313.979 CPU sec, 17.596 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516877, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1133, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4935)
[0000][PE] mean and std.dev: (1136.17, 821.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.64, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 870, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (1069.91, 722.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 318.355 CPU sec, 17.836 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517310, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 329, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (650.35, 660.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1905, 3322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7532)
[0000][PE] mean and std.dev: (2038.46, 1013.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 316.301 CPU sec, 17.725 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517081, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 347, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2308)
[0000][PE] mean and std.dev: (526.43, 500.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (643, 1172, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (1150.54, 617.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 311.649 CPU sec, 17.483 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517260, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 401, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6851)
[0000][PE] mean and std.dev: (1089.71, 1297.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1176, 3262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7986)
[0000][PE] mean and std.dev: (1915.17, 1456.41)
[0000][PE] low and high boundaries for proper pairs: (1, 10348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 311.570 CPU sec, 17.520 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517057, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 1063, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1169.81, 843.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1253, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5561)
[0000][PE] mean and std.dev: (1380.53, 1067.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 313.103 CPU sec, 17.569 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517115, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 389, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4243)
[0000][PE] mean and std.dev: (740.26, 770.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1223, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (1114.67, 419.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 316.524 CPU sec, 17.740 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516897, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 611, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (812.61, 683.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1365, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (1450.38, 842.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 313.857 CPU sec, 17.621 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517077, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 569, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (823.45, 810.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1374, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (1289.21, 783.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 314.298 CPU sec, 17.696 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517109, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 656, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (646.26, 539.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1097, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4701)
[0000][PE] mean and std.dev: (1330.13, 863.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 313.685 CPU sec, 17.583 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517109, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 358, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (586.67, 538.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1443, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5097)
[0000][PE] mean and std.dev: (1667.76, 1111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 315.500 CPU sec, 17.660 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516992, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 268, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (605.21, 687.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1284, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4997)
[0000][PE] mean and std.dev: (1430.38, 724.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 312.736 CPU sec, 17.513 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517295, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 587, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (762.63, 776.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.91, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1332, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (1083.05, 554.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 313.791 CPU sec, 17.569 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516837, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 598, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2836)
[0000][PE] mean and std.dev: (729.10, 529.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1449, 3605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8513)
[0000][PE] mean and std.dev: (2311.58, 1686.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 313.241 CPU sec, 17.529 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516991, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 807, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (824.82, 705.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1183, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (1356.05, 605.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 315.948 CPU sec, 17.746 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516985, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 665, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (848.42, 707.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.66, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1445, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1835.00, 979.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 314.216 CPU sec, 17.614 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517306, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 907, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (895.48, 696.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1054, 2779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6531)
[0000][PE] mean and std.dev: (1399.33, 922.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 316.419 CPU sec, 17.771 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517142, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 769, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (753.31, 596.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.22, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1286, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6144)
[0000][PE] mean and std.dev: (1575.57, 1208.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 312.178 CPU sec, 17.487 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517024, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 447, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2416)
[0000][PE] mean and std.dev: (575.40, 454.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1152, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (1173.42, 625.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 315.803 CPU sec, 17.731 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517070, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 297, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2636)
[0000][PE] mean and std.dev: (578.52, 607.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1632, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (1524.09, 611.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 311.926 CPU sec, 17.555 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516999, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 811, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5255)
[0000][PE] mean and std.dev: (1244.09, 1045.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1145, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (1237.43, 766.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 311.229 CPU sec, 17.433 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517399, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 502, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (666.56, 464.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1174, 3692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9718)
[0000][PE] mean and std.dev: (1987.53, 1854.98)
[0000][PE] low and high boundaries for proper pairs: (1, 12731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 314.956 CPU sec, 17.714 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516926, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 534, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (678.10, 586.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1287, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 2156)
[0000][PE] mean and std.dev: (1095.55, 249.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 311.429 CPU sec, 17.442 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517523, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 474, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3932)
[0000][PE] mean and std.dev: (798.96, 765.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1101, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (1111.47, 574.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 313.921 CPU sec, 17.591 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517000, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 496, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (773.81, 692.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1286, 1688, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4808)
[0000][PE] mean and std.dev: (1879.40, 846.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 314.918 CPU sec, 17.747 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517220, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 696, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (891.78, 693.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1309, 1395, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1470.82, 678.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 312.576 CPU sec, 17.501 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516783, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 624, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6669)
[0000][PE] mean and std.dev: (1218.67, 1462.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.39, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1650, 3380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7714)
[0000][PE] mean and std.dev: (2039.29, 1395.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 316.124 CPU sec, 17.697 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516806, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 473, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (952.26, 849.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1149, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (1033.76, 506.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 313.332 CPU sec, 17.591 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516802, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 348, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1711)
[0000][PE] mean and std.dev: (450.73, 385.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1496, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5664)
[0000][PE] mean and std.dev: (1945.60, 1241.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 313.166 CPU sec, 17.520 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516465, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 585, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5718)
[0000][PE] mean and std.dev: (932.56, 829.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1201, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (1237.38, 762.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 314.240 CPU sec, 17.619 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516622, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 640, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6850)
[0000][PE] mean and std.dev: (1200.65, 1326.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1381, 2608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5894)
[0000][PE] mean and std.dev: (1517.69, 928.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 313.551 CPU sec, 17.539 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516955, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 928, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (1273.50, 1096.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1206, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (946.42, 474.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 307.141 CPU sec, 17.236 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517204, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 703, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (775.52, 698.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1589, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (1832.88, 1180.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 310.457 CPU sec, 17.402 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516844, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1038, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4881)
[0000][PE] mean and std.dev: (1185.33, 882.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1376, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (1259.69, 752.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 311.119 CPU sec, 17.482 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516977, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 593, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3653)
[0000][PE] mean and std.dev: (871.07, 685.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1385, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5619)
[0000][PE] mean and std.dev: (1531.54, 863.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 314.487 CPU sec, 17.634 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517219, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 995, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (1095.70, 888.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1794, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7008)
[0000][PE] mean and std.dev: (1821.04, 1040.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 311.536 CPU sec, 17.441 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516646, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 549, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (1033.48, 916.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1829, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1851.44, 1239.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 314.366 CPU sec, 17.614 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516825, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 497, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7050)
[0000][PE] mean and std.dev: (1333.18, 1466.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1140, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3364)
[0000][PE] mean and std.dev: (1167.11, 517.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 314.294 CPU sec, 17.629 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517380, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 344, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (585.29, 631.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (611, 1462, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1494.50, 903.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 311.176 CPU sec, 17.451 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517092, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 487, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (680.04, 565.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.32, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1108, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6010)
[0000][PE] mean and std.dev: (1524.54, 1086.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 316.177 CPU sec, 17.697 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516933, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 497, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (712.65, 586.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1441, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (1181.27, 589.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 311.226 CPU sec, 17.439 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516851, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (548, 1317, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4199)
[0000][PE] mean and std.dev: (1228.90, 814.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1384, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (1347.92, 448.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 310.332 CPU sec, 17.427 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517024, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 946, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6530)
[0000][PE] mean and std.dev: (1500.96, 1530.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.80, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1269, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (1384.35, 903.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 314.503 CPU sec, 17.630 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517171, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 1010, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (888.52, 759.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.24, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 310.230 CPU sec, 17.392 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517248, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 695, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3314)
[0000][PE] mean and std.dev: (717.90, 676.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.38, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1659, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4436)
[0000][PE] mean and std.dev: (1557.00, 669.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 308.442 CPU sec, 17.273 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516753, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 899, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5742)
[0000][PE] mean and std.dev: (1019.50, 873.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.96, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1432, 1709, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (398, 2983)
[0000][PE] mean and std.dev: (1748.57, 517.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 311.580 CPU sec, 17.464 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517301, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 600, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (761.65, 577.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1131, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (1160.05, 670.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 312.185 CPU sec, 17.486 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517103, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 1016, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (954.00, 624.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.54, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1430, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (1485.56, 926.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 310.629 CPU sec, 17.380 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517409, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 671, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (909.40, 897.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.94, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1436, 2775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6151)
[0000][PE] mean and std.dev: (1557.13, 985.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 311.227 CPU sec, 17.413 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517549, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 523, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (891.67, 907.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1428, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (1525.71, 994.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 312.628 CPU sec, 17.519 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516951, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 546, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (965.31, 1192.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.81, 120.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 2575, 3955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10037)
[0000][PE] mean and std.dev: (2503.42, 1996.31)
[0000][PE] low and high boundaries for proper pairs: (1, 13078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 314.555 CPU sec, 17.655 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517100, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 402, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5954)
[0000][PE] mean and std.dev: (1264.56, 1404.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (442, 1271, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (1370.32, 1101.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 312.358 CPU sec, 17.492 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516703, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 682, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5076)
[0000][PE] mean and std.dev: (1329.57, 1463.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.40, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1510, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5706)
[0000][PE] mean and std.dev: (1651.15, 1078.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 312.975 CPU sec, 17.538 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517014, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 658, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (791.11, 645.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (643, 932, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (1057.33, 645.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 311.077 CPU sec, 17.445 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517058, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 658, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (985.39, 926.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1540, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3785)
[0000][PE] mean and std.dev: (1632.73, 735.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 310.256 CPU sec, 17.373 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517133, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 609, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (712.33, 580.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1325, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5179)
[0000][PE] mean and std.dev: (1528.06, 982.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 313.298 CPU sec, 17.546 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517078, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 470, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2168)
[0000][PE] mean and std.dev: (595.24, 440.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (425, 2313, 2764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7442)
[0000][PE] mean and std.dev: (1699.00, 1124.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9781)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 1359, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (1634.71, 1092.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 310.620 CPU sec, 17.402 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516947, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 832, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (927.00, 598.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.94, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 2008, 3330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7526)
[0000][PE] mean and std.dev: (2158.62, 1330.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 311.046 CPU sec, 17.399 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516957, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 398, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2682)
[0000][PE] mean and std.dev: (500.65, 412.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1103, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (1133.75, 648.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 311.142 CPU sec, 17.423 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517117, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 597, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (837.84, 657.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1389, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4505)
[0000][PE] mean and std.dev: (1416.68, 957.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 309.502 CPU sec, 17.331 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516783, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 663, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2614)
[0000][PE] mean and std.dev: (668.65, 474.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.26, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1125, 3954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10436)
[0000][PE] mean and std.dev: (2100.90, 2275.45)
[0000][PE] low and high boundaries for proper pairs: (1, 13677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 308.861 CPU sec, 17.304 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516734, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 579, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5726)
[0000][PE] mean and std.dev: (1259.40, 1386.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1679, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4849)
[0000][PE] mean and std.dev: (1780.95, 938.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 311.751 CPU sec, 17.439 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516476, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 560, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5098)
[0000][PE] mean and std.dev: (1126.58, 1250.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.79, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1466, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3966)
[0000][PE] mean and std.dev: (1406.80, 649.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 310.945 CPU sec, 17.421 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517316, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 509, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (764.20, 719.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.59, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1650, 2960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6794)
[0000][PE] mean and std.dev: (1924.12, 1103.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 316.814 CPU sec, 17.754 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516974, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 430, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2798)
[0000][PE] mean and std.dev: (610.79, 437.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1514, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1587.00, 899.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 308.992 CPU sec, 17.289 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516829, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 499, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3135)
[0000][PE] mean and std.dev: (673.50, 575.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1321, 2062, 3069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6565)
[0000][PE] mean and std.dev: (2251.71, 1252.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 312.172 CPU sec, 17.486 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516694, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 442, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2548)
[0000][PE] mean and std.dev: (847.94, 805.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1549, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3919)
[0000][PE] mean and std.dev: (1382.05, 875.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 311.014 CPU sec, 17.414 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516614, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 431, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (544.38, 332.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1265, 5325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13801)
[0000][PE] mean and std.dev: (2597.54, 2117.02)
[0000][PE] low and high boundaries for proper pairs: (1, 18039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 311.936 CPU sec, 17.472 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517062, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 436, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2444)
[0000][PE] mean and std.dev: (718.88, 686.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1489, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (1403.35, 659.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 313.619 CPU sec, 17.682 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517256, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 422, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2022)
[0000][PE] mean and std.dev: (461.34, 388.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1033, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (1017.45, 551.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 312.841 CPU sec, 17.510 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517004, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 790, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (572.58, 401.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1333, 1670, 2880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5974)
[0000][PE] mean and std.dev: (1710.50, 898.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 311.609 CPU sec, 17.435 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516724, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 515, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2923)
[0000][PE] mean and std.dev: (853.53, 626.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1119, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (1187.82, 714.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 313.971 CPU sec, 17.596 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516991, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 885, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2926)
[0000][PE] mean and std.dev: (874.28, 573.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1439, 2984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7370)
[0000][PE] mean and std.dev: (1598.18, 1174.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 311.401 CPU sec, 17.427 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517291, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1167, 2792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7608)
[0000][PE] mean and std.dev: (1519.80, 1242.28)
[0000][PE] low and high boundaries for proper pairs: (1, 10016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1433, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (1503.95, 865.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 314.993 CPU sec, 17.702 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517359, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 639, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (962.31, 922.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1805, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (1477.33, 583.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 312.281 CPU sec, 17.519 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516896, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 684, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4874)
[0000][PE] mean and std.dev: (796.05, 902.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1936, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5484)
[0000][PE] mean and std.dev: (1680.82, 807.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 308.815 CPU sec, 17.307 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517175, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 451, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (872.32, 775.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.80, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1224, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4635)
[0000][PE] mean and std.dev: (1407.26, 951.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 311.207 CPU sec, 17.449 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516715, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 385, 2288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6418)
[0000][PE] mean and std.dev: (1109.92, 1332.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1385, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (1471.85, 911.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 315.141 CPU sec, 17.704 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517030, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1153, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5050)
[0000][PE] mean and std.dev: (1209.25, 909.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.64, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 2057, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6067)
[0000][PE] mean and std.dev: (1563.45, 1009.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 308.184 CPU sec, 17.253 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516837, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 575, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (813.50, 899.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.93, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1356, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (1216.57, 448.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 311.054 CPU sec, 17.418 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516330, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 554, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (766.46, 548.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1030, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (1025.04, 580.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 311.991 CPU sec, 17.464 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516971, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 869, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6371)
[0000][PE] mean and std.dev: (1099.80, 968.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1103, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (1194.32, 760.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 310.001 CPU sec, 17.497 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516995, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 366, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2575)
[0000][PE] mean and std.dev: (587.46, 582.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.73, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1721, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (1833.71, 774.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 310.179 CPU sec, 17.386 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516555, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 548, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (979.70, 860.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1303, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (1399.77, 791.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 314.125 CPU sec, 17.617 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516849, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 584, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5071)
[0000][PE] mean and std.dev: (1113.74, 1042.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1280, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5822)
[0000][PE] mean and std.dev: (1761.52, 1431.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 313.054 CPU sec, 17.540 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517027, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 519, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3234)
[0000][PE] mean and std.dev: (682.77, 545.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1268, 1597, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4865)
[0000][PE] mean and std.dev: (1525.27, 748.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 309.962 CPU sec, 17.378 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517282, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 623, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (890.71, 874.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1270, 1510, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (218, 2848)
[0000][PE] mean and std.dev: (1522.16, 496.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 310.527 CPU sec, 17.388 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516528, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 366, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (797.56, 791.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1721, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5448)
[0000][PE] mean and std.dev: (2000.53, 1281.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 311.378 CPU sec, 17.444 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517026, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 325, 496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1172)
[0000][PE] mean and std.dev: (293.00, 145.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1213, 2883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7131)
[0000][PE] mean and std.dev: (1457.18, 1021.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 310.484 CPU sec, 17.446 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516684, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 706, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5455)
[0000][PE] mean and std.dev: (1079.11, 1215.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1564, 2560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5456)
[0000][PE] mean and std.dev: (1687.91, 763.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 314.055 CPU sec, 17.668 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517169, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 311, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (816.05, 883.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 987, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2635)
[0000][PE] mean and std.dev: (1085.39, 460.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 309.312 CPU sec, 17.319 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517119, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 441, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (690.17, 645.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1125, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1372.69, 843.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 310.552 CPU sec, 17.417 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517086, 11, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 508, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (683.83, 645.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (918, 1839, 4290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11034)
[0000][PE] mean and std.dev: (2898.18, 2784.87)
[0000][PE] low and high boundaries for proper pairs: (1, 14406)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1274, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (1311.15, 534.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 311.672 CPU sec, 17.461 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516927, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 986, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5926)
[0000][PE] mean and std.dev: (1157.46, 971.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.71, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1351, 2694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6092)
[0000][PE] mean and std.dev: (1476.96, 901.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 310.315 CPU sec, 17.427 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517016, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (851, 1226, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4475)
[0000][PE] mean and std.dev: (1397.28, 912.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 1841, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5174)
[0000][PE] mean and std.dev: (1854.24, 952.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 309.302 CPU sec, 17.400 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516892, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 467, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3257)
[0000][PE] mean and std.dev: (654.52, 510.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.19, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1766, 4191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10533)
[0000][PE] mean and std.dev: (2208.25, 1560.97)
[0000][PE] low and high boundaries for proper pairs: (1, 13704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 311.168 CPU sec, 17.446 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516754, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 494, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (880.83, 759.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (545, 1545, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1419.71, 777.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 307.383 CPU sec, 17.214 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517102, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 700, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (858.57, 627.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1197, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (1187.65, 595.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 309.099 CPU sec, 17.324 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517187, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 517, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (749.93, 710.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1376, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (1227.36, 888.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 312.450 CPU sec, 17.492 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516681, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 841, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5508)
[0000][PE] mean and std.dev: (1114.81, 1221.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1689, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4741)
[0000][PE] mean and std.dev: (1407.89, 866.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 307.914 CPU sec, 17.262 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517302, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1083, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (884.73, 646.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.97, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1384, 1679, 2847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5773)
[0000][PE] mean and std.dev: (2177.75, 1157.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 308.337 CPU sec, 17.290 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517181, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 726, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5168)
[0000][PE] mean and std.dev: (987.95, 876.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1319, 2380, 3504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7874)
[0000][PE] mean and std.dev: (2768.80, 2195.91)
[0000][PE] low and high boundaries for proper pairs: (1, 11552)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 2022, 3125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7029)
[0000][PE] mean and std.dev: (1865.56, 1056.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 312.862 CPU sec, 17.540 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517084, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 690, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (812.79, 697.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1790, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5006)
[0000][PE] mean and std.dev: (1641.32, 953.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 308.038 CPU sec, 17.240 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516554, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 547, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (917.43, 787.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (484, 1171, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4669)
[0000][PE] mean and std.dev: (1115.11, 692.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 309.168 CPU sec, 17.313 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516905, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 965, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (888.50, 727.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1450, 3552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8568)
[0000][PE] mean and std.dev: (2089.74, 1674.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 310.582 CPU sec, 17.452 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517373, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 607, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (1060.74, 951.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 963, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (1181.86, 834.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 306.892 CPU sec, 17.204 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516960, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1582, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7083)
[0000][PE] mean and std.dev: (1516.44, 1351.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1363, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (1486.38, 888.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 318.436 CPU sec, 17.822 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516900, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 523, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2459)
[0000][PE] mean and std.dev: (727.09, 540.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 938, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1121.08, 635.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 308.484 CPU sec, 17.278 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516813, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 398, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (640.68, 713.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.57, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 308.680 CPU sec, 17.284 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516608, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 546, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (986.86, 886.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1414, 3330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8322)
[0000][PE] mean and std.dev: (1744.20, 1355.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 309.146 CPU sec, 17.329 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517252, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 958, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6476)
[0000][PE] mean and std.dev: (1353.38, 1356.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1259, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (1214.07, 754.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 309.683 CPU sec, 17.339 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517017, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 391, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (595.62, 535.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1727, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (1675.15, 650.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 313.236 CPU sec, 17.516 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516717, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 597, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5873)
[0000][PE] mean and std.dev: (1180.31, 1262.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1405, 1558, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (339, 3004)
[0000][PE] mean and std.dev: (1522.12, 503.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 310.434 CPU sec, 17.367 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517232, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 539, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (647.22, 548.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1180, 2739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6559)
[0000][PE] mean and std.dev: (1715.76, 1384.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 311.865 CPU sec, 17.549 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516662, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 604, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (863.82, 765.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.63, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1223, 1602, 3215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7199)
[0000][PE] mean and std.dev: (1931.58, 1117.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 312.819 CPU sec, 17.527 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517699, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 751, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (945.77, 829.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1656, 4379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10695)
[0000][PE] mean and std.dev: (2135.23, 1578.10)
[0000][PE] low and high boundaries for proper pairs: (1, 13853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 308.613 CPU sec, 17.287 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516403, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 426, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (884.81, 813.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1183, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (1313.57, 906.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 310.665 CPU sec, 17.417 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516685, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 383, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (661.40, 678.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1203, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (1112.64, 564.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 311.901 CPU sec, 17.453 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516957, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 371, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2368)
[0000][PE] mean and std.dev: (551.86, 481.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1659, 2012, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (149, 3924)
[0000][PE] mean and std.dev: (1874.25, 542.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 310.145 CPU sec, 17.378 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516716, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 1004, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (898.50, 705.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1214, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4229)
[0000][PE] mean and std.dev: (1202.41, 566.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 314.156 CPU sec, 17.609 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516972, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 1104, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (828.26, 502.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1491, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (1225.26, 783.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 308.917 CPU sec, 17.314 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516742, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 925, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5043)
[0000][PE] mean and std.dev: (1195.93, 1013.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (643, 1067, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (1067.62, 518.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 307.939 CPU sec, 17.233 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517168, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 1087, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4921)
[0000][PE] mean and std.dev: (1260.48, 1175.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1339, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (1181.75, 530.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 307.999 CPU sec, 17.246 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517048, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 1159, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5791)
[0000][PE] mean and std.dev: (1315.93, 1065.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1168, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6457)
[0000][PE] mean and std.dev: (1532.69, 1055.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 306.856 CPU sec, 17.190 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516854, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 690, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1126.28, 997.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1169, 3880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9812)
[0000][PE] mean and std.dev: (2299.64, 1911.59)
[0000][PE] low and high boundaries for proper pairs: (1, 12778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 305.470 CPU sec, 17.173 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517221, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 706, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (675.00, 436.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1218, 1540, 2865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6159)
[0000][PE] mean and std.dev: (1623.93, 864.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 309.492 CPU sec, 17.328 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517236, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1108, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (979.50, 722.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1386, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6673)
[0000][PE] mean and std.dev: (1847.15, 1535.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 308.578 CPU sec, 17.276 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516927, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 511, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2656)
[0000][PE] mean and std.dev: (616.53, 437.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1141, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4043)
[0000][PE] mean and std.dev: (1262.23, 830.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 309.358 CPU sec, 17.351 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517694, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 696, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3791)
[0000][PE] mean and std.dev: (1016.26, 842.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1186, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1522.38, 1070.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 311.606 CPU sec, 17.498 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517160, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 665, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (817.00, 672.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1691, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1416.87, 688.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 305.617 CPU sec, 17.142 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516950, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 543, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (760.12, 687.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1236, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4915)
[0000][PE] mean and std.dev: (1318.23, 735.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 309.426 CPU sec, 17.303 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517085, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 473, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (994.12, 1099.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1098, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (1008.69, 566.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 308.738 CPU sec, 17.297 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517420, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 474, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (646.89, 568.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1519, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4334)
[0000][PE] mean and std.dev: (1351.42, 627.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 307.808 CPU sec, 17.218 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517021, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 860, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (895.52, 630.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1594, 3690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8942)
[0000][PE] mean and std.dev: (2353.20, 2224.96)
[0000][PE] low and high boundaries for proper pairs: (1, 11568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 310.350 CPU sec, 17.407 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517188, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 845, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4662)
[0000][PE] mean and std.dev: (1113.65, 895.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1555, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1734.60, 1090.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 307.733 CPU sec, 17.248 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516939, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 449, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (807.75, 805.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.25, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1268, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (1339.89, 849.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 309.274 CPU sec, 17.323 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516911, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 584, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (1264.21, 1038.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1578, 4318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10786)
[0000][PE] mean and std.dev: (2245.25, 2188.66)
[0000][PE] low and high boundaries for proper pairs: (1, 14020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 309.106 CPU sec, 17.318 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517295, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 366, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2475)
[0000][PE] mean and std.dev: (628.87, 694.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.66, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1350, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (1594.13, 1095.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 309.958 CPU sec, 17.347 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517100, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 575, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1041.59, 1032.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1480, 2765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6357)
[0000][PE] mean and std.dev: (1728.00, 1208.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 309.187 CPU sec, 17.330 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517418, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 798, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (801.00, 501.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1438, 1814, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (1804.50, 637.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 311.459 CPU sec, 17.533 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516718, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 497, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (834.71, 788.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1046, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (1090.05, 780.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 310.068 CPU sec, 17.378 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517135, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 908, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6148)
[0000][PE] mean and std.dev: (1524.13, 1504.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1617, 2657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5565)
[0000][PE] mean and std.dev: (1901.79, 1068.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 308.348 CPU sec, 17.338 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517063, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 906, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1015.57, 983.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.72, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1174, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (1149.93, 513.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 308.166 CPU sec, 17.247 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516656, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 513, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2706)
[0000][PE] mean and std.dev: (571.35, 428.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1102, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (1085.74, 551.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 313.587 CPU sec, 17.586 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516545, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 565, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (887.72, 798.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1619, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4470)
[0000][PE] mean and std.dev: (1590.00, 837.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 312.027 CPU sec, 17.476 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517092, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 746, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4837)
[0000][PE] mean and std.dev: (1287.67, 1274.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1309, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1399.79, 850.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 313.079 CPU sec, 17.530 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516495, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 410, 617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1363)
[0000][PE] mean and std.dev: (359.38, 195.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1185, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (1475.35, 1132.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 311.880 CPU sec, 17.458 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516738, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 1001, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (754.22, 622.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 1470, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1245.29, 667.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 316.326 CPU sec, 17.791 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516063, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 428, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2239)
[0000][PE] mean and std.dev: (615.75, 565.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1457, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4810)
[0000][PE] mean and std.dev: (1638.53, 1189.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 311.515 CPU sec, 17.436 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517180, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 399, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (757.67, 755.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1890, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6582)
[0000][PE] mean and std.dev: (1887.05, 1373.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 311.526 CPU sec, 17.510 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516728, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 410, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (690.04, 542.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1418, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (1325.76, 628.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 312.613 CPU sec, 17.563 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516881, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 522, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (773.14, 708.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1892, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (1700.06, 848.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 311.951 CPU sec, 17.599 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517270, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 426, 646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1552)
[0000][PE] mean and std.dev: (456.40, 359.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1376, 2759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6847)
[0000][PE] mean and std.dev: (1880.33, 1289.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 309.696 CPU sec, 17.507 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517226, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 385, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (916.04, 949.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (585, 1242, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6198)
[0000][PE] mean and std.dev: (1566.29, 1391.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 307.612 CPU sec, 17.259 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517227, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 407, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5183)
[0000][PE] mean and std.dev: (1040.15, 1310.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1149, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (1170.00, 662.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 312.425 CPU sec, 17.586 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 516792, 4, 25)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1141, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (1130.21, 464.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 312.086 CPU sec, 17.498 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516994, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 548, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (796.48, 791.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.31, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (906, 1425, 4077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10419)
[0000][PE] mean and std.dev: (2655.55, 2721.03)
[0000][PE] low and high boundaries for proper pairs: (1, 13590)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1499, 1859, 3848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8546)
[0000][PE] mean and std.dev: (2963.50, 2028.30)
[0000][PE] low and high boundaries for proper pairs: (1, 11077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 308.567 CPU sec, 17.303 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517334, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 532, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5301)
[0000][PE] mean and std.dev: (874.12, 817.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (657, 1217, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6222)
[0000][PE] mean and std.dev: (1811.92, 1610.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 313.363 CPU sec, 17.577 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517264, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 471, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7729)
[0000][PE] mean and std.dev: (1431.71, 1653.28)
[0000][PE] low and high boundaries for proper pairs: (1, 10223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.69, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1807, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5383)
[0000][PE] mean and std.dev: (1838.00, 995.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 309.331 CPU sec, 17.326 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517035, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (519, 1011, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (1227.89, 1122.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1540, 3213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7229)
[0000][PE] mean and std.dev: (2116.60, 1664.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 312.594 CPU sec, 17.628 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517101, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 659, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2253)
[0000][PE] mean and std.dev: (584.85, 385.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1501, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5106)
[0000][PE] mean and std.dev: (1454.00, 717.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 307.513 CPU sec, 17.238 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517522, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 534, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (1200.80, 1436.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 1617, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6661)
[0000][PE] mean and std.dev: (1686.57, 1223.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 313.597 CPU sec, 17.564 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 517158, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 345, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (624.46, 601.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1489, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5320)
[0000][PE] mean and std.dev: (1580.07, 941.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 309.556 CPU sec, 17.397 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517104, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 840, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (949.95, 757.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 1798, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4950)
[0000][PE] mean and std.dev: (1803.81, 783.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 308.946 CPU sec, 17.338 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516565, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 704, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (681.97, 483.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1578, 3985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10399)
[0000][PE] mean and std.dev: (1948.85, 1665.82)
[0000][PE] low and high boundaries for proper pairs: (1, 13606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 312.388 CPU sec, 17.487 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517324, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 480, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (934.20, 947.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1584, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (1534.78, 587.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 307.789 CPU sec, 17.242 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516832, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1241, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4438)
[0000][PE] mean and std.dev: (1118.84, 777.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.39, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (393, 1122, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (1074.70, 721.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 310.739 CPU sec, 17.418 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516931, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 798, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4739)
[0000][PE] mean and std.dev: (858.86, 734.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1406, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (1427.48, 836.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 312.258 CPU sec, 17.514 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516549, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 891, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4531)
[0000][PE] mean and std.dev: (987.53, 696.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1651, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5171)
[0000][PE] mean and std.dev: (1679.48, 889.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 309.506 CPU sec, 17.334 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516955, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 768, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3598)
[0000][PE] mean and std.dev: (1022.41, 807.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1441, 1555, 2615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1703.71, 793.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 311.049 CPU sec, 17.467 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516727, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 629, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5853)
[0000][PE] mean and std.dev: (1102.63, 1040.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1473, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (1423.31, 665.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 310.311 CPU sec, 17.373 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517482, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 456, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3465)
[0000][PE] mean and std.dev: (773.40, 697.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1224, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (1041.55, 492.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 309.584 CPU sec, 17.338 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517447, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 461, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1822)
[0000][PE] mean and std.dev: (509.35, 356.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1535, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (1415.65, 768.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 307.105 CPU sec, 17.216 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517369, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 458, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (652.69, 543.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1911, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4985)
[0000][PE] mean and std.dev: (1536.92, 947.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 310.157 CPU sec, 17.369 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517194, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 532, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (987.97, 1038.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.01, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1545, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6107)
[0000][PE] mean and std.dev: (1680.50, 1248.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 310.903 CPU sec, 17.398 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516890, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 465, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3719)
[0000][PE] mean and std.dev: (726.82, 727.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 997, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2839)
[0000][PE] mean and std.dev: (979.58, 422.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 307.436 CPU sec, 17.266 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517001, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 808, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3234)
[0000][PE] mean and std.dev: (863.36, 570.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1196, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7166)
[0000][PE] mean and std.dev: (1886.00, 1530.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 310.416 CPU sec, 17.416 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516999, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 377, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2124)
[0000][PE] mean and std.dev: (586.11, 492.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1376, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (1411.50, 817.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 308.268 CPU sec, 17.245 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516864, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 1009, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (1060.00, 856.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1211, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4677)
[0000][PE] mean and std.dev: (1360.56, 836.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 313.098 CPU sec, 17.534 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516430, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 525, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (761.76, 641.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.01, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1452, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4766)
[0000][PE] mean and std.dev: (1547.44, 1023.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 314.963 CPU sec, 17.626 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517498, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 783, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (718.88, 575.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1449, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5636)
[0000][PE] mean and std.dev: (1738.73, 1200.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 310.672 CPU sec, 17.414 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516815, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 995, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (877.63, 680.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1290, 3578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9062)
[0000][PE] mean and std.dev: (1901.80, 1413.38)
[0000][PE] low and high boundaries for proper pairs: (1, 11804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 310.635 CPU sec, 17.391 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516862, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 618, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (718.11, 547.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1205, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (1262.93, 514.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 311.147 CPU sec, 17.399 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517043, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 839, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4980)
[0000][PE] mean and std.dev: (1033.37, 887.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.79, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1426, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 2909)
[0000][PE] mean and std.dev: (1407.86, 542.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 311.335 CPU sec, 17.455 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516738, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 771, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4467)
[0000][PE] mean and std.dev: (874.54, 721.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1555, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (1248.50, 543.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 312.569 CPU sec, 17.496 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517057, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 731, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (952.42, 811.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (554, 1345, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4220)
[0000][PE] mean and std.dev: (1131.46, 613.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 315.760 CPU sec, 17.713 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516594, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 451, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2281)
[0000][PE] mean and std.dev: (453.71, 337.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1629, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5700)
[0000][PE] mean and std.dev: (2072.79, 1449.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 311.764 CPU sec, 17.450 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517071, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1105, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1025.14, 771.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.36, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1754, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4200)
[0000][PE] mean and std.dev: (1527.94, 710.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 314.253 CPU sec, 17.605 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516884, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 366, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (646.83, 639.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1500, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5669)
[0000][PE] mean and std.dev: (1911.94, 1104.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 311.119 CPU sec, 17.421 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517002, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 396, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (743.56, 587.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.68, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (570, 1158, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (1121.92, 717.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 310.603 CPU sec, 17.396 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516637, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 979, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5246)
[0000][PE] mean and std.dev: (1287.47, 1141.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1214, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (1165.77, 571.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 314.143 CPU sec, 17.585 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517059, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1008, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5607)
[0000][PE] mean and std.dev: (1385.65, 1273.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.75, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (684, 1094, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (1245.17, 891.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 310.660 CPU sec, 17.400 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517194, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 857, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (938.71, 794.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1268, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (1179.58, 735.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 308.092 CPU sec, 17.277 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516803, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 498, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (826.11, 737.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.54, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1287, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (1274.05, 513.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 308.715 CPU sec, 17.264 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516641, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 488, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (692.52, 662.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1132, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2302)
[0000][PE] mean and std.dev: (1087.00, 515.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 307.570 CPU sec, 17.271 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517066, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 963, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (895.10, 747.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 1142, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (851.85, 412.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 309.530 CPU sec, 17.428 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517231, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 771, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (774.75, 655.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (515.41, 121.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1296, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6757)
[0000][PE] mean and std.dev: (1780.71, 1529.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 309.514 CPU sec, 17.349 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517158, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 1157, 2367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6283)
[0000][PE] mean and std.dev: (1576.87, 1645.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.69, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1507, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (1482.79, 842.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 308.448 CPU sec, 17.257 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516810, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 763, 2933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8027)
[0000][PE] mean and std.dev: (1620.60, 1686.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 1190, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3344)
[0000][PE] mean and std.dev: (962.67, 566.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 311.817 CPU sec, 17.475 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517193, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 397, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (605.57, 508.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.99, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (321, 1506, 3333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9357)
[0000][PE] mean and std.dev: (1824.40, 1775.96)
[0000][PE] low and high boundaries for proper pairs: (1, 12369)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1507, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4038)
[0000][PE] mean and std.dev: (1229.56, 837.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 312.309 CPU sec, 17.480 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517129, 8, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 418, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3024)
[0000][PE] mean and std.dev: (689.09, 692.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1087, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (1288.08, 928.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 310.689 CPU sec, 17.413 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517118, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 746, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4056)
[0000][PE] mean and std.dev: (925.04, 776.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.35, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1535, 2059, 2961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5813)
[0000][PE] mean and std.dev: (2133.77, 1320.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 315.924 CPU sec, 17.730 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517107, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 445, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (842.68, 799.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1623, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (1522.89, 771.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 312.025 CPU sec, 17.489 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517319, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 469, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2326)
[0000][PE] mean and std.dev: (634.67, 485.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1338, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3222)
[0000][PE] mean and std.dev: (1303.31, 604.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 311.978 CPU sec, 17.515 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516719, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 548, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2265)
[0000][PE] mean and std.dev: (605.08, 445.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1470, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (1570.53, 553.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 309.822 CPU sec, 17.340 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516753, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 552, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (941.93, 879.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.01, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (143, 715, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8111)
[0000][PE] mean and std.dev: (989.20, 1250.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10767)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1165, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2694)
[0000][PE] mean and std.dev: (1094.50, 502.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 312.176 CPU sec, 17.494 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516706, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 615, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (1009.05, 1004.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.18, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1624, 2513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (1727.16, 914.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 314.926 CPU sec, 17.649 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517238, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 815, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6607)
[0000][PE] mean and std.dev: (1495.42, 1526.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1319, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5524)
[0000][PE] mean and std.dev: (1750.59, 1187.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 307.825 CPU sec, 17.250 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517197, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 737, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (718.60, 577.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1048, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (1040.17, 515.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 311.109 CPU sec, 17.423 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517041, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1045, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6323)
[0000][PE] mean and std.dev: (1243.88, 1149.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.84, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1536, 1902, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1824.33, 620.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 312.942 CPU sec, 17.523 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516708, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 712, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3564)
[0000][PE] mean and std.dev: (842.55, 728.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1447, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (1545.60, 976.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 312.390 CPU sec, 17.505 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516809, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 697, 2940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8002)
[0000][PE] mean and std.dev: (1522.19, 1717.12)
[0000][PE] low and high boundaries for proper pairs: (1, 10533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (470, 996, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6773)
[0000][PE] mean and std.dev: (1454.50, 1458.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 309.012 CPU sec, 17.303 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516893, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 551, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (945.45, 1032.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.35, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1415, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1631.28, 744.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 308.991 CPU sec, 17.305 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517325, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 946, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2414)
[0000][PE] mean and std.dev: (850.27, 394.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (714, 1295, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (1542.69, 1198.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 313.722 CPU sec, 17.580 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517207, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 542, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (764.77, 528.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (537, 983, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4929)
[0000][PE] mean and std.dev: (1193.00, 783.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 309.068 CPU sec, 17.332 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516528, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 797, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (858.23, 644.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1350, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (1323.72, 662.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 315.377 CPU sec, 17.666 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517123, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 678, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (851.26, 691.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.21, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1526, 1725, 3489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7415)
[0000][PE] mean and std.dev: (2389.25, 1765.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 308.543 CPU sec, 17.269 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517020, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 745, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (987.16, 875.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1376, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (1250.12, 344.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 307.341 CPU sec, 17.266 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517161, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 852, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3781)
[0000][PE] mean and std.dev: (902.19, 745.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.91, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1643, 2864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6456)
[0000][PE] mean and std.dev: (1760.39, 1344.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 324.037 CPU sec, 18.182 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516766, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (480, 707, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (996.70, 797.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1143, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (1091.00, 581.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 342.304 CPU sec, 19.165 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517282, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 771, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4944)
[0000][PE] mean and std.dev: (1003.00, 933.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1136, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5137)
[0000][PE] mean and std.dev: (1376.67, 763.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 340.950 CPU sec, 19.095 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516896, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 842, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (787.91, 545.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.64, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1217, 3093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7251)
[0000][PE] mean and std.dev: (1964.85, 1661.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 340.993 CPU sec, 19.099 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517093, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 641, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2526)
[0000][PE] mean and std.dev: (670.67, 475.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1296, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1682.58, 1031.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 340.917 CPU sec, 19.137 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517170, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 538, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (699.21, 491.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1118, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1563.15, 977.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 347.801 CPU sec, 19.495 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516791, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 797, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (788.50, 557.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1335, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3793)
[0000][PE] mean and std.dev: (1474.94, 694.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 346.221 CPU sec, 19.414 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516893, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 843, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5132)
[0000][PE] mean and std.dev: (1049.86, 1038.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 2197, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4814)
[0000][PE] mean and std.dev: (2037.86, 983.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 345.476 CPU sec, 19.371 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516740, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 566, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (648.33, 369.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.80, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 1106, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4881)
[0000][PE] mean and std.dev: (1215.14, 848.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 344.163 CPU sec, 19.277 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517011, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 381, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (570.56, 563.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.38, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1361, 1739, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5342)
[0000][PE] mean and std.dev: (1693.75, 913.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 322.653 CPU sec, 18.085 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517019, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 483, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (696.35, 692.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1410, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (1358.41, 534.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 309.758 CPU sec, 17.331 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517292, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 385, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (546.12, 490.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1433, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (1544.80, 903.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 316.869 CPU sec, 17.747 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517327, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 537, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2408)
[0000][PE] mean and std.dev: (583.29, 336.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.21, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1336, 2818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7132)
[0000][PE] mean and std.dev: (1719.35, 1502.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 309.230 CPU sec, 17.331 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517034, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 733, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (958.27, 818.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1247, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (1283.71, 590.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 309.443 CPU sec, 17.317 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516937, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 516, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2338)
[0000][PE] mean and std.dev: (739.12, 603.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1448, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3882)
[0000][PE] mean and std.dev: (1398.65, 801.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 310.010 CPU sec, 17.342 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516658, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 1092, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (1175.70, 814.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 309.897 CPU sec, 17.357 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517645, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 909, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (1056.82, 833.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1385, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (1244.83, 541.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 312.410 CPU sec, 17.495 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517338, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 594, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2069)
[0000][PE] mean and std.dev: (713.48, 431.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.32, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1341, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (1333.42, 632.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 308.655 CPU sec, 17.315 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516609, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 1053, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4997)
[0000][PE] mean and std.dev: (1018.20, 820.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (423, 1456, 6227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17835)
[0000][PE] mean and std.dev: (3153.60, 3422.42)
[0000][PE] low and high boundaries for proper pairs: (1, 23639)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1297, 2552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5470)
[0000][PE] mean and std.dev: (1540.64, 909.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 313.063 CPU sec, 17.626 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517025, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 422, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2349)
[0000][PE] mean and std.dev: (576.05, 421.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.31, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1184, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1453.00, 821.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 309.808 CPU sec, 17.415 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517447, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 518, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4196)
[0000][PE] mean and std.dev: (1016.66, 995.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1337, 3302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8190)
[0000][PE] mean and std.dev: (2046.33, 1800.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 312.672 CPU sec, 17.521 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516808, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 712, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (1169.29, 1063.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1439, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4055)
[0000][PE] mean and std.dev: (1708.39, 1100.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 312.035 CPU sec, 17.465 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516756, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 612, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (984.37, 959.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1109, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1262.81, 833.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 308.018 CPU sec, 17.241 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516994, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1264, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1116.13, 698.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1342, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (1394.64, 709.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 314.853 CPU sec, 17.624 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516939, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 621, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1029.95, 905.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1226, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3993)
[0000][PE] mean and std.dev: (1148.43, 659.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 307.652 CPU sec, 17.219 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517020, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 536, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (1008.60, 958.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.19, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 311.282 CPU sec, 17.455 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516975, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 603, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (698.81, 570.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.86, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 1080, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1802.64, 1553.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 314.070 CPU sec, 17.588 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517313, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 505, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (697.65, 581.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1434, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5448)
[0000][PE] mean and std.dev: (1584.53, 1127.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 313.137 CPU sec, 17.564 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517176, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 787, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (1021.50, 890.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.46, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1531, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1393.81, 831.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 308.260 CPU sec, 17.260 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516784, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 329, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4596)
[0000][PE] mean and std.dev: (966.76, 1056.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.33, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 2100, 3643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8705)
[0000][PE] mean and std.dev: (2452.16, 1843.47)
[0000][PE] low and high boundaries for proper pairs: (1, 11236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 311.208 CPU sec, 17.403 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516878, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 739, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6134)
[0000][PE] mean and std.dev: (1180.20, 1177.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1232, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (1209.62, 631.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 310.738 CPU sec, 17.391 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517262, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 607, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2412)
[0000][PE] mean and std.dev: (704.00, 518.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1369, 3536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8624)
[0000][PE] mean and std.dev: (1955.75, 1750.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 309.334 CPU sec, 17.334 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516867, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 581, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (644.79, 531.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1236, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (1184.38, 691.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 311.818 CPU sec, 17.457 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516970, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 818, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (1055.93, 993.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1625, 3331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7779)
[0000][PE] mean and std.dev: (2159.07, 1384.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 310.940 CPU sec, 17.411 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517048, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 778, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5216)
[0000][PE] mean and std.dev: (951.27, 814.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1608, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5912)
[0000][PE] mean and std.dev: (1535.86, 950.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 311.792 CPU sec, 17.524 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516687, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 787, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (856.06, 621.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1339, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (1153.19, 537.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 308.664 CPU sec, 17.279 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516688, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 470, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (676.78, 635.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1506, 2702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6004)
[0000][PE] mean and std.dev: (1877.10, 1212.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 309.927 CPU sec, 17.389 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516874, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 699, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (908.45, 723.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1265, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (1216.84, 489.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 317.036 CPU sec, 17.837 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517288, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 350, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3151)
[0000][PE] mean and std.dev: (528.22, 542.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1259, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (1223.69, 536.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 311.403 CPU sec, 17.419 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517196, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 394, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2390)
[0000][PE] mean and std.dev: (550.21, 423.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1472, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5180)
[0000][PE] mean and std.dev: (1498.07, 682.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 310.885 CPU sec, 17.405 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517133, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 473, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2638)
[0000][PE] mean and std.dev: (608.91, 466.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.59, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1558, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (279, 2754)
[0000][PE] mean and std.dev: (1329.08, 369.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 308.912 CPU sec, 17.301 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517006, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 1310, 3189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8951)
[0000][PE] mean and std.dev: (1858.05, 1879.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1061, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (1399.45, 829.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 314.015 CPU sec, 17.594 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516816, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 426, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4822)
[0000][PE] mean and std.dev: (947.25, 869.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.91, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (375, 768, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3468)
[0000][PE] mean and std.dev: (831.92, 504.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 311.658 CPU sec, 17.462 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516956, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 595, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2637)
[0000][PE] mean and std.dev: (681.45, 499.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1000, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (1559.89, 1160.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 311.823 CPU sec, 17.490 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516631, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (778, 1140, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1336.00, 838.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1327, 1648, 3291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7219)
[0000][PE] mean and std.dev: (2141.79, 1196.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 313.112 CPU sec, 17.545 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516616, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 905, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3525)
[0000][PE] mean and std.dev: (790.93, 561.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1299, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (1294.13, 703.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 307.812 CPU sec, 17.233 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516961, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 782, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1320.76, 1306.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1713, 3060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6830)
[0000][PE] mean and std.dev: (2037.64, 1110.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 314.450 CPU sec, 17.746 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516548, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 350, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (608.21, 583.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.70, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1328, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1308.70, 802.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 312.997 CPU sec, 17.526 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516884, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 610, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (924.81, 1086.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1039, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1003.89, 572.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 309.975 CPU sec, 17.327 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516619, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 470, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2450)
[0000][PE] mean and std.dev: (594.47, 563.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1212, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (1228.40, 503.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 312.745 CPU sec, 17.654 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517201, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 719, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (749.55, 687.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1455, 2839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6051)
[0000][PE] mean and std.dev: (1920.25, 1058.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 309.574 CPU sec, 17.351 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516919, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 474, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (656.55, 560.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1245, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3885)
[0000][PE] mean and std.dev: (1145.36, 629.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 312.674 CPU sec, 17.580 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517132, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 781, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1097.44, 1130.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1388, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5349)
[0000][PE] mean and std.dev: (1473.24, 922.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 309.509 CPU sec, 17.346 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516571, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 964, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (781.75, 524.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.35, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1261, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1432.70, 933.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 312.356 CPU sec, 17.491 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516872, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 586, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (715.55, 659.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.72, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1557, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1500.62, 867.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 307.708 CPU sec, 17.220 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516993, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 1239, 2939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7925)
[0000][PE] mean and std.dev: (1716.52, 1470.89)
[0000][PE] low and high boundaries for proper pairs: (1, 10418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.34, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1492, 2794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6032)
[0000][PE] mean and std.dev: (1905.73, 1071.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 312.997 CPU sec, 17.594 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516739, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 946, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4223)
[0000][PE] mean and std.dev: (1089.04, 887.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1335, 3523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8793)
[0000][PE] mean and std.dev: (1990.69, 2030.45)
[0000][PE] low and high boundaries for proper pairs: (1, 11428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 313.763 CPU sec, 17.667 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517041, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1259, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5040)
[0000][PE] mean and std.dev: (1298.75, 1127.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1263, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (81, 2341)
[0000][PE] mean and std.dev: (1208.14, 409.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 313.700 CPU sec, 17.594 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516928, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 863, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (1062.89, 789.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 2000, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4759)
[0000][PE] mean and std.dev: (1770.07, 853.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 318.418 CPU sec, 17.849 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517128, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 715, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (862.95, 836.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1255, 3784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9398)
[0000][PE] mean and std.dev: (2513.80, 2559.30)
[0000][PE] low and high boundaries for proper pairs: (1, 12751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 317.728 CPU sec, 17.844 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517151, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 699, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (865.18, 774.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1270, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (1251.54, 516.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 313.791 CPU sec, 17.599 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516704, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1252, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5875)
[0000][PE] mean and std.dev: (1320.76, 1112.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1360, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (1755.00, 1077.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 319.956 CPU sec, 17.974 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516495, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 757, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5391)
[0000][PE] mean and std.dev: (995.35, 902.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1389, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1496.77, 802.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 316.270 CPU sec, 17.717 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516998, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1345, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4091)
[0000][PE] mean and std.dev: (1014.00, 699.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (515.41, 121.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1244, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (1379.45, 817.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 318.819 CPU sec, 17.868 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517122, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 994, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (970.62, 867.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1825, 3626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8998)
[0000][PE] mean and std.dev: (2468.75, 2085.50)
[0000][PE] low and high boundaries for proper pairs: (1, 11684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 311.756 CPU sec, 17.445 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517241, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 485, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (763.63, 567.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1147, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2823)
[0000][PE] mean and std.dev: (1098.65, 471.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 311.344 CPU sec, 17.447 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517301, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 1116, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (947.08, 726.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1222, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (1181.00, 632.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 311.535 CPU sec, 17.466 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517022, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 428, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (901.86, 960.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1121, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (1265.29, 915.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 312.755 CPU sec, 17.523 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517240, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 554, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (667.62, 598.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1762, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5689)
[0000][PE] mean and std.dev: (1886.13, 1229.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 311.033 CPU sec, 17.443 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516987, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 431, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1336)
[0000][PE] mean and std.dev: (447.32, 232.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1061, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2750)
[0000][PE] mean and std.dev: (1114.38, 555.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 313.142 CPU sec, 17.523 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516876, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 743, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1123.68, 993.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.71, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1098, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (1063.18, 544.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 313.188 CPU sec, 17.537 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516851, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 617, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3861)
[0000][PE] mean and std.dev: (965.63, 825.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1425, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1563.33, 932.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 312.250 CPU sec, 17.501 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516994, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 463, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4064)
[0000][PE] mean and std.dev: (881.68, 730.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (546, 970, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3378)
[0000][PE] mean and std.dev: (1002.07, 739.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 313.829 CPU sec, 17.602 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516769, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 491, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (992.57, 1000.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1493, 3532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9084)
[0000][PE] mean and std.dev: (2085.93, 1879.44)
[0000][PE] low and high boundaries for proper pairs: (1, 11860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 313.403 CPU sec, 17.546 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517040, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 816, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (832.48, 725.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1390, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1477.21, 1011.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 310.264 CPU sec, 17.397 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517380, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 387, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (717.65, 664.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1399, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1387.05, 732.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 311.434 CPU sec, 17.438 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517195, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 634, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (734.46, 610.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (600, 1586, 2950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7650)
[0000][PE] mean and std.dev: (1662.47, 1140.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 318.106 CPU sec, 17.827 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516506, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 425, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (675.83, 650.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1388, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3105)
[0000][PE] mean and std.dev: (1138.23, 508.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 308.528 CPU sec, 17.270 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516936, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 830, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (922.00, 675.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1611, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1734.17, 868.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 313.574 CPU sec, 17.599 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516867, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 682, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3850)
[0000][PE] mean and std.dev: (704.85, 530.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1565, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5784)
[0000][PE] mean and std.dev: (1845.64, 1338.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 311.110 CPU sec, 17.413 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516849, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 903, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4354)
[0000][PE] mean and std.dev: (989.76, 899.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 800, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (973.57, 473.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 310.928 CPU sec, 17.418 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517037, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 1490, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5493)
[0000][PE] mean and std.dev: (1276.43, 1160.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1543, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6030)
[0000][PE] mean and std.dev: (1754.10, 1364.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 307.908 CPU sec, 17.227 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516822, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 694, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (860.32, 621.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.82, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1077, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3753)
[0000][PE] mean and std.dev: (1072.61, 636.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 310.317 CPU sec, 17.373 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517111, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 387, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2924)
[0000][PE] mean and std.dev: (586.12, 509.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1085, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3279)
[0000][PE] mean and std.dev: (1115.43, 564.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 306.876 CPU sec, 17.177 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517299, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 421, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2240)
[0000][PE] mean and std.dev: (484.76, 372.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1184, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (1436.12, 829.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 313.279 CPU sec, 17.531 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516707, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 1093, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (1066.07, 936.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1257, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1282.67, 772.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 307.372 CPU sec, 17.226 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517192, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 422, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (915.96, 1057.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1350, 3571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8771)
[0000][PE] mean and std.dev: (1883.44, 1348.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 309.657 CPU sec, 17.368 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516979, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 761, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5937)
[0000][PE] mean and std.dev: (1138.93, 1297.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1863, 3417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8207)
[0000][PE] mean and std.dev: (2132.61, 1523.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 307.930 CPU sec, 17.247 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516935, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 459, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2615)
[0000][PE] mean and std.dev: (545.39, 465.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1399, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5431)
[0000][PE] mean and std.dev: (1664.77, 1101.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 310.398 CPU sec, 17.371 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517444, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 479, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2242)
[0000][PE] mean and std.dev: (579.47, 332.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1149, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (1364.56, 979.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 311.025 CPU sec, 17.405 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516892, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 408, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1234)
[0000][PE] mean and std.dev: (404.50, 253.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.17, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1732, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5825)
[0000][PE] mean and std.dev: (1434.30, 661.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 314.817 CPU sec, 17.677 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517074, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 705, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (908.32, 840.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.72, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1692, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6307)
[0000][PE] mean and std.dev: (1784.31, 1235.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 311.195 CPU sec, 17.456 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517156, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 731, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1054.05, 1021.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1120, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (1392.13, 638.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 316.039 CPU sec, 17.697 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517287, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 1052, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (1004.86, 657.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1599, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4720)
[0000][PE] mean and std.dev: (1686.79, 916.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 304.893 CPU sec, 17.070 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516827, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 648, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (844.19, 799.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.93, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1167, 3285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7989)
[0000][PE] mean and std.dev: (2194.81, 1801.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 308.723 CPU sec, 17.291 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517559, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 590, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (790.66, 612.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.60, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (633, 1735, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4566)
[0000][PE] mean and std.dev: (1480.68, 1018.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 306.749 CPU sec, 17.176 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516729, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 953, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (921.56, 874.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.00, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1492, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4238)
[0000][PE] mean and std.dev: (1261.00, 529.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 311.771 CPU sec, 17.436 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517071, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 526, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (1146.74, 1126.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1629, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4630)
[0000][PE] mean and std.dev: (1465.90, 670.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 311.437 CPU sec, 17.464 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516993, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 584, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (1038.76, 1129.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1320, 1793, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (70, 3195)
[0000][PE] mean and std.dev: (1427.38, 392.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 311.694 CPU sec, 17.470 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516860, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 427, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (788.73, 876.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1503, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5881)
[0000][PE] mean and std.dev: (1520.87, 935.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 313.629 CPU sec, 17.656 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517590, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 453, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (952.48, 1008.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1126, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6297)
[0000][PE] mean and std.dev: (1380.63, 986.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 311.130 CPU sec, 17.455 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517383, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 427, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1729)
[0000][PE] mean and std.dev: (427.06, 347.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 311.031 CPU sec, 17.441 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516956, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 905, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (1029.09, 868.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1061, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2188)
[0000][PE] mean and std.dev: (961.67, 379.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 310.103 CPU sec, 17.364 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517194, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 447, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (875.96, 806.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1302, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (1183.71, 490.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 310.596 CPU sec, 17.452 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516847, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 479, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (858.25, 822.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.75, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1302, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5554)
[0000][PE] mean and std.dev: (1523.10, 912.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 310.089 CPU sec, 17.385 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516799, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 810, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (817.48, 629.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1345, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (1264.09, 683.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 311.764 CPU sec, 17.449 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516831, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 966, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4580)
[0000][PE] mean and std.dev: (1073.26, 1056.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1257, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5333)
[0000][PE] mean and std.dev: (1435.87, 1085.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 310.534 CPU sec, 17.420 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516879, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 436, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (736.29, 743.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1200, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (1263.71, 646.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 308.937 CPU sec, 17.420 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516736, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 476, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (954.26, 927.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1869, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5345)
[0000][PE] mean and std.dev: (1810.81, 1254.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 311.406 CPU sec, 17.445 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516576, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 542, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (794.58, 706.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (606, 2939, 4657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12759)
[0000][PE] mean and std.dev: (2902.60, 2596.40)
[0000][PE] low and high boundaries for proper pairs: (1, 16810)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1353, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (1115.73, 369.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 309.414 CPU sec, 17.367 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516879, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 941, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5219)
[0000][PE] mean and std.dev: (907.79, 725.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1298, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (1331.05, 722.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 314.186 CPU sec, 17.606 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516579, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 761, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4227)
[0000][PE] mean and std.dev: (962.78, 869.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1508, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (1271.45, 657.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 312.622 CPU sec, 17.530 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517221, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 600, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (793.91, 681.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 1412, 3181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7021)
[0000][PE] mean and std.dev: (1947.69, 1172.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 309.696 CPU sec, 17.348 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516783, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 1032, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6005)
[0000][PE] mean and std.dev: (1324.24, 1204.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1301, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4223)
[0000][PE] mean and std.dev: (1400.29, 684.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 312.836 CPU sec, 17.545 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517058, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 718, 2395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6515)
[0000][PE] mean and std.dev: (1507.50, 1848.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 311.826 CPU sec, 17.448 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517218, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 428, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (740.42, 783.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1474, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (1401.69, 751.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 309.684 CPU sec, 17.337 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516854, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 829, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (793.84, 575.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.24, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1527, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3191)
[0000][PE] mean and std.dev: (1507.10, 432.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 309.560 CPU sec, 17.343 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517310, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (522, 983, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (941.05, 712.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1670, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (1409.14, 582.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 306.963 CPU sec, 17.191 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516980, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 598, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (833.21, 823.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.71, 120.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1475, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (1728.25, 1125.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 310.624 CPU sec, 17.420 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516929, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 779, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3130)
[0000][PE] mean and std.dev: (782.77, 583.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1371, 1739, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4683)
[0000][PE] mean and std.dev: (1901.22, 832.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 307.976 CPU sec, 17.264 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516867, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 903, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4658)
[0000][PE] mean and std.dev: (882.11, 738.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1039, 4248, 5012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12958)
[0000][PE] mean and std.dev: (3660.70, 2503.15)
[0000][PE] low and high boundaries for proper pairs: (1, 16931)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (375, 1392, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4980)
[0000][PE] mean and std.dev: (1192.69, 881.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 312.788 CPU sec, 17.549 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516667, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 813, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (881.03, 704.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1400, 2689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6253)
[0000][PE] mean and std.dev: (1587.20, 905.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 311.250 CPU sec, 17.478 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516835, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 616, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (846.73, 759.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1599, 3276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7640)
[0000][PE] mean and std.dev: (2255.00, 1871.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 313.349 CPU sec, 17.550 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517566, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 865, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (690.56, 512.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1711, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5419)
[0000][PE] mean and std.dev: (2088.77, 1152.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 311.472 CPU sec, 17.464 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516514, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1028, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (825.91, 571.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.19, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1155, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (1274.89, 479.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 310.529 CPU sec, 17.374 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516523, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 554, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (743.74, 548.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1241, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6128)
[0000][PE] mean and std.dev: (1787.19, 1429.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 313.065 CPU sec, 17.534 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517164, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 860, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3933)
[0000][PE] mean and std.dev: (1224.15, 1147.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1162, 7049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19315)
[0000][PE] mean and std.dev: (3099.10, 3175.24)
[0000][PE] low and high boundaries for proper pairs: (1, 25448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 307.330 CPU sec, 17.210 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516814, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 379, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4806)
[0000][PE] mean and std.dev: (718.22, 800.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1169, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (1138.00, 677.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 310.904 CPU sec, 17.396 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516949, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 529, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (805.30, 613.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1298, 1407, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 3086)
[0000][PE] mean and std.dev: (1373.00, 533.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 311.584 CPU sec, 17.432 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516978, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 930, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (981.48, 841.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 973, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (908.64, 576.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 308.709 CPU sec, 17.270 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516603, 0, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 488, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2629)
[0000][PE] mean and std.dev: (613.15, 558.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.19, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 1640, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (1625.20, 806.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 308.914 CPU sec, 17.341 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517076, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 949, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (870.37, 539.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1534, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (1461.50, 559.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 304.332 CPU sec, 17.152 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517321, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 333, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2417)
[0000][PE] mean and std.dev: (611.07, 578.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 307.000 CPU sec, 17.183 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516980, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 404, 726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1486)
[0000][PE] mean and std.dev: (477.28, 291.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1218, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2908)
[0000][PE] mean and std.dev: (1200.07, 755.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 310.120 CPU sec, 17.379 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516984, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 466, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (654.10, 490.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1550, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5281)
[0000][PE] mean and std.dev: (1884.31, 1413.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 312.245 CPU sec, 17.496 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516932, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1185, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (974.47, 626.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1196, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (1267.52, 782.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 310.833 CPU sec, 17.426 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516925, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 614, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (802.91, 727.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.21, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1204, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (1420.47, 771.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 312.253 CPU sec, 17.495 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516792, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 452, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2207)
[0000][PE] mean and std.dev: (696.37, 568.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 1087, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (1219.64, 999.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 310.949 CPU sec, 17.408 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517178, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 548, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3850)
[0000][PE] mean and std.dev: (895.07, 854.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1532, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4951)
[0000][PE] mean and std.dev: (1401.62, 682.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 309.564 CPU sec, 17.332 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516825, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 498, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2561)
[0000][PE] mean and std.dev: (690.00, 541.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1436, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (1278.69, 608.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 310.857 CPU sec, 17.387 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516812, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 1107, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5525)
[0000][PE] mean and std.dev: (1312.46, 1076.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 2152, 3924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9470)
[0000][PE] mean and std.dev: (2636.30, 2306.63)
[0000][PE] low and high boundaries for proper pairs: (1, 12243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 307.771 CPU sec, 17.262 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516628, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 655, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (857.39, 827.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1256, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (1235.77, 575.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 308.879 CPU sec, 17.303 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517096, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 231, 388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 782)
[0000][PE] mean and std.dev: (222.31, 76.83)
[0000][PE] low and high boundaries for proper pairs: (1, 979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1458, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (1536.53, 945.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 310.844 CPU sec, 17.493 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516070, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 666, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2344)
[0000][PE] mean and std.dev: (674.55, 568.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1284, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5518)
[0000][PE] mean and std.dev: (1305.82, 840.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 314.231 CPU sec, 17.586 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516704, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 431, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (657.84, 520.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1295, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4470)
[0000][PE] mean and std.dev: (1375.43, 736.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 310.267 CPU sec, 17.387 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517396, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 597, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2852)
[0000][PE] mean and std.dev: (788.41, 642.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1422, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4509)
[0000][PE] mean and std.dev: (1511.17, 772.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 307.699 CPU sec, 17.289 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517143, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 493, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (740.70, 757.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1107, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3648)
[0000][PE] mean and std.dev: (1119.12, 587.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 306.339 CPU sec, 17.140 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517177, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 779, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (1015.18, 892.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1531, 3239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7781)
[0000][PE] mean and std.dev: (1994.41, 1717.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 309.366 CPU sec, 17.327 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517535, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 720, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (1012.43, 784.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1589, 1848, 3504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7334)
[0000][PE] mean and std.dev: (2157.00, 1144.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 305.929 CPU sec, 17.146 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516893, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 350, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (731.62, 817.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.32, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1459, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5913)
[0000][PE] mean and std.dev: (1833.32, 1130.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 310.922 CPU sec, 17.409 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517371, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 1008, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (988.44, 585.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.35, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1111, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2745)
[0000][PE] mean and std.dev: (1116.21, 628.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 307.601 CPU sec, 17.223 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517339, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 358, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (544.85, 555.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1190, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (1177.40, 511.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 308.837 CPU sec, 17.307 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517027, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 564, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (754.39, 668.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.56, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1336, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5078)
[0000][PE] mean and std.dev: (1671.55, 1052.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 313.016 CPU sec, 17.536 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517020, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 707, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (880.46, 797.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.20, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1419, 2727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6163)
[0000][PE] mean and std.dev: (1833.06, 1123.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 309.330 CPU sec, 17.334 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517194, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1029, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5231)
[0000][PE] mean and std.dev: (1019.84, 1023.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1650, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1655.32, 898.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 312.989 CPU sec, 17.532 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516882, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 498, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (742.88, 657.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1738, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1707.00, 1053.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 310.827 CPU sec, 17.404 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516886, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 441, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (873.43, 803.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1297, 1505, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (1499.56, 652.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 310.053 CPU sec, 17.360 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516901, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 502, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2108)
[0000][PE] mean and std.dev: (536.77, 347.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1311, 3251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7755)
[0000][PE] mean and std.dev: (1957.14, 1544.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 310.646 CPU sec, 17.397 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517425, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 536, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (1035.70, 1087.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.91, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1472, 3238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7518)
[0000][PE] mean and std.dev: (1816.95, 1398.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 312.158 CPU sec, 17.505 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517081, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 388, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3205)
[0000][PE] mean and std.dev: (705.56, 556.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1741, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5177)
[0000][PE] mean and std.dev: (1639.84, 1206.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 310.851 CPU sec, 17.426 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517314, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 687, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (798.10, 652.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1477, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (1601.54, 954.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 316.794 CPU sec, 17.759 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517403, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 601, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (794.00, 848.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (470, 1160, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5045)
[0000][PE] mean and std.dev: (1109.17, 760.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 309.255 CPU sec, 17.339 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517090, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 389, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1026.59, 1179.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 989, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4768)
[0000][PE] mean and std.dev: (1284.50, 704.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 308.031 CPU sec, 17.256 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516982, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 463, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1118)
[0000][PE] mean and std.dev: (438.00, 176.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1214, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5158)
[0000][PE] mean and std.dev: (1626.82, 957.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 310.875 CPU sec, 17.449 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517401, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 412, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2361)
[0000][PE] mean and std.dev: (608.23, 506.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.33, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1302, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1273.00, 637.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 314.729 CPU sec, 17.659 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517585, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 796, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5877)
[0000][PE] mean and std.dev: (1094.71, 981.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 896, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (854.87, 516.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 312.236 CPU sec, 17.486 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517423, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 558, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3843)
[0000][PE] mean and std.dev: (836.71, 660.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1405, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (1584.36, 698.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 321.734 CPU sec, 18.042 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517320, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 505, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (530.45, 520.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1228, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (1271.64, 791.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 308.261 CPU sec, 17.285 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517101, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 665, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1314.86, 1323.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1471, 4119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10397)
[0000][PE] mean and std.dev: (2512.59, 2245.25)
[0000][PE] low and high boundaries for proper pairs: (1, 13536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 310.344 CPU sec, 17.405 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517252, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 957, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (972.84, 897.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1149, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2578)
[0000][PE] mean and std.dev: (1072.18, 487.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 312.841 CPU sec, 17.606 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517195, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1043, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1026.41, 883.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.67, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1373, 3053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7177)
[0000][PE] mean and std.dev: (1615.00, 1027.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 315.069 CPU sec, 17.697 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517010, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 964, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (938.32, 849.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1471, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1337.33, 753.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 313.405 CPU sec, 17.572 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517043, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 545, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (996.87, 829.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.67, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (480, 1423, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5364)
[0000][PE] mean and std.dev: (1398.89, 899.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 314.662 CPU sec, 17.622 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516973, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 763, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (961.19, 793.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.74, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1344, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (1315.68, 798.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 312.400 CPU sec, 17.501 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517208, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 767, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (859.89, 681.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.93, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 316.325 CPU sec, 17.724 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517292, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 1332, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5877)
[0000][PE] mean and std.dev: (1335.22, 1202.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.70, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1000, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3520)
[0000][PE] mean and std.dev: (1176.00, 853.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 311.885 CPU sec, 17.456 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516817, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 531, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1043.21, 954.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.73, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1367, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (1127.94, 530.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 315.772 CPU sec, 17.709 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516999, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 788, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4728)
[0000][PE] mean and std.dev: (1212.78, 1118.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.25, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1733, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (1618.85, 641.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 311.681 CPU sec, 17.475 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516736, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 701, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (790.25, 544.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1516, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4941)
[0000][PE] mean and std.dev: (1460.84, 881.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 315.350 CPU sec, 17.687 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516755, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 530, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (1012.36, 1197.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1855, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1899.54, 1227.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 312.061 CPU sec, 17.469 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517004, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 977, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5842)
[0000][PE] mean and std.dev: (1157.19, 1127.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1126, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6898)
[0000][PE] mean and std.dev: (1817.00, 1580.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 313.675 CPU sec, 17.573 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517113, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 542, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (934.94, 903.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.74, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1318, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (1359.13, 703.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 313.005 CPU sec, 17.540 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517057, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 403, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2816)
[0000][PE] mean and std.dev: (634.20, 582.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1185, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5002)
[0000][PE] mean and std.dev: (1388.79, 945.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 312.889 CPU sec, 17.531 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517058, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 470, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (907.26, 864.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (628, 1349, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (1063.44, 594.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1277, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1550.73, 1062.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 316.646 CPU sec, 17.743 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517215, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 720, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (846.05, 620.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1489, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (1520.22, 673.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 314.073 CPU sec, 17.572 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517264, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 469, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (786.25, 728.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.41, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1325, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5193)
[0000][PE] mean and std.dev: (1342.68, 724.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 311.720 CPU sec, 17.465 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517303, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 623, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4639)
[0000][PE] mean and std.dev: (977.50, 843.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1095, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (1547.55, 1081.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 312.688 CPU sec, 17.524 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516745, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 511, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (741.20, 847.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 1310, 3083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7939)
[0000][PE] mean and std.dev: (1813.06, 1531.58)
[0000][PE] low and high boundaries for proper pairs: (1, 10367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 316.566 CPU sec, 17.722 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516772, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 776, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (996.39, 821.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.79, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1530, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (1577.73, 433.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 315.828 CPU sec, 17.695 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517391, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 472, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2542)
[0000][PE] mean and std.dev: (712.24, 641.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.75, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1299, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (1265.59, 572.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 315.607 CPU sec, 17.695 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516376, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 475, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (632.58, 539.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1190, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3859)
[0000][PE] mean and std.dev: (1520.22, 1056.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 317.857 CPU sec, 17.822 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516392, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1282, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3919)
[0000][PE] mean and std.dev: (1023.75, 793.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1290, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1387.00, 791.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 319.379 CPU sec, 17.899 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517264, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (506, 821, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (969.06, 637.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1506, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (1509.40, 574.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 316.288 CPU sec, 17.713 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516847, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 1119, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (975.47, 773.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (591, 1284, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (1299.24, 819.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 319.170 CPU sec, 17.878 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517103, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 511, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2254)
[0000][PE] mean and std.dev: (690.97, 525.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1774, 2966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6408)
[0000][PE] mean and std.dev: (2048.10, 1066.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 318.661 CPU sec, 17.851 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517503, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 752, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4719)
[0000][PE] mean and std.dev: (1110.05, 1096.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1011, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (971.38, 403.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 315.783 CPU sec, 17.696 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516711, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 708, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2118)
[0000][PE] mean and std.dev: (746.13, 420.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1312, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (1294.80, 576.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 313.557 CPU sec, 17.583 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516783, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 543, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1170.83, 1160.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1435, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (1267.78, 654.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 313.616 CPU sec, 17.596 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517015, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (694, 1718, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5941)
[0000][PE] mean and std.dev: (1676.00, 1189.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1628, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1395.17, 569.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 314.329 CPU sec, 17.598 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516960, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 484, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (862.32, 822.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1434, 1727, 2775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5457)
[0000][PE] mean and std.dev: (2049.14, 1294.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 310.196 CPU sec, 17.365 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516904, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 949, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (967.60, 875.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.20, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1198, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (1005.62, 569.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 309.685 CPU sec, 17.361 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516824, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 333, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (765.81, 781.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1139, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1255.35, 744.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 313.170 CPU sec, 17.549 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517150, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 434, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1530)
[0000][PE] mean and std.dev: (453.76, 193.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1469, 1871, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5285)
[0000][PE] mean and std.dev: (1943.00, 982.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 314.851 CPU sec, 17.648 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517282, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (624, 1339, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5307)
[0000][PE] mean and std.dev: (1424.42, 1090.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1910, 2900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6928)
[0000][PE] mean and std.dev: (1724.83, 1054.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 315.035 CPU sec, 17.646 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517416, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 564, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (839.29, 757.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1395, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4466)
[0000][PE] mean and std.dev: (1445.52, 931.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 312.408 CPU sec, 17.484 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516720, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 653, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1194.38, 1220.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1390, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4467)
[0000][PE] mean and std.dev: (1375.44, 641.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 313.277 CPU sec, 17.535 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517192, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 384, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (852.19, 894.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.73, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1239, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6563)
[0000][PE] mean and std.dev: (1685.57, 1038.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 311.364 CPU sec, 17.452 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516715, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 722, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (880.15, 699.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.67, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 1314, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1317.24, 835.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 315.060 CPU sec, 17.661 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517017, 12, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 675, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (622.92, 501.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (633, 2659, 5880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16374)
[0000][PE] mean and std.dev: (3205.42, 3145.18)
[0000][PE] low and high boundaries for proper pairs: (1, 21621)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1448, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (1440.58, 519.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 314.642 CPU sec, 17.619 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517503, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 554, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (780.55, 651.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 315.910 CPU sec, 17.734 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517112, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 1309, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (1181.43, 912.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 311.677 CPU sec, 17.442 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516782, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 449, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (852.48, 828.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1722, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4448)
[0000][PE] mean and std.dev: (1538.13, 751.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 311.579 CPU sec, 17.456 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516993, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 378, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (864.79, 782.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 1030, 3773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10413)
[0000][PE] mean and std.dev: (1924.06, 2232.44)
[0000][PE] low and high boundaries for proper pairs: (1, 13733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 327.699 CPU sec, 18.389 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517202, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 488, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3531)
[0000][PE] mean and std.dev: (749.75, 637.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (557, 1322, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5366)
[0000][PE] mean and std.dev: (1379.00, 958.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 334.393 CPU sec, 18.743 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516613, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1065, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (924.30, 724.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1063, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (1205.08, 706.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 324.063 CPU sec, 18.155 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516611, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 1205, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6044)
[0000][PE] mean and std.dev: (1500.18, 1576.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1381, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (1382.54, 662.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 314.906 CPU sec, 17.652 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516455, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 727, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (701.82, 684.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.21, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 313.297 CPU sec, 17.548 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517057, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 326, 786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1832)
[0000][PE] mean and std.dev: (518.69, 435.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.21, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1420, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5239)
[0000][PE] mean and std.dev: (1990.55, 1295.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 315.384 CPU sec, 17.752 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516953, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 488, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2790)
[0000][PE] mean and std.dev: (607.10, 489.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.88, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1371, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4368)
[0000][PE] mean and std.dev: (1541.13, 921.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 315.157 CPU sec, 17.921 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517178, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 467, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (721.73, 602.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 2081, 3005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6743)
[0000][PE] mean and std.dev: (2018.74, 1327.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 316.434 CPU sec, 17.740 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517185, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 711, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (936.68, 746.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1304, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1274.16, 531.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 312.980 CPU sec, 17.553 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517094, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 619, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (905.17, 801.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1354, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4201)
[0000][PE] mean and std.dev: (1263.30, 796.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 310.309 CPU sec, 17.407 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516750, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 1065, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (1171.38, 1018.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1298, 1707, 2501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4907)
[0000][PE] mean and std.dev: (1929.33, 937.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 312.973 CPU sec, 17.526 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517033, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 1085, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (1126.33, 800.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1064, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2613)
[0000][PE] mean and std.dev: (1064.67, 549.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 313.198 CPU sec, 17.747 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516878, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 484, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2726)
[0000][PE] mean and std.dev: (623.30, 500.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1269, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1344.94, 748.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 317.010 CPU sec, 17.765 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516827, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 365, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2790)
[0000][PE] mean and std.dev: (658.78, 530.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1503, 1853, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5997)
[0000][PE] mean and std.dev: (2210.79, 1308.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 314.005 CPU sec, 17.601 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516824, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 528, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (967.30, 803.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1470, 3277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7935)
[0000][PE] mean and std.dev: (2060.58, 1504.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 314.685 CPU sec, 17.631 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516992, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 571, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (831.06, 749.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 900, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2379)
[0000][PE] mean and std.dev: (1048.80, 461.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 313.925 CPU sec, 17.596 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516626, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 699, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1291.78, 1357.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.17, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (613, 1138, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (1269.89, 798.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 316.849 CPU sec, 17.751 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516876, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 570, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5815)
[0000][PE] mean and std.dev: (1351.73, 1223.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1377, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5793)
[0000][PE] mean and std.dev: (1698.45, 1354.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 314.512 CPU sec, 17.626 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517142, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 497, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (731.65, 634.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1486, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1702.92, 829.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 313.284 CPU sec, 17.559 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516883, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 501, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (825.65, 617.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1296, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3017)
[0000][PE] mean and std.dev: (1187.14, 609.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 315.232 CPU sec, 17.716 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517031, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 769, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4315)
[0000][PE] mean and std.dev: (1020.04, 1042.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 1341, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5332)
[0000][PE] mean and std.dev: (1475.37, 1077.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 315.982 CPU sec, 17.707 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516906, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 424, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3643)
[0000][PE] mean and std.dev: (763.31, 616.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1245, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (1340.38, 774.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 315.501 CPU sec, 17.714 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516830, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 401, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (682.71, 649.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1413, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4562)
[0000][PE] mean and std.dev: (1315.76, 872.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 314.165 CPU sec, 17.600 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517187, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 664, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (920.80, 676.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1447, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (1367.00, 851.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 314.989 CPU sec, 17.642 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517398, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 434, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2328)
[0000][PE] mean and std.dev: (595.10, 423.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1659, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (1519.84, 828.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 314.028 CPU sec, 17.645 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517204, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 384, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (559.40, 430.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1284, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (1339.80, 532.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 312.844 CPU sec, 17.593 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517566, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 560, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5241)
[0000][PE] mean and std.dev: (1029.12, 891.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.27, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1353, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (1208.38, 665.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 312.764 CPU sec, 17.519 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516785, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 835, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5342)
[0000][PE] mean and std.dev: (1220.75, 1162.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (515.38, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1382, 1595, 2743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (1861.53, 995.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 313.688 CPU sec, 17.556 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516717, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 701, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (891.78, 768.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.01, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1354, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (1301.95, 736.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 315.629 CPU sec, 17.677 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516818, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 488, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (674.71, 575.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1541, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6618)
[0000][PE] mean and std.dev: (1834.44, 1269.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 311.002 CPU sec, 17.447 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516861, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 517, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (826.54, 861.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1536, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4832)
[0000][PE] mean and std.dev: (1383.57, 875.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 314.670 CPU sec, 17.665 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516920, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 600, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (898.71, 818.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1047, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2832)
[0000][PE] mean and std.dev: (1016.46, 474.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 314.186 CPU sec, 17.583 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517200, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 837, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5059)
[0000][PE] mean and std.dev: (1161.65, 1110.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1424, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (1270.21, 603.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 311.411 CPU sec, 17.540 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516790, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 868, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (750.32, 522.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1183, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4676)
[0000][PE] mean and std.dev: (1610.21, 808.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 311.419 CPU sec, 17.447 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517138, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 866, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (794.95, 609.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1365, 2132, 2899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5967)
[0000][PE] mean and std.dev: (1959.60, 822.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 312.784 CPU sec, 17.572 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517241, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 1251, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5725)
[0000][PE] mean and std.dev: (1353.89, 1274.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1428, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (1416.28, 741.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 311.888 CPU sec, 17.498 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517132, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 452, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1894)
[0000][PE] mean and std.dev: (506.33, 346.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1257, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7054)
[0000][PE] mean and std.dev: (1778.26, 1419.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 311.496 CPU sec, 17.450 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517254, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 1125, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6782)
[0000][PE] mean and std.dev: (1378.07, 1500.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1582, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (1411.57, 612.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 312.176 CPU sec, 17.471 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517000, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 341, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (672.80, 709.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.83, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 1420, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5092)
[0000][PE] mean and std.dev: (1432.29, 1137.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 310.655 CPU sec, 17.401 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516759, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 557, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (747.58, 621.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.41, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 312.611 CPU sec, 17.519 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517039, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 837, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5064)
[0000][PE] mean and std.dev: (1093.08, 1031.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.67, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1380, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (1313.21, 649.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 313.145 CPU sec, 17.572 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517057, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 812, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (921.74, 767.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1056, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3548)
[0000][PE] mean and std.dev: (1089.91, 534.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 312.860 CPU sec, 17.512 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516628, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 419, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (674.37, 641.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1713, 3358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7832)
[0000][PE] mean and std.dev: (2066.00, 1150.63)
[0000][PE] low and high boundaries for proper pairs: (1, 10069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 313.228 CPU sec, 17.548 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517329, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 365, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2912)
[0000][PE] mean and std.dev: (572.18, 528.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 844, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (915.58, 525.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 312.451 CPU sec, 17.500 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517384, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 671, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5790)
[0000][PE] mean and std.dev: (1117.50, 1059.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1541, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (1533.50, 774.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 310.463 CPU sec, 17.392 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517997, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 592, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (930.12, 881.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (379, 658, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5818)
[0000][PE] mean and std.dev: (1290.17, 1334.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 309.396 CPU sec, 17.329 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516908, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 373, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (1001.10, 1130.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1537, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (1444.95, 671.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 317.539 CPU sec, 17.808 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517075, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 513, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (898.70, 911.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1394, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (1394.44, 618.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 316.907 CPU sec, 17.748 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516791, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 390, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (975.32, 948.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1334, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (152, 2402)
[0000][PE] mean and std.dev: (1137.08, 417.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 310.981 CPU sec, 17.422 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516854, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 829, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4650)
[0000][PE] mean and std.dev: (1100.88, 1147.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1971, 3485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8523)
[0000][PE] mean and std.dev: (2113.38, 1315.79)
[0000][PE] low and high boundaries for proper pairs: (1, 11042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 312.514 CPU sec, 17.508 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516895, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 499, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (877.71, 805.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1243, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (1209.27, 751.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 312.332 CPU sec, 17.493 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517473, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 959, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (897.23, 679.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.61, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1346, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (1414.09, 755.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 313.560 CPU sec, 17.604 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516564, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 1333, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (1175.39, 952.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.77, 120.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1373, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5020)
[0000][PE] mean and std.dev: (1355.58, 866.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 320.368 CPU sec, 17.960 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516909, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 648, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (805.25, 616.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1522, 3494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8272)
[0000][PE] mean and std.dev: (2192.65, 1958.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 311.762 CPU sec, 17.475 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517513, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 322, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (722.62, 761.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1207, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6055)
[0000][PE] mean and std.dev: (1605.38, 1142.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 311.702 CPU sec, 17.501 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517321, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 433, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (897.14, 854.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1096, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1484.67, 984.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 313.831 CPU sec, 17.580 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516418, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 911, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6658)
[0000][PE] mean and std.dev: (1328.23, 1140.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1320, 1674, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (1540.20, 923.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 311.411 CPU sec, 17.455 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516575, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 646, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5003)
[0000][PE] mean and std.dev: (1131.81, 1236.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.43, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1433, 3591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8641)
[0000][PE] mean and std.dev: (2189.04, 1943.66)
[0000][PE] low and high boundaries for proper pairs: (1, 11166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 313.267 CPU sec, 17.560 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517329, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 580, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2273)
[0000][PE] mean and std.dev: (627.21, 501.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1601, 3005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6963)
[0000][PE] mean and std.dev: (1743.41, 1085.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 310.685 CPU sec, 17.406 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517159, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (536, 911, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (922.00, 518.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 120.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1745, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (1638.62, 877.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 315.073 CPU sec, 17.676 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516740, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 966, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4799)
[0000][PE] mean and std.dev: (987.96, 888.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.38, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1533, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1658.91, 1103.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 318.494 CPU sec, 17.858 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517198, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 883, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (814.54, 681.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1360, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (1376.05, 834.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 314.852 CPU sec, 17.680 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516975, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 425, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5384)
[0000][PE] mean and std.dev: (1046.47, 1065.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1092, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (1319.47, 815.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 312.951 CPU sec, 17.531 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517007, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 980, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1181.54, 1054.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (363, 767, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (1098.00, 901.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 315.269 CPU sec, 17.662 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516719, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 601, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (779.30, 644.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1277, 2194, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1945.14, 1090.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 313.217 CPU sec, 17.556 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517397, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (467, 821, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5336)
[0000][PE] mean and std.dev: (1613.26, 1618.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1329, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (17, 2932)
[0000][PE] mean and std.dev: (1433.71, 572.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 313.508 CPU sec, 17.554 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517123, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 779, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (680.57, 458.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1450, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (1296.82, 734.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 314.744 CPU sec, 17.648 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517216, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 886, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (871.58, 787.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1259, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (1288.06, 624.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 311.164 CPU sec, 17.427 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517001, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 642, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (740.42, 593.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1107, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (1268.38, 721.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 313.134 CPU sec, 17.541 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516566, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 438, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2865)
[0000][PE] mean and std.dev: (541.56, 517.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1470, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5179)
[0000][PE] mean and std.dev: (1667.26, 1215.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 311.233 CPU sec, 17.442 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517420, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 1292, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (1101.00, 866.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1561, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4856)
[0000][PE] mean and std.dev: (1564.56, 781.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 310.706 CPU sec, 17.401 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516859, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 421, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (661.43, 695.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.23, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 1088, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (1060.31, 519.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 315.107 CPU sec, 17.660 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517336, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 747, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (860.58, 653.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1325, 1599, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (511, 2546)
[0000][PE] mean and std.dev: (1521.50, 232.58)
[0000][PE] low and high boundaries for proper pairs: (104, 2953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 309.645 CPU sec, 17.367 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517207, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 624, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2703)
[0000][PE] mean and std.dev: (609.10, 476.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1355, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (1381.00, 786.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 314.033 CPU sec, 17.615 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516826, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 564, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2799)
[0000][PE] mean and std.dev: (796.50, 662.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.19, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (540, 1232, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (1284.63, 802.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 313.534 CPU sec, 17.559 real sec
[0000] Calling mem_process_seqs.., task: 1098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517023, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 1064, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5006)
[0000][PE] mean and std.dev: (1415.45, 1259.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.57, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 1335, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5576)
[0000][PE] mean and std.dev: (1558.36, 1136.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 316.360 CPU sec, 17.745 real sec
[0000] Calling mem_process_seqs.., task: 1099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516473, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 1198, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (1087.07, 787.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 314.645 CPU sec, 17.633 real sec
[0000] Calling mem_process_seqs.., task: 1100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516701, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (713, 1634, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5642)
[0000][PE] mean and std.dev: (1479.89, 1168.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (414, 1294, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1280.29, 910.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 315.225 CPU sec, 17.679 real sec
[0000] Calling mem_process_seqs.., task: 1101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516679, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 824, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (938.58, 755.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 835, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5227)
[0000][PE] mean and std.dev: (1309.87, 761.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 319.348 CPU sec, 17.904 real sec
[0000] Calling mem_process_seqs.., task: 1102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516717, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 841, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (803.11, 487.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1568, 3280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8112)
[0000][PE] mean and std.dev: (2096.62, 1519.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 316.566 CPU sec, 17.727 real sec
[0000] Calling mem_process_seqs.., task: 1103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517186, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 821, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (835.47, 742.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 1492, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (359, 2614)
[0000][PE] mean and std.dev: (1400.10, 443.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 313.585 CPU sec, 17.573 real sec
[0000] Calling mem_process_seqs.., task: 1104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516675, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 465, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (669.11, 560.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.70, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1202, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2924)
[0000][PE] mean and std.dev: (1203.55, 554.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 315.788 CPU sec, 17.708 real sec
[0000] Calling mem_process_seqs.., task: 1105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517385, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 386, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4696)
[0000][PE] mean and std.dev: (785.10, 963.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (475, 1207, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (992.62, 477.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 310.149 CPU sec, 17.374 real sec
[0000] Calling mem_process_seqs.., task: 1106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516557, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 624, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (765.29, 651.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1404, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (1573.07, 938.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 316.033 CPU sec, 17.690 real sec
[0000] Calling mem_process_seqs.., task: 1107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517115, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 895, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4629)
[0000][PE] mean and std.dev: (918.90, 751.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.86, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 952, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2694)
[0000][PE] mean and std.dev: (966.83, 547.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 311.464 CPU sec, 17.433 real sec
[0000] Calling mem_process_seqs.., task: 1108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516725, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 1149, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5329)
[0000][PE] mean and std.dev: (1325.07, 1148.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1358, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (1152.29, 422.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 315.117 CPU sec, 17.654 real sec
[0000] Calling mem_process_seqs.., task: 1109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517093, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 507, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (808.50, 761.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 954, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (1124.00, 718.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 313.554 CPU sec, 17.560 real sec
[0000] Calling mem_process_seqs.., task: 1110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516666, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 498, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (1081.42, 1184.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.28, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 893, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (1269.40, 853.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 313.850 CPU sec, 17.600 real sec
[0000] Calling mem_process_seqs.., task: 1111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517216, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 406, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (560.24, 548.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1547, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1485.31, 799.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 313.472 CPU sec, 17.551 real sec
[0000] Calling mem_process_seqs.., task: 1112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516824, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 709, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (947.63, 963.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1544, 2294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5026)
[0000][PE] mean and std.dev: (1619.57, 1116.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 309.457 CPU sec, 17.339 real sec
[0000] Calling mem_process_seqs.., task: 1113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516966, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 370, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (777.63, 729.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1514, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (1496.88, 565.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 307.911 CPU sec, 17.236 real sec
[0000] Calling mem_process_seqs.., task: 1114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516457, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 536, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2606)
[0000][PE] mean and std.dev: (565.63, 372.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1058, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (1195.86, 708.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 312.646 CPU sec, 17.511 real sec
[0000] Calling mem_process_seqs.., task: 1115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516735, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 272, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1626)
[0000][PE] mean and std.dev: (299.33, 214.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1702, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5552)
[0000][PE] mean and std.dev: (1856.10, 1024.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 312.296 CPU sec, 17.542 real sec
[0000] Calling mem_process_seqs.., task: 1116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517081, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 549, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5990)
[0000][PE] mean and std.dev: (1114.17, 1212.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.75, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1252, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1270.28, 684.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 309.255 CPU sec, 17.323 real sec
[0000] Calling mem_process_seqs.., task: 1117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516974, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 338, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (963.77, 1086.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 2145, 2904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (2173.20, 1409.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 314.441 CPU sec, 17.610 real sec
[0000] Calling mem_process_seqs.., task: 1118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516783, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 677, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (804.10, 725.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1622, 2781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6839)
[0000][PE] mean and std.dev: (1975.71, 1564.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 312.112 CPU sec, 17.465 real sec
[0000] Calling mem_process_seqs.., task: 1119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516820, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 402, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (10, 805)
[0000][PE] mean and std.dev: (337.46, 124.75)
[0000][PE] low and high boundaries for proper pairs: (1, 964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1486, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (1498.67, 738.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 309.779 CPU sec, 17.379 real sec
[0000] Calling mem_process_seqs.., task: 1120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516777, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 605, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (816.37, 859.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1244, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (1295.28, 625.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 313.497 CPU sec, 17.578 real sec
[0000] Calling mem_process_seqs.., task: 1121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516887, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 643, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (795.31, 638.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1455, 2795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6945)
[0000][PE] mean and std.dev: (1649.00, 939.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 312.189 CPU sec, 17.545 real sec
[0000] Calling mem_process_seqs.., task: 1122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516905, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (641, 1013, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (1141.94, 927.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1709, 3494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8156)
[0000][PE] mean and std.dev: (2284.00, 1785.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 310.327 CPU sec, 17.408 real sec
[0000] Calling mem_process_seqs.., task: 1123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517074, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 493, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (765.03, 729.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (415, 927, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4597)
[0000][PE] mean and std.dev: (1060.68, 785.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 312.851 CPU sec, 17.559 real sec
[0000] Calling mem_process_seqs.., task: 1124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517085, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 469, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6362)
[0000][PE] mean and std.dev: (1115.96, 1265.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1363, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (1375.40, 636.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 313.836 CPU sec, 17.600 real sec
[0000] Calling mem_process_seqs.., task: 1125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517188, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 761, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (824.21, 817.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1461, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (1415.89, 826.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 309.960 CPU sec, 17.350 real sec
[0000] Calling mem_process_seqs.., task: 1126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516416, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 766, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (794.07, 644.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1227, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1295.18, 841.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 312.665 CPU sec, 17.527 real sec
[0000] Calling mem_process_seqs.., task: 1127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516783, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 759, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (1021.30, 860.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1329, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1246.17, 755.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 311.262 CPU sec, 17.423 real sec
[0000] Calling mem_process_seqs.., task: 1128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516694, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 671, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (828.46, 587.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.40, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1047, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (1096.71, 517.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 311.594 CPU sec, 17.442 real sec
[0000] Calling mem_process_seqs.., task: 1129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516812, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 635, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6473)
[0000][PE] mean and std.dev: (1123.17, 1214.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1485, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1569.00, 914.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 312.009 CPU sec, 17.483 real sec
[0000] Calling mem_process_seqs.., task: 1130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516992, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 676, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (945.42, 809.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1819, 4409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10769)
[0000][PE] mean and std.dev: (2461.08, 1631.76)
[0000][PE] low and high boundaries for proper pairs: (1, 13949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 314.984 CPU sec, 17.664 real sec
[0000] Calling mem_process_seqs.., task: 1131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516990, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 373, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3329)
[0000][PE] mean and std.dev: (615.92, 543.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1730, 3049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7413)
[0000][PE] mean and std.dev: (2054.69, 1399.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 316.248 CPU sec, 17.730 real sec
[0000] Calling mem_process_seqs.., task: 1132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516987, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 590, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5750)
[0000][PE] mean and std.dev: (1345.36, 1361.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1375, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4572)
[0000][PE] mean and std.dev: (1476.21, 864.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 312.639 CPU sec, 17.524 real sec
[0000] Calling mem_process_seqs.., task: 1133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516972, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 737, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (862.62, 643.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1632, 3131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7855)
[0000][PE] mean and std.dev: (2184.00, 1682.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 314.693 CPU sec, 17.646 real sec
[0000] Calling mem_process_seqs.., task: 1134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516562, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 726, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2455)
[0000][PE] mean and std.dev: (710.42, 388.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1488, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (1311.50, 659.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 312.307 CPU sec, 17.487 real sec
[0000] Calling mem_process_seqs.., task: 1135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517580, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 804, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (884.04, 621.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1109, 3437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8711)
[0000][PE] mean and std.dev: (1722.09, 1408.22)
[0000][PE] low and high boundaries for proper pairs: (1, 11348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 312.558 CPU sec, 17.492 real sec
[0000] Calling mem_process_seqs.., task: 1136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516856, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 926, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1319.14, 1418.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 1166, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5657)
[0000][PE] mean and std.dev: (1314.00, 1057.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 315.653 CPU sec, 17.710 real sec
[0000] Calling mem_process_seqs.., task: 1137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517514, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 893, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (924.17, 771.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1485, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (1476.84, 844.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 315.316 CPU sec, 17.683 real sec
[0000] Calling mem_process_seqs.., task: 1138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517143, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 1353, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6880)
[0000][PE] mean and std.dev: (1265.13, 903.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.40, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1176, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (1392.58, 822.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 310.423 CPU sec, 17.392 real sec
[0000] Calling mem_process_seqs.., task: 1139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517014, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 398, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5148)
[0000][PE] mean and std.dev: (876.89, 1194.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1626, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1460.84, 673.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 313.331 CPU sec, 17.545 real sec
[0000] Calling mem_process_seqs.., task: 1140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516767, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 485, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3943)
[0000][PE] mean and std.dev: (929.48, 803.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1561, 2607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5473)
[0000][PE] mean and std.dev: (1816.75, 1065.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 313.863 CPU sec, 17.601 real sec
[0000] Calling mem_process_seqs.., task: 1141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516724, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 787, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (919.23, 851.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1240, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (1355.64, 899.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 312.412 CPU sec, 17.527 real sec
[0000] Calling mem_process_seqs.., task: 1142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517091, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 714, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (627.10, 377.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1528, 2986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6760)
[0000][PE] mean and std.dev: (1483.14, 862.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 313.463 CPU sec, 17.582 real sec
[0000] Calling mem_process_seqs.., task: 1143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517015, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1141, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1072.15, 845.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.49, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1866, 2780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6122)
[0000][PE] mean and std.dev: (1965.44, 1065.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 311.651 CPU sec, 17.438 real sec
[0000] Calling mem_process_seqs.., task: 1144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517054, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 642, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (798.53, 576.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1535, 3826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9252)
[0000][PE] mean and std.dev: (2213.62, 1490.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 308.923 CPU sec, 17.309 real sec
[0000] Calling mem_process_seqs.., task: 1145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516654, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 538, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6275)
[0000][PE] mean and std.dev: (1272.15, 1460.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (517, 985, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (1062.80, 676.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 313.823 CPU sec, 17.592 real sec
[0000] Calling mem_process_seqs.., task: 1146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516522, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 372, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1715)
[0000][PE] mean and std.dev: (500.58, 355.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1642, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (1411.85, 735.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 313.149 CPU sec, 17.559 real sec
[0000] Calling mem_process_seqs.., task: 1147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518034, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 454, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (823.26, 828.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1370, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1728.27, 1039.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 312.777 CPU sec, 17.565 real sec
[0000] Calling mem_process_seqs.., task: 1148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516995, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 1245, 2780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7454)
[0000][PE] mean and std.dev: (1521.14, 1361.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.27, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1276, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4560)
[0000][PE] mean and std.dev: (1385.71, 821.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 312.749 CPU sec, 17.512 real sec
[0000] Calling mem_process_seqs.., task: 1149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517095, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 836, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (904.79, 698.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1366, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (1263.00, 620.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 310.909 CPU sec, 17.401 real sec
[0000] Calling mem_process_seqs.., task: 1150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517051, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 584, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (954.40, 896.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (415, 983, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (877.56, 392.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 314.249 CPU sec, 17.589 real sec
[0000] Calling mem_process_seqs.., task: 1151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517233, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 670, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (1021.00, 863.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.28, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1105, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2613)
[0000][PE] mean and std.dev: (1117.92, 553.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 312.571 CPU sec, 17.545 real sec
[0000] Calling mem_process_seqs.., task: 1152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516717, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 791, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5242)
[0000][PE] mean and std.dev: (1244.48, 1325.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.79, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (492, 1811, 4032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11112)
[0000][PE] mean and std.dev: (2386.90, 2686.45)
[0000][PE] low and high boundaries for proper pairs: (1, 14652)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 311.897 CPU sec, 17.480 real sec
[0000] Calling mem_process_seqs.., task: 1153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516831, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 795, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (818.28, 677.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1335, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3848)
[0000][PE] mean and std.dev: (1346.22, 776.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 311.964 CPU sec, 17.471 real sec
[0000] Calling mem_process_seqs.., task: 1154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516751, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 492, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (812.45, 770.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1254, 1732, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6234)
[0000][PE] mean and std.dev: (2016.55, 1086.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 316.033 CPU sec, 17.716 real sec
[0000] Calling mem_process_seqs.., task: 1155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516609, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 856, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (897.50, 586.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 862, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (923.50, 587.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 323.575 CPU sec, 18.147 real sec
[0000] Calling mem_process_seqs.., task: 1156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516976, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 851, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4430)
[0000][PE] mean and std.dev: (966.31, 829.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1166, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5332)
[0000][PE] mean and std.dev: (1506.22, 1149.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 321.266 CPU sec, 18.037 real sec
[0000] Calling mem_process_seqs.., task: 1157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516987, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 935, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (753.33, 502.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 1328, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (1104.72, 678.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 322.087 CPU sec, 18.068 real sec
[0000] Calling mem_process_seqs.., task: 1158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517098, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 561, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (712.65, 648.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (431, 1350, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (1176.47, 771.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 329.165 CPU sec, 18.463 real sec
[0000] Calling mem_process_seqs.., task: 1159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516746, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 1570, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6121)
[0000][PE] mean and std.dev: (1473.21, 1222.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1251, 2429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5517)
[0000][PE] mean and std.dev: (1428.65, 810.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 326.601 CPU sec, 18.282 real sec
[0000] Calling mem_process_seqs.., task: 1160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517219, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 975, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (1015.24, 861.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1306, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5571)
[0000][PE] mean and std.dev: (1547.33, 1268.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 329.285 CPU sec, 18.482 real sec
[0000] Calling mem_process_seqs.., task: 1161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517432, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 611, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (917.92, 782.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1412, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4454)
[0000][PE] mean and std.dev: (1423.50, 1014.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 327.011 CPU sec, 18.293 real sec
[0000] Calling mem_process_seqs.., task: 1162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516602, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 948, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4726)
[0000][PE] mean and std.dev: (819.80, 654.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.63, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (548, 1292, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4958)
[0000][PE] mean and std.dev: (1247.40, 857.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 322.654 CPU sec, 18.063 real sec
[0000] Calling mem_process_seqs.., task: 1163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517407, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 556, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (752.65, 504.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.91, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1176, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1313.76, 575.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 311.574 CPU sec, 17.464 real sec
[0000] Calling mem_process_seqs.., task: 1164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517410, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 403, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1685)
[0000][PE] mean and std.dev: (466.43, 291.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.39, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (882, 1922, 5814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15678)
[0000][PE] mean and std.dev: (2933.00, 2363.86)
[0000][PE] low and high boundaries for proper pairs: (1, 20610)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1571, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1540.41, 732.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 311.708 CPU sec, 17.462 real sec
[0000] Calling mem_process_seqs.., task: 1165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516786, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 346, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (596.14, 529.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1390, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (1450.06, 742.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 310.722 CPU sec, 17.391 real sec
[0000] Calling mem_process_seqs.., task: 1166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516835, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 391, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2424)
[0000][PE] mean and std.dev: (496.81, 436.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1465, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4799)
[0000][PE] mean and std.dev: (1471.24, 991.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 318.188 CPU sec, 17.880 real sec
[0000] Calling mem_process_seqs.., task: 1167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516941, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 716, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (845.21, 622.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.89, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1416, 1814, 4169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9675)
[0000][PE] mean and std.dev: (2770.82, 1958.36)
[0000][PE] low and high boundaries for proper pairs: (1, 12428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 311.184 CPU sec, 17.446 real sec
[0000] Calling mem_process_seqs.., task: 1168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517249, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 802, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4441)
[0000][PE] mean and std.dev: (985.22, 957.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1084, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1254.88, 719.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 313.724 CPU sec, 17.576 real sec
[0000] Calling mem_process_seqs.., task: 1169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516923, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 455, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (885.68, 746.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (495, 1077, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4851)
[0000][PE] mean and std.dev: (1298.50, 1125.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 310.635 CPU sec, 17.413 real sec
[0000] Calling mem_process_seqs.., task: 1170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516880, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 587, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (744.46, 614.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 1518, 3423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9525)
[0000][PE] mean and std.dev: (1814.35, 1587.37)
[0000][PE] low and high boundaries for proper pairs: (1, 12576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 311.857 CPU sec, 17.459 real sec
[0000] Calling mem_process_seqs.., task: 1171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517145, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (632, 1060, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (1071.68, 756.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1520, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4961)
[0000][PE] mean and std.dev: (1505.25, 805.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 314.292 CPU sec, 17.599 real sec
[0000] Calling mem_process_seqs.., task: 1172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516730, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 823, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1168.35, 1018.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.30, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 961, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2726)
[0000][PE] mean and std.dev: (986.12, 415.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 316.149 CPU sec, 17.706 real sec
[0000] Calling mem_process_seqs.., task: 1173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516406, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 991, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (1012.04, 790.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.00, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1358, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5235)
[0000][PE] mean and std.dev: (1749.14, 1383.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 313.872 CPU sec, 17.573 real sec
[0000] Calling mem_process_seqs.., task: 1174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516768, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 493, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (723.42, 500.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.27, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1309, 1414, 3151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6835)
[0000][PE] mean and std.dev: (1975.67, 1525.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 311.244 CPU sec, 17.436 real sec
[0000] Calling mem_process_seqs.., task: 1175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516888, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 951, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5190)
[0000][PE] mean and std.dev: (1134.79, 958.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1266, 2699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6205)
[0000][PE] mean and std.dev: (1671.76, 1157.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 309.128 CPU sec, 17.292 real sec
[0000] Calling mem_process_seqs.., task: 1176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516495, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 435, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (792.04, 653.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.27, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1482, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5291)
[0000][PE] mean and std.dev: (1741.14, 1217.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 317.615 CPU sec, 17.830 real sec
[0000] Calling mem_process_seqs.., task: 1177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517446, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 420, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4237)
[0000][PE] mean and std.dev: (978.17, 1066.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1175, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5283)
[0000][PE] mean and std.dev: (1471.00, 1029.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 312.491 CPU sec, 17.509 real sec
[0000] Calling mem_process_seqs.., task: 1178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516856, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 685, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1039.00, 995.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1379, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1426.89, 715.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 311.182 CPU sec, 17.441 real sec
[0000] Calling mem_process_seqs.., task: 1179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517047, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 525, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (1020.87, 1026.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1359, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (1378.18, 681.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 316.443 CPU sec, 17.704 real sec
[0000] Calling mem_process_seqs.., task: 1180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517148, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 652, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (932.00, 777.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 1034, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (1336.72, 983.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 314.110 CPU sec, 17.586 real sec
[0000] Calling mem_process_seqs.., task: 1181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517098, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 1226, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5030)
[0000][PE] mean and std.dev: (1364.04, 1123.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1106, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (1142.50, 555.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 319.254 CPU sec, 17.892 real sec
[0000] Calling mem_process_seqs.., task: 1182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517273, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 422, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (666.32, 602.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.46, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1618, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (1420.08, 610.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 332.623 CPU sec, 18.649 real sec
[0000] Calling mem_process_seqs.., task: 1183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517083, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 723, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (1130.24, 1132.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1213, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (1220.83, 461.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 332.686 CPU sec, 18.754 real sec
[0000] Calling mem_process_seqs.., task: 1184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517374, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 557, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (913.59, 1012.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (612, 1386, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5910)
[0000][PE] mean and std.dev: (1580.08, 1130.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 312.019 CPU sec, 17.479 real sec
[0000] Calling mem_process_seqs.., task: 1185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517045, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 314, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4707)
[0000][PE] mean and std.dev: (846.50, 1058.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1482, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1514.58, 948.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 309.525 CPU sec, 17.309 real sec
[0000] Calling mem_process_seqs.., task: 1186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517186, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 580, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2678)
[0000][PE] mean and std.dev: (638.59, 492.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 1863, 3217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7173)
[0000][PE] mean and std.dev: (2103.71, 1274.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 311.821 CPU sec, 17.452 real sec
[0000] Calling mem_process_seqs.., task: 1187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517024, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 402, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (568.05, 441.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1653, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4518)
[0000][PE] mean and std.dev: (1481.81, 774.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 316.506 CPU sec, 17.706 real sec
[0000] Calling mem_process_seqs.., task: 1188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517265, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 581, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (1031.17, 1087.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.23, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1388, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4229)
[0000][PE] mean and std.dev: (1525.60, 815.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 318.725 CPU sec, 17.871 real sec
[0000] Calling mem_process_seqs.., task: 1189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517156, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 516, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2599)
[0000][PE] mean and std.dev: (628.83, 601.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 915, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (1187.06, 743.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 315.771 CPU sec, 17.693 real sec
[0000] Calling mem_process_seqs.., task: 1190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517096, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 314, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (777.24, 769.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1569, 2889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6303)
[0000][PE] mean and std.dev: (1995.38, 1324.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 318.375 CPU sec, 17.832 real sec
[0000] Calling mem_process_seqs.., task: 1191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517220, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 985, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (1009.12, 738.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1104, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5093)
[0000][PE] mean and std.dev: (1355.45, 743.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 316.309 CPU sec, 17.733 real sec
[0000] Calling mem_process_seqs.., task: 1192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516971, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 460, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3076)
[0000][PE] mean and std.dev: (775.21, 756.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.70, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1249, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (1306.46, 549.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 316.144 CPU sec, 17.708 real sec
[0000] Calling mem_process_seqs.., task: 1193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516967, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 351, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (754.78, 650.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (522, 937, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (1029.26, 665.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 319.147 CPU sec, 17.904 real sec
[0000] Calling mem_process_seqs.., task: 1194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516855, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 1140, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (1181.48, 1201.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1494, 2789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6169)
[0000][PE] mean and std.dev: (1899.47, 1377.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 323.059 CPU sec, 18.108 real sec
[0000] Calling mem_process_seqs.., task: 1195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516706, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 592, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2459)
[0000][PE] mean and std.dev: (674.24, 516.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1174, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4885)
[0000][PE] mean and std.dev: (1369.69, 792.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 317.548 CPU sec, 17.827 real sec
[0000] Calling mem_process_seqs.., task: 1196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517042, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 369, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2286)
[0000][PE] mean and std.dev: (627.38, 558.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1334, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5186)
[0000][PE] mean and std.dev: (1743.65, 1181.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 320.178 CPU sec, 17.970 real sec
[0000] Calling mem_process_seqs.., task: 1197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516926, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 427, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2664)
[0000][PE] mean and std.dev: (600.88, 497.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1114, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (1210.00, 629.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 318.649 CPU sec, 17.856 real sec
[0000] Calling mem_process_seqs.., task: 1198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516378, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 666, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5846)
[0000][PE] mean and std.dev: (1283.00, 1432.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1468, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5929)
[0000][PE] mean and std.dev: (1817.06, 1450.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 316.688 CPU sec, 17.751 real sec
[0000] Calling mem_process_seqs.., task: 1199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516564, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 350, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (596.67, 474.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1527, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6322)
[0000][PE] mean and std.dev: (1927.31, 1230.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 319.629 CPU sec, 17.901 real sec
[0000] Calling mem_process_seqs.., task: 1200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516883, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 442, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2861)
[0000][PE] mean and std.dev: (734.93, 701.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1449, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4785)
[0000][PE] mean and std.dev: (1403.18, 862.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 316.082 CPU sec, 17.716 real sec
[0000] Calling mem_process_seqs.., task: 1201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517024, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 717, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2847)
[0000][PE] mean and std.dev: (764.88, 568.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (594, 1304, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (1418.33, 893.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 315.267 CPU sec, 17.654 real sec
[0000] Calling mem_process_seqs.., task: 1202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516881, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 390, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (756.67, 711.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1807, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (1636.35, 1093.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 315.872 CPU sec, 17.734 real sec
[0000] Calling mem_process_seqs.., task: 1203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516863, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 784, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4588)
[0000][PE] mean and std.dev: (800.76, 609.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.33, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1345, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (1251.05, 621.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 314.443 CPU sec, 17.618 real sec
[0000] Calling mem_process_seqs.., task: 1204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517445, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 578, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (889.92, 865.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.75, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1191, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (1351.65, 888.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 314.359 CPU sec, 17.596 real sec
[0000] Calling mem_process_seqs.., task: 1205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517632, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 948, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (984.35, 820.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1139, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1216.27, 631.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 317.956 CPU sec, 17.805 real sec
[0000] Calling mem_process_seqs.., task: 1206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516533, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 745, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (884.09, 727.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1407, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5345)
[0000][PE] mean and std.dev: (1738.14, 1083.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 319.365 CPU sec, 17.875 real sec
[0000] Calling mem_process_seqs.., task: 1207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516930, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 634, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (739.67, 545.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 1453, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (581, 2481)
[0000][PE] mean and std.dev: (1354.67, 303.92)
[0000][PE] low and high boundaries for proper pairs: (139, 2861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 320.138 CPU sec, 17.957 real sec
[0000] Calling mem_process_seqs.., task: 1208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516412, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 759, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (1010.32, 815.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.72, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1130, 2845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6893)
[0000][PE] mean and std.dev: (1421.92, 902.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 309.434 CPU sec, 17.340 real sec
[0000] Calling mem_process_seqs.., task: 1209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516950, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 803, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (848.24, 545.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.34, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1661, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (1254.44, 642.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 314.284 CPU sec, 17.618 real sec
[0000] Calling mem_process_seqs.., task: 1210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517340, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 851, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (987.61, 764.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1012, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (1187.78, 630.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 310.817 CPU sec, 17.430 real sec
[0000] Calling mem_process_seqs.., task: 1211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517395, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 610, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (890.64, 770.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1509, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (1417.75, 795.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 318.544 CPU sec, 17.852 real sec
[0000] Calling mem_process_seqs.., task: 1212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516628, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 457, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (691.50, 667.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1294, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4324)
[0000][PE] mean and std.dev: (1186.85, 603.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 308.224 CPU sec, 17.255 real sec
[0000] Calling mem_process_seqs.., task: 1213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516988, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 787, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (893.87, 811.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1639, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5776)
[0000][PE] mean and std.dev: (1645.67, 1094.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 323.159 CPU sec, 18.142 real sec
[0000] Calling mem_process_seqs.., task: 1214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517599, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 546, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (755.40, 676.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.67, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1637, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4845)
[0000][PE] mean and std.dev: (1677.19, 939.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 334.496 CPU sec, 18.782 real sec
[0000] Calling mem_process_seqs.., task: 1215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516725, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 503, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5315)
[0000][PE] mean and std.dev: (1305.61, 1431.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 1073, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4429)
[0000][PE] mean and std.dev: (1131.23, 1059.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 333.589 CPU sec, 18.744 real sec
[0000] Calling mem_process_seqs.., task: 1216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517150, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 479, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3420)
[0000][PE] mean and std.dev: (726.17, 616.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.72, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1278, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6122)
[0000][PE] mean and std.dev: (1657.61, 1269.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 317.994 CPU sec, 17.784 real sec
[0000] Calling mem_process_seqs.., task: 1217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516783, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 858, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4752)
[0000][PE] mean and std.dev: (1017.00, 828.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1361, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (1352.93, 610.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 310.755 CPU sec, 17.399 real sec
[0000] Calling mem_process_seqs.., task: 1218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516767, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 843, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (863.50, 663.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1428, 2743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6131)
[0000][PE] mean and std.dev: (1809.26, 1311.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 310.589 CPU sec, 17.428 real sec
[0000] Calling mem_process_seqs.., task: 1219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516968, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 722, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4225)
[0000][PE] mean and std.dev: (1035.93, 937.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1191, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (1396.83, 783.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 312.328 CPU sec, 17.555 real sec
[0000] Calling mem_process_seqs.., task: 1220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516718, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 377, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (654.32, 680.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1092, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2691)
[0000][PE] mean and std.dev: (1129.28, 537.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 311.338 CPU sec, 17.419 real sec
[0000] Calling mem_process_seqs.., task: 1221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516961, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 634, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (817.92, 622.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1284, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4814)
[0000][PE] mean and std.dev: (1652.45, 976.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 310.426 CPU sec, 17.377 real sec
[0000] Calling mem_process_seqs.., task: 1222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517004, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 491, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (839.96, 756.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.27, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1574, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6152)
[0000][PE] mean and std.dev: (1643.67, 842.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 310.671 CPU sec, 17.439 real sec
[0000] Calling mem_process_seqs.., task: 1223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516657, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 361, 851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2099)
[0000][PE] mean and std.dev: (429.04, 266.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.74, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (537, 1427, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1366.14, 810.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 309.706 CPU sec, 17.350 real sec
[0000] Calling mem_process_seqs.., task: 1224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517201, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 760, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (888.63, 719.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1321, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1520.33, 920.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 321.603 CPU sec, 18.034 real sec
[0000] Calling mem_process_seqs.., task: 1225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516874, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 823, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1243.32, 1183.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (488, 1480, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (1345.94, 825.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 317.964 CPU sec, 17.834 real sec
[0000] Calling mem_process_seqs.., task: 1226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517174, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 408, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2100)
[0000][PE] mean and std.dev: (498.42, 388.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1543, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5300)
[0000][PE] mean and std.dev: (1624.88, 1070.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 320.409 CPU sec, 17.996 real sec
[0000] Calling mem_process_seqs.., task: 1227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516681, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 943, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (1050.07, 884.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (502, 1081, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1004.76, 559.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 320.479 CPU sec, 17.940 real sec
[0000] Calling mem_process_seqs.., task: 1228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517179, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 450, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6655)
[0000][PE] mean and std.dev: (1184.87, 1542.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1194, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4749)
[0000][PE] mean and std.dev: (1468.06, 957.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 314.750 CPU sec, 17.633 real sec
[0000] Calling mem_process_seqs.., task: 1229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516601, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 725, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5184)
[0000][PE] mean and std.dev: (1275.90, 1355.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1495, 2599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5653)
[0000][PE] mean and std.dev: (1920.41, 1163.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 321.123 CPU sec, 18.001 real sec
[0000] Calling mem_process_seqs.., task: 1230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516895, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 403, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (688.06, 651.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1352, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (1403.05, 982.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 316.306 CPU sec, 17.717 real sec
[0000] Calling mem_process_seqs.., task: 1231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516940, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 479, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (625.56, 437.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1994, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5555)
[0000][PE] mean and std.dev: (1763.38, 1006.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 314.779 CPU sec, 17.631 real sec
[0000] Calling mem_process_seqs.., task: 1232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517011, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 748, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4092)
[0000][PE] mean and std.dev: (919.67, 758.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.84, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1974, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5155)
[0000][PE] mean and std.dev: (1450.82, 689.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 317.158 CPU sec, 17.768 real sec
[0000] Calling mem_process_seqs.., task: 1233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517116, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 1326, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6643)
[0000][PE] mean and std.dev: (1424.81, 1272.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1523, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (1514.92, 880.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 321.313 CPU sec, 17.996 real sec
[0000] Calling mem_process_seqs.., task: 1234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517109, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 1052, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (1031.93, 928.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.82, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1136, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4904)
[0000][PE] mean and std.dev: (1632.71, 929.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 316.063 CPU sec, 17.731 real sec
[0000] Calling mem_process_seqs.., task: 1235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516397, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 492, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (815.71, 761.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.38, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1466, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4976)
[0000][PE] mean and std.dev: (1699.54, 793.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 319.238 CPU sec, 17.858 real sec
[0000] Calling mem_process_seqs.., task: 1236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516739, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 877, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2681)
[0000][PE] mean and std.dev: (746.42, 530.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1552, 3397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7905)
[0000][PE] mean and std.dev: (1873.00, 989.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 315.254 CPU sec, 17.637 real sec
[0000] Calling mem_process_seqs.., task: 1237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517220, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 651, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3712)
[0000][PE] mean and std.dev: (870.17, 663.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1558, 2437, 8330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21874)
[0000][PE] mean and std.dev: (4142.90, 3290.62)
[0000][PE] low and high boundaries for proper pairs: (1, 28646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 317.479 CPU sec, 17.822 real sec
[0000] Calling mem_process_seqs.., task: 1238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516599, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 462, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (666.18, 637.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1243, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (1251.40, 663.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 316.141 CPU sec, 17.724 real sec
[0000] Calling mem_process_seqs.., task: 1239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517130, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 501, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (693.53, 467.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1674, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (1418.35, 684.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 324.786 CPU sec, 18.230 real sec
[0000] Calling mem_process_seqs.., task: 1240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517228, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 744, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (978.45, 909.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1507, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1543.92, 759.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 316.167 CPU sec, 17.739 real sec
[0000] Calling mem_process_seqs.., task: 1241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517166, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 603, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4741)
[0000][PE] mean and std.dev: (992.70, 1055.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1332, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (296, 2676)
[0000][PE] mean and std.dev: (1415.20, 607.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 318.563 CPU sec, 17.874 real sec
[0000] Calling mem_process_seqs.., task: 1242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516969, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 473, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (754.68, 806.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 2000, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3759)
[0000][PE] mean and std.dev: (1587.59, 688.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 318.505 CPU sec, 17.838 real sec
[0000] Calling mem_process_seqs.., task: 1243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517094, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 405, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (627.32, 530.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1427, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (1551.00, 1016.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 320.061 CPU sec, 17.976 real sec
[0000] Calling mem_process_seqs.., task: 1244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517124, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 1093, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (1026.00, 859.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1626, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5949)
[0000][PE] mean and std.dev: (1699.25, 1077.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 319.342 CPU sec, 17.903 real sec
[0000] Calling mem_process_seqs.., task: 1245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517506, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 428, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3866)
[0000][PE] mean and std.dev: (822.83, 722.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1369, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5009)
[0000][PE] mean and std.dev: (1362.44, 714.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 316.128 CPU sec, 17.705 real sec
[0000] Calling mem_process_seqs.., task: 1246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517023, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 701, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4457)
[0000][PE] mean and std.dev: (927.14, 772.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 989, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (1082.00, 620.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 316.741 CPU sec, 17.739 real sec
[0000] Calling mem_process_seqs.., task: 1247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516825, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 826, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (865.14, 585.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.74, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1251, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (1228.22, 591.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 335.513 CPU sec, 18.830 real sec
[0000] Calling mem_process_seqs.., task: 1248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516948, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 411, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (701.67, 705.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1366, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (1326.94, 591.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 333.731 CPU sec, 18.730 real sec
[0000] Calling mem_process_seqs.., task: 1249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516778, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 630, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (582.07, 392.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 892, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2804)
[0000][PE] mean and std.dev: (969.50, 508.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 336.045 CPU sec, 18.864 real sec
[0000] Calling mem_process_seqs.., task: 1250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517763, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 1370, 3105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8605)
[0000][PE] mean and std.dev: (1427.05, 1167.40)
[0000][PE] low and high boundaries for proper pairs: (1, 11355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1496, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5515)
[0000][PE] mean and std.dev: (1747.38, 1312.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 310.385 CPU sec, 17.424 real sec
[0000] Calling mem_process_seqs.., task: 1251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517088, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 843, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2891)
[0000][PE] mean and std.dev: (761.07, 578.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1198, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (1499.35, 817.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 323.660 CPU sec, 18.149 real sec
[0000] Calling mem_process_seqs.., task: 1252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517171, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 749, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4263)
[0000][PE] mean and std.dev: (1098.43, 890.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1652, 2755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6389)
[0000][PE] mean and std.dev: (1694.15, 948.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 319.110 CPU sec, 17.890 real sec
[0000] Calling mem_process_seqs.., task: 1253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517255, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 395, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2874)
[0000][PE] mean and std.dev: (639.91, 496.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.94, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1196, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1371.81, 659.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 320.848 CPU sec, 18.048 real sec
[0000] Calling mem_process_seqs.., task: 1254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516950, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 678, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1010.74, 1029.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1353, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4640)
[0000][PE] mean and std.dev: (1422.35, 755.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 320.503 CPU sec, 17.975 real sec
[0000] Calling mem_process_seqs.., task: 1255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516894, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 648, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (871.10, 816.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 1322, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (1128.78, 520.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 322.750 CPU sec, 18.092 real sec
[0000] Calling mem_process_seqs.., task: 1256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517058, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 770, 3152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8898)
[0000][PE] mean and std.dev: (1230.87, 1329.26)
[0000][PE] low and high boundaries for proper pairs: (1, 11771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1266, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (1255.57, 578.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 316.254 CPU sec, 17.728 real sec
[0000] Calling mem_process_seqs.., task: 1257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517331, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 660, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5040)
[0000][PE] mean and std.dev: (1026.73, 1029.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1680, 3257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7381)
[0000][PE] mean and std.dev: (2044.21, 1220.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 323.298 CPU sec, 18.117 real sec
[0000] Calling mem_process_seqs.., task: 1258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516910, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 1261, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5777)
[0000][PE] mean and std.dev: (1243.18, 1203.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.92, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1370, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4399)
[0000][PE] mean and std.dev: (1436.77, 970.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 321.507 CPU sec, 18.034 real sec
[0000] Calling mem_process_seqs.., task: 1259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517280, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1032, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4567)
[0000][PE] mean and std.dev: (1185.68, 945.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1544, 3615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8619)
[0000][PE] mean and std.dev: (2306.52, 1624.82)
[0000][PE] low and high boundaries for proper pairs: (1, 11121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 324.468 CPU sec, 18.248 real sec
[0000] Calling mem_process_seqs.., task: 1260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517171, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 890, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4684)
[0000][PE] mean and std.dev: (963.73, 762.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1408, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3151)
[0000][PE] mean and std.dev: (1345.36, 519.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 320.060 CPU sec, 17.954 real sec
[0000] Calling mem_process_seqs.., task: 1261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517101, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 585, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6083)
[0000][PE] mean and std.dev: (1278.68, 1455.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 1362, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (1379.88, 1006.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 320.717 CPU sec, 18.003 real sec
[0000] Calling mem_process_seqs.., task: 1262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516930, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 590, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4661)
[0000][PE] mean and std.dev: (1107.79, 1149.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 1552, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1485.88, 1183.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 318.028 CPU sec, 17.840 real sec
[0000] Calling mem_process_seqs.., task: 1263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516787, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 756, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4466)
[0000][PE] mean and std.dev: (1121.29, 1019.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1439, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (1708.74, 1104.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 323.622 CPU sec, 18.162 real sec
[0000] Calling mem_process_seqs.., task: 1264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517084, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 428, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (761.40, 656.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 2396, 4097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10377)
[0000][PE] mean and std.dev: (2247.17, 1583.83)
[0000][PE] low and high boundaries for proper pairs: (1, 13517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 320.210 CPU sec, 17.979 real sec
[0000] Calling mem_process_seqs.., task: 1265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517218, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 690, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (904.77, 737.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.74, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1733, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3691)
[0000][PE] mean and std.dev: (1683.38, 755.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 325.300 CPU sec, 18.247 real sec
[0000] Calling mem_process_seqs.., task: 1266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516831, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 358, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1671)
[0000][PE] mean and std.dev: (485.00, 380.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1594, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4686)
[0000][PE] mean and std.dev: (1506.93, 867.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 322.166 CPU sec, 18.090 real sec
[0000] Calling mem_process_seqs.., task: 1267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516737, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 442, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (829.79, 765.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1579, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5436)
[0000][PE] mean and std.dev: (1667.12, 915.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 326.347 CPU sec, 18.296 real sec
[0000] Calling mem_process_seqs.., task: 1268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517159, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1521, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (1183.00, 694.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1908, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5906)
[0000][PE] mean and std.dev: (1870.06, 999.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 320.273 CPU sec, 17.993 real sec
[0000] Calling mem_process_seqs.., task: 1269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516852, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 331, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (622.62, 554.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 1487, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (1502.59, 584.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 322.037 CPU sec, 18.100 real sec
[0000] Calling mem_process_seqs.., task: 1270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516983, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 377, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (651.53, 645.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1626, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4471)
[0000][PE] mean and std.dev: (1316.30, 870.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 322.462 CPU sec, 18.091 real sec
[0000] Calling mem_process_seqs.., task: 1271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517340, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 612, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (932.89, 858.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 1296, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6343)
[0000][PE] mean and std.dev: (1623.58, 1225.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 319.248 CPU sec, 17.954 real sec
[0000] Calling mem_process_seqs.., task: 1272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517264, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 502, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2771)
[0000][PE] mean and std.dev: (621.03, 478.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.30, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1357, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6064)
[0000][PE] mean and std.dev: (1638.68, 1179.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 326.638 CPU sec, 18.329 real sec
[0000] Calling mem_process_seqs.., task: 1273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517135, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 621, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2631)
[0000][PE] mean and std.dev: (728.46, 576.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (469, 746, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6028)
[0000][PE] mean and std.dev: (1193.19, 1037.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 326.788 CPU sec, 18.343 real sec
[0000] Calling mem_process_seqs.., task: 1274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516909, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 383, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2109)
[0000][PE] mean and std.dev: (601.62, 459.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.99, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1814, 3296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7732)
[0000][PE] mean and std.dev: (2310.50, 1839.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 327.302 CPU sec, 18.343 real sec
[0000] Calling mem_process_seqs.., task: 1275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516969, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 1150, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5880)
[0000][PE] mean and std.dev: (1163.22, 996.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1500, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4757)
[0000][PE] mean and std.dev: (1515.83, 740.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 314.963 CPU sec, 17.631 real sec
[0000] Calling mem_process_seqs.., task: 1276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516774, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 495, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (683.69, 634.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.88, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1922, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4910)
[0000][PE] mean and std.dev: (1893.56, 1136.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 318.603 CPU sec, 17.893 real sec
[0000] Calling mem_process_seqs.., task: 1277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516704, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 978, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (1189.23, 965.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1282, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (1158.29, 540.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 316.454 CPU sec, 17.741 real sec
[0000] Calling mem_process_seqs.., task: 1278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516766, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 520, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (968.07, 860.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1137, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5391)
[0000][PE] mean and std.dev: (1542.62, 1090.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 323.553 CPU sec, 18.117 real sec
[0000] Calling mem_process_seqs.., task: 1279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517353, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 295, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2632)
[0000][PE] mean and std.dev: (487.88, 422.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.73, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1292, 3388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8314)
[0000][PE] mean and std.dev: (2052.76, 1851.98)
[0000][PE] low and high boundaries for proper pairs: (1, 10777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 324.152 CPU sec, 18.175 real sec
[0000] Calling mem_process_seqs.., task: 1280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517150, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 641, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (716.80, 537.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1498, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (1739.57, 1128.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 325.837 CPU sec, 18.273 real sec
[0000] Calling mem_process_seqs.., task: 1281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516493, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 580, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (583.41, 443.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1459, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6177)
[0000][PE] mean and std.dev: (1776.95, 1253.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 326.673 CPU sec, 18.346 real sec
[0000] Calling mem_process_seqs.., task: 1282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516940, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1259, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4771)
[0000][PE] mean and std.dev: (1204.53, 1029.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1613, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5467)
[0000][PE] mean and std.dev: (1783.77, 1117.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 327.074 CPU sec, 18.357 real sec
[0000] Calling mem_process_seqs.., task: 1283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516875, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 392, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (944.58, 1105.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1255, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (1382.79, 818.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 325.840 CPU sec, 18.273 real sec
[0000] Calling mem_process_seqs.., task: 1284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516851, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 590, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (1019.48, 984.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1266, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4894)
[0000][PE] mean and std.dev: (1716.91, 1077.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 327.018 CPU sec, 18.315 real sec
[0000] Calling mem_process_seqs.., task: 1285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516749, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 384, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (800.05, 951.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1426, 3210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7292)
[0000][PE] mean and std.dev: (2067.44, 1591.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 326.054 CPU sec, 18.295 real sec
[0000] Calling mem_process_seqs.., task: 1286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516767, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 565, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (983.45, 1115.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1252, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5557)
[0000][PE] mean and std.dev: (1467.64, 964.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 325.238 CPU sec, 18.208 real sec
[0000] Calling mem_process_seqs.., task: 1287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517444, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1000, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (1056.83, 895.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.56, 120.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1545, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1614.47, 683.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 330.391 CPU sec, 18.511 real sec
[0000] Calling mem_process_seqs.., task: 1288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517214, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 580, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2866)
[0000][PE] mean and std.dev: (680.93, 506.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (427, 1337, 2889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7813)
[0000][PE] mean and std.dev: (1978.41, 2045.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 324.546 CPU sec, 18.182 real sec
[0000] Calling mem_process_seqs.., task: 1289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517337, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 374, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2657)
[0000][PE] mean and std.dev: (578.86, 565.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1179, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4448)
[0000][PE] mean and std.dev: (1111.00, 558.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 322.257 CPU sec, 18.063 real sec
[0000] Calling mem_process_seqs.., task: 1290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517139, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 827, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (1078.05, 1028.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1451, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4859)
[0000][PE] mean and std.dev: (1376.90, 695.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 326.110 CPU sec, 18.285 real sec
[0000] Calling mem_process_seqs.., task: 1291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517017, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 451, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (669.29, 503.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.58, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (612, 1145, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (1056.18, 647.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 325.664 CPU sec, 18.240 real sec
[0000] Calling mem_process_seqs.., task: 1292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517038, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 437, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2620)
[0000][PE] mean and std.dev: (460.00, 322.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1194, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (1375.48, 600.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 325.954 CPU sec, 18.288 real sec
[0000] Calling mem_process_seqs.., task: 1293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517077, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 374, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (872.85, 875.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1293, 3810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9062)
[0000][PE] mean and std.dev: (2260.74, 1892.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 327.349 CPU sec, 18.421 real sec
[0000] Calling mem_process_seqs.., task: 1294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517325, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 838, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3352)
[0000][PE] mean and std.dev: (878.68, 735.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.51, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 328.630 CPU sec, 18.485 real sec
[0000] Calling mem_process_seqs.., task: 1295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516712, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 351, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2876)
[0000][PE] mean and std.dev: (580.05, 561.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1414, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (1471.47, 716.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 328.825 CPU sec, 18.438 real sec
[0000] Calling mem_process_seqs.., task: 1296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516456, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 456, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2549)
[0000][PE] mean and std.dev: (555.33, 540.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1406, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5232)
[0000][PE] mean and std.dev: (1478.83, 958.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 331.644 CPU sec, 18.623 real sec
[0000] Calling mem_process_seqs.., task: 1297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516914, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 876, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (824.46, 549.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1113, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (1046.28, 508.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 328.108 CPU sec, 18.408 real sec
[0000] Calling mem_process_seqs.., task: 1298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516598, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 414, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (602.06, 420.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.32, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1796, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5374)
[0000][PE] mean and std.dev: (1741.87, 1095.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 332.841 CPU sec, 18.699 real sec
[0000] Calling mem_process_seqs.., task: 1299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517147, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 1076, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (954.64, 613.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1219, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (1262.52, 640.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 333.003 CPU sec, 18.692 real sec
[0000] Calling mem_process_seqs.., task: 1300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517087, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 736, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (850.89, 704.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.26, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 2026, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5962)
[0000][PE] mean and std.dev: (1855.22, 1355.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 333.817 CPU sec, 18.749 real sec
[0000] Calling mem_process_seqs.., task: 1301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517175, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 393, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3581)
[0000][PE] mean and std.dev: (688.29, 625.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1308, 2787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6669)
[0000][PE] mean and std.dev: (1745.13, 1311.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 324.414 CPU sec, 18.205 real sec
[0000] Calling mem_process_seqs.., task: 1302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517227, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 434, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (526.20, 472.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1310, 1494, 3307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7301)
[0000][PE] mean and std.dev: (1993.60, 1320.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 326.636 CPU sec, 18.305 real sec
[0000] Calling mem_process_seqs.., task: 1303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516871, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 856, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1041.30, 997.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 2031, 4577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11581)
[0000][PE] mean and std.dev: (2399.92, 1552.71)
[0000][PE] low and high boundaries for proper pairs: (1, 15083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 329.630 CPU sec, 18.524 real sec
[0000] Calling mem_process_seqs.., task: 1304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517233, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 763, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5609)
[0000][PE] mean and std.dev: (1129.84, 956.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.71, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1439, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 2778)
[0000][PE] mean and std.dev: (1335.10, 504.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 335.286 CPU sec, 18.828 real sec
[0000] Calling mem_process_seqs.., task: 1305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516586, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 452, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2745)
[0000][PE] mean and std.dev: (670.37, 577.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.28, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1091, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (1100.08, 598.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 332.111 CPU sec, 18.637 real sec
[0000] Calling mem_process_seqs.., task: 1306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516679, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 590, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (754.55, 633.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1184, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5792)
[0000][PE] mean and std.dev: (1274.36, 803.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 330.033 CPU sec, 18.544 real sec
[0000] Calling mem_process_seqs.., task: 1307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517054, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 516, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (935.83, 947.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1283, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4385)
[0000][PE] mean and std.dev: (1343.60, 803.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 329.681 CPU sec, 18.533 real sec
[0000] Calling mem_process_seqs.., task: 1308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517275, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 322, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (641.36, 726.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 2058, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4474)
[0000][PE] mean and std.dev: (1686.00, 879.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 326.976 CPU sec, 18.391 real sec
[0000] Calling mem_process_seqs.., task: 1309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517212, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 897, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (901.21, 669.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1258, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (1286.90, 537.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 328.770 CPU sec, 18.447 real sec
[0000] Calling mem_process_seqs.., task: 1310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517124, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 535, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (743.56, 709.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.70, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1891, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1939.03, 1091.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 328.751 CPU sec, 18.445 real sec
[0000] Calling mem_process_seqs.., task: 1311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516951, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 1202, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5599)
[0000][PE] mean and std.dev: (1498.14, 1241.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.68, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1472, 3047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7463)
[0000][PE] mean and std.dev: (1534.87, 1031.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 333.354 CPU sec, 18.767 real sec
[0000] Calling mem_process_seqs.., task: 1312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516964, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1029, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (1137.92, 692.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.20, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1545, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (1426.59, 494.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 327.284 CPU sec, 18.379 real sec
[0000] Calling mem_process_seqs.., task: 1313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516998, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (447, 1093, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (1282.80, 916.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1487, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1443.68, 637.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 329.412 CPU sec, 18.456 real sec
[0000] Calling mem_process_seqs.., task: 1314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516543, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 365, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1998)
[0000][PE] mean and std.dev: (526.04, 454.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1094, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (433, 1813)
[0000][PE] mean and std.dev: (1124.36, 275.37)
[0000][PE] low and high boundaries for proper pairs: (23, 2226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 330.477 CPU sec, 18.535 real sec
[0000] Calling mem_process_seqs.., task: 1315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516931, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 394, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (593.86, 485.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1295, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (1263.61, 604.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 329.455 CPU sec, 18.498 real sec
[0000] Calling mem_process_seqs.., task: 1316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517167, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 565, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2963)
[0000][PE] mean and std.dev: (652.44, 497.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1462, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1495.20, 804.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 328.698 CPU sec, 18.464 real sec
[0000] Calling mem_process_seqs.., task: 1317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516881, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 862, 3093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8575)
[0000][PE] mean and std.dev: (1465.05, 1554.19)
[0000][PE] low and high boundaries for proper pairs: (1, 11316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1483, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5050)
[0000][PE] mean and std.dev: (1836.00, 981.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 328.521 CPU sec, 18.521 real sec
[0000] Calling mem_process_seqs.., task: 1318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517425, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 723, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (757.75, 627.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1718, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5020)
[0000][PE] mean and std.dev: (1671.54, 1134.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 329.529 CPU sec, 18.510 real sec
[0000] Calling mem_process_seqs.., task: 1319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517302, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 438, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (591.28, 443.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1134, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (278, 2083)
[0000][PE] mean and std.dev: (1100.00, 195.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 327.465 CPU sec, 18.385 real sec
[0000] Calling mem_process_seqs.., task: 1320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517034, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 338, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (962.62, 1133.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1185, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3007)
[0000][PE] mean and std.dev: (1149.65, 574.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 329.733 CPU sec, 18.510 real sec
[0000] Calling mem_process_seqs.., task: 1321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516936, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 1100, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (999.58, 828.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.63, 121.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1281, 1531, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4293)
[0000][PE] mean and std.dev: (1577.05, 882.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 326.649 CPU sec, 18.329 real sec
[0000] Calling mem_process_seqs.., task: 1322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517372, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 549, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (695.20, 623.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1259, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (1267.69, 528.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 323.811 CPU sec, 18.167 real sec
[0000] Calling mem_process_seqs.., task: 1323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517081, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 608, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (581.81, 466.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1643, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6554)
[0000][PE] mean and std.dev: (1534.16, 971.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 325.238 CPU sec, 18.274 real sec
[0000] Calling mem_process_seqs.., task: 1324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516813, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 1014, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1050.30, 938.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.75, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1385, 2656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6630)
[0000][PE] mean and std.dev: (1782.94, 1457.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 325.380 CPU sec, 18.307 real sec
[0000] Calling mem_process_seqs.., task: 1325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517223, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 731, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2712)
[0000][PE] mean and std.dev: (804.14, 648.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1172, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5420)
[0000][PE] mean and std.dev: (1449.14, 1150.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 330.622 CPU sec, 18.593 real sec
[0000] Calling mem_process_seqs.., task: 1326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517065, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 804, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (884.14, 741.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1657, 1890, 2657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4657)
[0000][PE] mean and std.dev: (2165.40, 805.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 325.165 CPU sec, 18.243 real sec
[0000] Calling mem_process_seqs.., task: 1327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517420, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 907, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4777)
[0000][PE] mean and std.dev: (1254.33, 1188.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.22, 121.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 2268, 3453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8191)
[0000][PE] mean and std.dev: (2674.79, 2132.59)
[0000][PE] low and high boundaries for proper pairs: (1, 11205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 329.150 CPU sec, 18.457 real sec
[0000] Calling mem_process_seqs.., task: 1328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516935, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (515, 1197, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6929)
[0000][PE] mean and std.dev: (1482.65, 1422.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1905, 2694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5808)
[0000][PE] mean and std.dev: (1773.71, 1056.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 328.596 CPU sec, 18.423 real sec
[0000] Calling mem_process_seqs.., task: 1329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516401, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 333, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2242)
[0000][PE] mean and std.dev: (552.29, 454.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.42, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1329, 3090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7212)
[0000][PE] mean and std.dev: (1747.00, 1075.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 330.710 CPU sec, 18.570 real sec
[0000] Calling mem_process_seqs.., task: 1330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516499, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 467, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (850.30, 678.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1340, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1424.31, 831.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 328.283 CPU sec, 18.483 real sec
[0000] Calling mem_process_seqs.., task: 1331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517154, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 964, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4532)
[0000][PE] mean and std.dev: (1260.96, 1124.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1234, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (1147.20, 727.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 327.656 CPU sec, 18.410 real sec
[0000] Calling mem_process_seqs.., task: 1332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516635, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1234, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1112.74, 756.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.20, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1377, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1319.13, 883.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 323.911 CPU sec, 18.182 real sec
[0000] Calling mem_process_seqs.., task: 1333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516821, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 476, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (786.88, 624.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1163, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3199)
[0000][PE] mean and std.dev: (1324.33, 547.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 326.886 CPU sec, 18.360 real sec
[0000] Calling mem_process_seqs.., task: 1334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517216, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 824, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (1077.68, 840.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1682, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5667)
[0000][PE] mean and std.dev: (1672.59, 992.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 325.810 CPU sec, 18.320 real sec
[0000] Calling mem_process_seqs.., task: 1335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516912, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 1104, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6875)
[0000][PE] mean and std.dev: (1163.94, 1240.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.27, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1586, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6116)
[0000][PE] mean and std.dev: (1635.29, 1178.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 326.322 CPU sec, 18.302 real sec
[0000] Calling mem_process_seqs.., task: 1336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517212, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 621, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7367)
[0000][PE] mean and std.dev: (1264.67, 1432.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1548, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5311)
[0000][PE] mean and std.dev: (1598.17, 1016.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 323.092 CPU sec, 18.134 real sec
[0000] Calling mem_process_seqs.., task: 1337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517250, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 609, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5632)
[0000][PE] mean and std.dev: (1150.61, 1247.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1357, 1624, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4312)
[0000][PE] mean and std.dev: (1664.73, 682.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 323.547 CPU sec, 18.158 real sec
[0000] Calling mem_process_seqs.., task: 1338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516539, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 577, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2413)
[0000][PE] mean and std.dev: (631.61, 498.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1397, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2940)
[0000][PE] mean and std.dev: (1199.69, 503.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 322.817 CPU sec, 18.188 real sec
[0000] Calling mem_process_seqs.., task: 1339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516706, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 396, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2221)
[0000][PE] mean and std.dev: (627.43, 574.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.90, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1366, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (1269.69, 720.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 326.850 CPU sec, 18.355 real sec
[0000] Calling mem_process_seqs.., task: 1340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516447, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 744, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3907)
[0000][PE] mean and std.dev: (857.00, 806.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1330, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (1480.58, 731.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 326.304 CPU sec, 18.332 real sec
[0000] Calling mem_process_seqs.., task: 1341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516856, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 762, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (1088.91, 1055.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 325.667 CPU sec, 18.259 real sec
[0000] Calling mem_process_seqs.., task: 1342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517163, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 461, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (638.29, 482.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1671, 2621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5579)
[0000][PE] mean and std.dev: (1929.38, 1254.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 324.519 CPU sec, 18.226 real sec
[0000] Calling mem_process_seqs.., task: 1343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517080, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 398, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (725.47, 762.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1277, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1087.42, 627.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 324.951 CPU sec, 18.231 real sec
[0000] Calling mem_process_seqs.., task: 1344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517119, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 648, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4541)
[0000][PE] mean and std.dev: (1084.23, 1141.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1212, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2820)
[0000][PE] mean and std.dev: (1119.47, 540.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 322.422 CPU sec, 18.074 real sec
[0000] Calling mem_process_seqs.., task: 1345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517147, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 337, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (542.20, 515.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (575, 1185, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (1174.68, 858.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 321.582 CPU sec, 18.028 real sec
[0000] Calling mem_process_seqs.., task: 1346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517440, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 473, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (707.35, 549.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1570, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4342)
[0000][PE] mean and std.dev: (1627.50, 828.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 322.348 CPU sec, 18.070 real sec
[0000] Calling mem_process_seqs.., task: 1347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517290, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (727, 1127, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6235)
[0000][PE] mean and std.dev: (1567.00, 1191.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.23, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1267, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4253)
[0000][PE] mean and std.dev: (1490.19, 923.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 323.153 CPU sec, 18.148 real sec
[0000] Calling mem_process_seqs.., task: 1348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516730, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 594, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (853.69, 785.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 329.220 CPU sec, 18.460 real sec
[0000] Calling mem_process_seqs.., task: 1349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517059, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 408, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (689.50, 569.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1851, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4436)
[0000][PE] mean and std.dev: (1669.91, 890.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 326.646 CPU sec, 18.331 real sec
[0000] Calling mem_process_seqs.., task: 1350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517007, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 411, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (877.92, 841.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (398, 1113, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (924.18, 699.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 324.647 CPU sec, 18.180 real sec
[0000] Calling mem_process_seqs.., task: 1351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516793, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1055, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1258.19, 1259.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1374, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6667)
[0000][PE] mean and std.dev: (1568.75, 1048.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 324.568 CPU sec, 18.243 real sec
[0000] Calling mem_process_seqs.., task: 1352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517387, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 479, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2623)
[0000][PE] mean and std.dev: (704.48, 509.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1640, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7192)
[0000][PE] mean and std.dev: (1914.44, 1108.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 325.574 CPU sec, 18.284 real sec
[0000] Calling mem_process_seqs.., task: 1353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516550, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 439, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2206)
[0000][PE] mean and std.dev: (500.06, 473.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 1333, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (1305.07, 762.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 326.592 CPU sec, 18.331 real sec
[0000] Calling mem_process_seqs.., task: 1354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517066, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 459, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (950.68, 957.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.18, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 1680, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4461)
[0000][PE] mean and std.dev: (1705.19, 930.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 327.280 CPU sec, 18.368 real sec
[0000] Calling mem_process_seqs.., task: 1355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516704, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 589, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4611)
[0000][PE] mean and std.dev: (1017.15, 951.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1278, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3548)
[0000][PE] mean and std.dev: (1269.89, 571.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 323.575 CPU sec, 18.156 real sec
[0000] Calling mem_process_seqs.., task: 1356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516966, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 454, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (866.88, 823.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1258, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (1480.17, 985.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 321.688 CPU sec, 18.050 real sec
[0000] Calling mem_process_seqs.., task: 1357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517308, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 393, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1978)
[0000][PE] mean and std.dev: (455.33, 343.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (690, 1153, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (1221.33, 777.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 321.709 CPU sec, 18.042 real sec
[0000] Calling mem_process_seqs.., task: 1358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517203, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 348, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (576.50, 642.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (436, 1827, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7051)
[0000][PE] mean and std.dev: (1620.00, 1204.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 322.311 CPU sec, 18.057 real sec
[0000] Calling mem_process_seqs.., task: 1359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516751, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 411, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2304)
[0000][PE] mean and std.dev: (494.55, 321.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1180, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (1176.70, 577.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 331.589 CPU sec, 18.589 real sec
[0000] Calling mem_process_seqs.., task: 1360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516466, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 484, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (680.27, 604.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1569, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (1725.65, 994.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 329.596 CPU sec, 18.517 real sec
[0000] Calling mem_process_seqs.., task: 1361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517166, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 581, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (756.04, 607.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 806, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (875.11, 510.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 328.075 CPU sec, 18.442 real sec
[0000] Calling mem_process_seqs.., task: 1362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516706, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 454, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (812.24, 788.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1509, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (1389.58, 617.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 329.579 CPU sec, 18.464 real sec
[0000] Calling mem_process_seqs.., task: 1363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516858, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 481, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4436)
[0000][PE] mean and std.dev: (811.52, 733.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1546, 2083, 3523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7477)
[0000][PE] mean and std.dev: (2153.93, 1311.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 327.456 CPU sec, 18.404 real sec
[0000] Calling mem_process_seqs.., task: 1364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516968, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 502, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2460)
[0000][PE] mean and std.dev: (709.31, 590.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1664, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4684)
[0000][PE] mean and std.dev: (1544.00, 995.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 326.600 CPU sec, 18.293 real sec
[0000] Calling mem_process_seqs.., task: 1365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517039, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 638, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (783.74, 637.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1429, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4717)
[0000][PE] mean and std.dev: (1571.76, 795.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 328.567 CPU sec, 18.414 real sec
[0000] Calling mem_process_seqs.., task: 1366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516825, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 465, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (912.91, 865.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1414, 3106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6944)
[0000][PE] mean and std.dev: (1784.58, 1369.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 328.105 CPU sec, 18.396 real sec
[0000] Calling mem_process_seqs.., task: 1367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517107, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 660, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (799.21, 739.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1377, 1850, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4281)
[0000][PE] mean and std.dev: (1928.79, 875.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 329.049 CPU sec, 18.434 real sec
[0000] Calling mem_process_seqs.., task: 1368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516609, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 474, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (792.68, 769.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.00, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (438, 1061, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1339.90, 1148.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6094)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (385, 1334, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (1164.06, 869.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 324.831 CPU sec, 18.205 real sec
[0000] Calling mem_process_seqs.., task: 1369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516555, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 359, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3257)
[0000][PE] mean and std.dev: (724.90, 718.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1642, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4754)
[0000][PE] mean and std.dev: (1620.74, 965.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 330.418 CPU sec, 18.520 real sec
[0000] Calling mem_process_seqs.., task: 1370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517441, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 980, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1127.26, 1101.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 323.549 CPU sec, 18.139 real sec
[0000] Calling mem_process_seqs.., task: 1371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516633, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (589, 972, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5947)
[0000][PE] mean and std.dev: (1304.36, 1050.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (556, 1293, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (1267.29, 846.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 323.058 CPU sec, 18.097 real sec
[0000] Calling mem_process_seqs.., task: 1372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517123, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 558, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (727.79, 626.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1402, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6000)
[0000][PE] mean and std.dev: (1684.96, 1303.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 324.957 CPU sec, 18.196 real sec
[0000] Calling mem_process_seqs.., task: 1373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517352, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 482, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (698.42, 528.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1058, 2830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6978)
[0000][PE] mean and std.dev: (1337.33, 942.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 322.822 CPU sec, 18.079 real sec
[0000] Calling mem_process_seqs.., task: 1374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516880, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 552, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2405)
[0000][PE] mean and std.dev: (628.33, 526.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1284, 1711, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1715.13, 799.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 322.985 CPU sec, 18.100 real sec
[0000] Calling mem_process_seqs.., task: 1375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517443, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 426, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2089)
[0000][PE] mean and std.dev: (519.88, 380.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.26, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1080, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4917)
[0000][PE] mean and std.dev: (1352.11, 972.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 328.843 CPU sec, 18.440 real sec
[0000] Calling mem_process_seqs.., task: 1376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516782, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 367, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1748)
[0000][PE] mean and std.dev: (447.58, 301.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.77, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1641, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (1496.42, 719.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 331.011 CPU sec, 18.589 real sec
[0000] Calling mem_process_seqs.., task: 1377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516723, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 501, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (726.54, 601.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1342, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1447.67, 917.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 324.625 CPU sec, 18.187 real sec
[0000] Calling mem_process_seqs.., task: 1378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516513, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1159, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5139)
[0000][PE] mean and std.dev: (1204.68, 1037.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1090, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (985.08, 382.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 325.064 CPU sec, 18.208 real sec
[0000] Calling mem_process_seqs.., task: 1379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516928, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 611, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4685)
[0000][PE] mean and std.dev: (907.44, 787.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.86, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1309, 1948, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5164)
[0000][PE] mean and std.dev: (1765.40, 665.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 327.082 CPU sec, 18.307 real sec
[0000] Calling mem_process_seqs.., task: 1380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517240, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 429, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3135)
[0000][PE] mean and std.dev: (660.54, 549.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (534, 1094, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (1281.78, 1016.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 337.891 CPU sec, 18.978 real sec
[0000] Calling mem_process_seqs.., task: 1381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516671, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 655, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5619)
[0000][PE] mean and std.dev: (968.63, 843.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1457, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6200)
[0000][PE] mean and std.dev: (1611.71, 1351.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 340.804 CPU sec, 19.114 real sec
[0000] Calling mem_process_seqs.., task: 1382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517220, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 819, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6014)
[0000][PE] mean and std.dev: (1173.65, 1142.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (580, 906, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (985.06, 524.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 327.726 CPU sec, 18.383 real sec
[0000] Calling mem_process_seqs.., task: 1383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517077, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 531, 2428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6748)
[0000][PE] mean and std.dev: (1111.24, 1161.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1607, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4937)
[0000][PE] mean and std.dev: (1525.75, 858.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 328.867 CPU sec, 18.422 real sec
[0000] Calling mem_process_seqs.., task: 1384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517145, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 1157, 3143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8657)
[0000][PE] mean and std.dev: (1801.47, 1776.69)
[0000][PE] low and high boundaries for proper pairs: (1, 11414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1334, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (428, 2293)
[0000][PE] mean and std.dev: (1189.18, 339.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 326.569 CPU sec, 18.302 real sec
[0000] Calling mem_process_seqs.., task: 1385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517279, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 812, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1230.44, 1151.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1124, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3068)
[0000][PE] mean and std.dev: (1076.05, 481.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 326.610 CPU sec, 18.311 real sec
[0000] Calling mem_process_seqs.., task: 1386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517324, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 461, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2283)
[0000][PE] mean and std.dev: (600.59, 415.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.64, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1155, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (1087.38, 203.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 331.677 CPU sec, 18.597 real sec
[0000] Calling mem_process_seqs.., task: 1387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516957, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 482, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5256)
[0000][PE] mean and std.dev: (1061.79, 1104.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.69, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1293, 3578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8896)
[0000][PE] mean and std.dev: (1961.35, 1755.44)
[0000][PE] low and high boundaries for proper pairs: (1, 11555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 329.646 CPU sec, 18.468 real sec
[0000] Calling mem_process_seqs.., task: 1388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517170, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 653, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (969.67, 875.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1303, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (1265.38, 725.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 328.591 CPU sec, 18.425 real sec
[0000] Calling mem_process_seqs.., task: 1389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517225, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 737, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2950)
[0000][PE] mean and std.dev: (735.68, 530.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1405, 2845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6215)
[0000][PE] mean and std.dev: (1795.47, 1150.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 328.240 CPU sec, 18.389 real sec
[0000] Calling mem_process_seqs.., task: 1390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517101, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 546, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3555)
[0000][PE] mean and std.dev: (788.43, 616.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1584, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (1545.79, 976.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 319.115 CPU sec, 17.877 real sec
[0000] Calling mem_process_seqs.., task: 1391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517281, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 621, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3833)
[0000][PE] mean and std.dev: (826.88, 790.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 1695, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5050)
[0000][PE] mean and std.dev: (1381.76, 775.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 321.386 CPU sec, 18.026 real sec
[0000] Calling mem_process_seqs.., task: 1392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516973, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 407, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2979)
[0000][PE] mean and std.dev: (693.67, 606.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1392, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (1506.31, 696.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 325.360 CPU sec, 18.245 real sec
[0000] Calling mem_process_seqs.., task: 1393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517098, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 733, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (936.52, 874.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1393, 4803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12051)
[0000][PE] mean and std.dev: (2672.93, 2426.91)
[0000][PE] low and high boundaries for proper pairs: (1, 15675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 325.424 CPU sec, 18.242 real sec
[0000] Calling mem_process_seqs.., task: 1394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517167, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 627, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2960)
[0000][PE] mean and std.dev: (621.35, 437.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.95, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1286, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3949)
[0000][PE] mean and std.dev: (1251.16, 632.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 322.510 CPU sec, 18.062 real sec
[0000] Calling mem_process_seqs.., task: 1395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516975, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 1034, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (1216.80, 1157.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 323.427 CPU sec, 18.187 real sec
[0000] Calling mem_process_seqs.., task: 1396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517369, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 918, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6625)
[0000][PE] mean and std.dev: (1367.95, 1275.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1397, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (1366.69, 559.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 321.310 CPU sec, 17.997 real sec
[0000] Calling mem_process_seqs.., task: 1397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517599, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 688, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4247)
[0000][PE] mean and std.dev: (963.58, 944.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 735, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2747)
[0000][PE] mean and std.dev: (796.83, 456.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 321.248 CPU sec, 18.015 real sec
[0000] Calling mem_process_seqs.., task: 1398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516808, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 444, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2413)
[0000][PE] mean and std.dev: (590.89, 463.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1341, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (1568.65, 1021.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 322.085 CPU sec, 18.028 real sec
[0000] Calling mem_process_seqs.., task: 1399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517153, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 982, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5496)
[0000][PE] mean and std.dev: (958.53, 886.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1599, 2836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6190)
[0000][PE] mean and std.dev: (1804.00, 988.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 321.067 CPU sec, 18.010 real sec
[0000] Calling mem_process_seqs.., task: 1400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517349, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 787, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6745)
[0000][PE] mean and std.dev: (1263.28, 1311.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1445, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4237)
[0000][PE] mean and std.dev: (1538.11, 813.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 319.867 CPU sec, 17.930 real sec
[0000] Calling mem_process_seqs.., task: 1401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517184, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 664, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (933.93, 950.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1331, 1684, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (31, 3281)
[0000][PE] mean and std.dev: (1372.10, 520.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 320.002 CPU sec, 17.935 real sec
[0000] Calling mem_process_seqs.., task: 1402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517243, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 761, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (895.48, 797.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1291, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6376)
[0000][PE] mean and std.dev: (1600.06, 1185.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 320.225 CPU sec, 17.952 real sec
[0000] Calling mem_process_seqs.., task: 1403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516980, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 906, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4037)
[0000][PE] mean and std.dev: (1187.17, 1128.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 979, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (1205.70, 673.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 322.912 CPU sec, 18.109 real sec
[0000] Calling mem_process_seqs.., task: 1404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517202, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 704, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (963.43, 833.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1284, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4541)
[0000][PE] mean and std.dev: (1309.75, 691.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 330.378 CPU sec, 18.564 real sec
[0000] Calling mem_process_seqs.., task: 1405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517050, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 347, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (689.38, 657.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.79, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1743, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4625)
[0000][PE] mean and std.dev: (1769.21, 1125.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 326.554 CPU sec, 18.312 real sec
[0000] Calling mem_process_seqs.., task: 1406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516557, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 363, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (792.28, 832.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1928, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5437)
[0000][PE] mean and std.dev: (1804.40, 1024.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 328.990 CPU sec, 18.468 real sec
[0000] Calling mem_process_seqs.., task: 1407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517012, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 734, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (786.17, 621.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1495, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (1489.67, 562.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 323.122 CPU sec, 18.141 real sec
[0000] Calling mem_process_seqs.., task: 1408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516532, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 932, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3827)
[0000][PE] mean and std.dev: (1039.83, 813.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1644, 3457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8325)
[0000][PE] mean and std.dev: (1801.43, 1375.35)
[0000][PE] low and high boundaries for proper pairs: (1, 10759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 323.501 CPU sec, 18.201 real sec
[0000] Calling mem_process_seqs.., task: 1409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516962, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 795, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (948.25, 699.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 968, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (1127.05, 742.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 326.408 CPU sec, 18.325 real sec
[0000] Calling mem_process_seqs.., task: 1410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517157, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 450, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (705.71, 556.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1618, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7172)
[0000][PE] mean and std.dev: (1683.07, 1190.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 326.049 CPU sec, 18.292 real sec
[0000] Calling mem_process_seqs.., task: 1411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517075, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 557, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (635.47, 452.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1540, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3022)
[0000][PE] mean and std.dev: (1451.17, 548.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 327.087 CPU sec, 18.356 real sec
[0000] Calling mem_process_seqs.., task: 1412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516758, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 716, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2406)
[0000][PE] mean and std.dev: (719.04, 452.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1318, 1433, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (1503.86, 783.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 322.603 CPU sec, 18.182 real sec
[0000] Calling mem_process_seqs.., task: 1413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516668, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 482, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (895.41, 907.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1353, 2827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6985)
[0000][PE] mean and std.dev: (1572.67, 1183.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 324.260 CPU sec, 18.196 real sec
[0000] Calling mem_process_seqs.., task: 1414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517141, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 826, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (889.03, 814.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1589, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (1517.31, 901.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 323.292 CPU sec, 18.141 real sec
[0000] Calling mem_process_seqs.., task: 1415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516492, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 1150, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1200.05, 929.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1447, 3030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7708)
[0000][PE] mean and std.dev: (1861.56, 1577.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 327.529 CPU sec, 18.348 real sec
[0000] Calling mem_process_seqs.., task: 1416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516608, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 582, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (698.25, 468.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1311, 1572, 3321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7341)
[0000][PE] mean and std.dev: (2015.50, 1318.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 326.676 CPU sec, 18.317 real sec
[0000] Calling mem_process_seqs.., task: 1417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517166, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 647, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4901)
[0000][PE] mean and std.dev: (929.28, 829.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1285, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1330.86, 773.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 324.385 CPU sec, 18.190 real sec
[0000] Calling mem_process_seqs.., task: 1418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516769, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1311, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5684)
[0000][PE] mean and std.dev: (1779.36, 944.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7182)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 322.029 CPU sec, 18.038 real sec
[0000] Calling mem_process_seqs.., task: 1419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516755, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 324, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (448.33, 428.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (756, 1209, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (1439.60, 1129.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5957)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1555, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2963)
[0000][PE] mean and std.dev: (1264.73, 520.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 327.480 CPU sec, 18.377 real sec
[0000] Calling mem_process_seqs.., task: 1420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517353, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 849, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (1032.95, 738.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1441, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (982.82, 524.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 322.951 CPU sec, 18.132 real sec
[0000] Calling mem_process_seqs.., task: 1421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517055, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 770, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (1085.26, 864.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 1531, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5222)
[0000][PE] mean and std.dev: (1717.83, 676.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 324.957 CPU sec, 18.222 real sec
[0000] Calling mem_process_seqs.., task: 1422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516682, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 733, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (703.70, 530.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (421, 615, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (807.56, 632.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 322.895 CPU sec, 18.124 real sec
[0000] Calling mem_process_seqs.., task: 1423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516904, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 653, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5049)
[0000][PE] mean and std.dev: (978.40, 889.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1773, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6952)
[0000][PE] mean and std.dev: (2040.47, 1479.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 324.906 CPU sec, 18.216 real sec
[0000] Calling mem_process_seqs.., task: 1424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516934, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 712, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5875)
[0000][PE] mean and std.dev: (979.89, 852.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1657, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6955)
[0000][PE] mean and std.dev: (1941.72, 1148.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 324.063 CPU sec, 18.159 real sec
[0000] Calling mem_process_seqs.., task: 1425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517037, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 484, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2797)
[0000][PE] mean and std.dev: (762.88, 636.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.99, 120.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1465, 2449, 3496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7558)
[0000][PE] mean and std.dev: (2101.83, 1038.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 328.518 CPU sec, 18.454 real sec
[0000] Calling mem_process_seqs.., task: 1426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516910, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 571, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2792)
[0000][PE] mean and std.dev: (776.52, 697.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1062, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (1314.56, 742.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 333.988 CPU sec, 18.897 real sec
[0000] Calling mem_process_seqs.., task: 1427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516705, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 858, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (914.65, 774.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1232, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (1242.25, 560.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 330.106 CPU sec, 18.602 real sec
[0000] Calling mem_process_seqs.., task: 1428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517094, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1009, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (1058.80, 1032.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (561, 1322, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6102)
[0000][PE] mean and std.dev: (1560.09, 1314.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 337.077 CPU sec, 19.146 real sec
[0000] Calling mem_process_seqs.., task: 1429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517178, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 387, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5717)
[0000][PE] mean and std.dev: (1128.72, 1222.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1434, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4495)
[0000][PE] mean and std.dev: (1543.90, 859.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 334.328 CPU sec, 18.879 real sec
[0000] Calling mem_process_seqs.., task: 1430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517025, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 561, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (698.33, 538.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1346, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (1466.05, 840.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 338.068 CPU sec, 19.197 real sec
[0000] Calling mem_process_seqs.., task: 1431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516949, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 354, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (725.43, 693.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1253, 1378, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (459, 2444)
[0000][PE] mean and std.dev: (1347.33, 305.81)
[0000][PE] low and high boundaries for proper pairs: (62, 2841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 333.568 CPU sec, 18.808 real sec
[0000] Calling mem_process_seqs.., task: 1432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517096, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 680, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (644.27, 577.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1451, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5129)
[0000][PE] mean and std.dev: (1580.97, 838.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 336.566 CPU sec, 19.065 real sec
[0000] Calling mem_process_seqs.., task: 1433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517087, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 673, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (880.53, 588.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1600, 3324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7550)
[0000][PE] mean and std.dev: (2087.29, 1493.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 331.900 CPU sec, 18.729 real sec
[0000] Calling mem_process_seqs.., task: 1434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517164, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 359, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (737.44, 738.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 334.963 CPU sec, 18.830 real sec
[0000] Calling mem_process_seqs.., task: 1435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517255, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 980, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5890)
[0000][PE] mean and std.dev: (1246.24, 1105.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1203, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (1372.52, 988.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 332.772 CPU sec, 18.790 real sec
[0000] Calling mem_process_seqs.., task: 1436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517005, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 790, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (953.69, 639.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1161, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6525)
[0000][PE] mean and std.dev: (1438.88, 1002.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 335.206 CPU sec, 19.031 real sec
[0000] Calling mem_process_seqs.., task: 1437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516913, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 459, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (693.12, 652.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1430, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (1150.17, 588.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 337.023 CPU sec, 19.016 real sec
[0000] Calling mem_process_seqs.., task: 1438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517301, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 874, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5352)
[0000][PE] mean and std.dev: (1156.38, 1072.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.72, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 331.649 CPU sec, 18.685 real sec
[0000] Calling mem_process_seqs.., task: 1439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517102, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 917, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (1307.00, 1138.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1406, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (1303.31, 564.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 337.866 CPU sec, 19.086 real sec
[0000] Calling mem_process_seqs.., task: 1440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517418, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 645, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3319)
[0000][PE] mean and std.dev: (928.05, 889.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 333.018 CPU sec, 18.781 real sec
[0000] Calling mem_process_seqs.., task: 1441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516657, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 492, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (744.12, 571.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1255, 3103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7957)
[0000][PE] mean and std.dev: (1867.70, 1710.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 336.340 CPU sec, 19.040 real sec
[0000] Calling mem_process_seqs.., task: 1442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517199, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (645, 1422, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (1609.24, 1386.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1432, 1807, 3255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6901)
[0000][PE] mean and std.dev: (1913.23, 908.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 334.193 CPU sec, 18.851 real sec
[0000] Calling mem_process_seqs.., task: 1443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516230, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 1042, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5918)
[0000][PE] mean and std.dev: (1135.28, 992.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1522, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (1459.25, 979.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 335.828 CPU sec, 18.981 real sec
[0000] Calling mem_process_seqs.., task: 1444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516950, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 469, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (705.57, 624.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1298, 2547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5835)
[0000][PE] mean and std.dev: (1564.26, 952.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 333.328 CPU sec, 18.765 real sec
[0000] Calling mem_process_seqs.., task: 1445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516839, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 505, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (715.41, 548.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 1253, 3800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10978)
[0000][PE] mean and std.dev: (2032.20, 2474.00)
[0000][PE] low and high boundaries for proper pairs: (1, 14567)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1735, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (1671.65, 683.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 325.752 CPU sec, 18.338 real sec
[0000] Calling mem_process_seqs.., task: 1446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517056, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 592, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4532)
[0000][PE] mean and std.dev: (1058.56, 986.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1291, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6138)
[0000][PE] mean and std.dev: (1492.47, 876.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 323.550 CPU sec, 18.180 real sec
[0000] Calling mem_process_seqs.., task: 1447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516931, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 553, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (630.55, 602.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1342, 1660, 3375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7441)
[0000][PE] mean and std.dev: (2371.43, 1632.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 322.932 CPU sec, 18.109 real sec
[0000] Calling mem_process_seqs.., task: 1448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517210, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 356, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2538)
[0000][PE] mean and std.dev: (535.61, 422.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1273, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3882)
[0000][PE] mean and std.dev: (1224.80, 691.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 327.088 CPU sec, 18.387 real sec
[0000] Calling mem_process_seqs.., task: 1449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516999, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 951, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3311)
[0000][PE] mean and std.dev: (881.05, 687.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 1412, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (1377.31, 940.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 337.143 CPU sec, 19.036 real sec
[0000] Calling mem_process_seqs.., task: 1450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516994, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 772, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1082.15, 895.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1496, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (1317.50, 538.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 335.098 CPU sec, 19.000 real sec
[0000] Calling mem_process_seqs.., task: 1451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516913, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 478, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (883.50, 874.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1299, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (1391.00, 664.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 336.138 CPU sec, 18.945 real sec
[0000] Calling mem_process_seqs.., task: 1452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516912, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 513, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2545)
[0000][PE] mean and std.dev: (602.89, 451.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.79, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (865, 1434, 2999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7267)
[0000][PE] mean and std.dev: (2070.27, 1851.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9475)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1038, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1204.18, 893.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 341.667 CPU sec, 19.414 real sec
[0000] Calling mem_process_seqs.., task: 1453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517121, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 592, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (769.26, 699.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1329, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3956)
[0000][PE] mean and std.dev: (1292.19, 604.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 335.426 CPU sec, 18.912 real sec
[0000] Calling mem_process_seqs.., task: 1454
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516271, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 558, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (838.95, 697.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1342, 1934, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3850)
[0000][PE] mean and std.dev: (1575.62, 509.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 330.180 CPU sec, 18.639 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000038 bp)...
[0000] Calling mem_process_seqs.., task: 1455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517043, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 1031, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5361)
[0000][PE] mean and std.dev: (1254.89, 1205.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1527, 3069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7055)
[0000][PE] mean and std.dev: (2056.44, 1478.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 325.320 CPU sec, 18.380 real sec
[0000] Calling mem_process_seqs.., task: 1456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516970, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 381, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (731.48, 752.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1599, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5546)
[0000][PE] mean and std.dev: (1800.67, 1299.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 329.256 CPU sec, 18.581 real sec
[0000] Calling mem_process_seqs.., task: 1457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516526, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 692, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (852.38, 744.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.32, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (568, 966, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3154)
[0000][PE] mean and std.dev: (934.65, 523.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 336.232 CPU sec, 19.098 real sec
[0000] Calling mem_process_seqs.., task: 1458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517534, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 771, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (785.33, 653.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1464, 3174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7464)
[0000][PE] mean and std.dev: (1801.79, 1193.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 334.086 CPU sec, 18.864 real sec
[0000] Calling mem_process_seqs.., task: 1459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517252, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 824, 2823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7745)
[0000][PE] mean and std.dev: (1612.27, 1577.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.75, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (642, 1271, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6774)
[0000][PE] mean and std.dev: (1469.69, 925.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 335.081 CPU sec, 19.064 real sec
[0000] Calling mem_process_seqs.., task: 1460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516924, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 385, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3956)
[0000][PE] mean and std.dev: (688.65, 698.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.73, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1240, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4372)
[0000][PE] mean and std.dev: (1431.20, 1076.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 330.865 CPU sec, 18.666 real sec
[0000] Calling mem_process_seqs.., task: 1461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517114, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 929, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (1035.29, 879.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1407, 1655, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4941)
[0000][PE] mean and std.dev: (1854.56, 705.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 334.881 CPU sec, 19.036 real sec
[0000] Calling mem_process_seqs.., task: 1462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516982, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 369, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1370)
[0000][PE] mean and std.dev: (304.00, 160.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1038, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (1031.71, 626.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 330.070 CPU sec, 18.625 real sec
[0000] Calling mem_process_seqs.., task: 1463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517184, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 449, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (708.94, 597.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1124, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (1372.79, 877.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 328.344 CPU sec, 18.439 real sec
[0000] Calling mem_process_seqs.., task: 1464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516787, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 658, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (864.04, 921.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1158, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4530)
[0000][PE] mean and std.dev: (1435.62, 964.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 330.453 CPU sec, 18.687 real sec
[0000] Calling mem_process_seqs.., task: 1465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516780, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 350, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2620)
[0000][PE] mean and std.dev: (638.67, 652.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1511, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5165)
[0000][PE] mean and std.dev: (1498.38, 909.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 332.079 CPU sec, 18.654 real sec
[0000] Calling mem_process_seqs.., task: 1466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516855, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 771, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1112.29, 985.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1485, 1662, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (1817.31, 899.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 329.804 CPU sec, 18.610 real sec
[0000] Calling mem_process_seqs.., task: 1467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517799, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 396, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (848.58, 764.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.75, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1061, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (1107.30, 609.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 325.805 CPU sec, 18.327 real sec
[0000] Calling mem_process_seqs.., task: 1468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517025, 11, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 344, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2567)
[0000][PE] mean and std.dev: (436.87, 442.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (283, 533, 5421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15697)
[0000][PE] mean and std.dev: (2297.00, 2773.10)
[0000][PE] low and high boundaries for proper pairs: (1, 20835)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1291, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (1428.58, 719.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 330.608 CPU sec, 18.646 real sec
[0000] Calling mem_process_seqs.., task: 1469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516578, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 736, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (904.45, 797.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1809, 3432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8194)
[0000][PE] mean and std.dev: (2212.42, 1753.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 328.095 CPU sec, 18.530 real sec
[0000] Calling mem_process_seqs.., task: 1470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516910, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 601, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2599)
[0000][PE] mean and std.dev: (627.90, 589.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (464, 1139, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5654)
[0000][PE] mean and std.dev: (1398.62, 1241.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 316.350 CPU sec, 17.744 real sec
[0000] Calling mem_process_seqs.., task: 1471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516861, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 610, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (972.27, 847.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.20, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1066, 3750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9876)
[0000][PE] mean and std.dev: (2186.48, 2271.06)
[0000][PE] low and high boundaries for proper pairs: (1, 12939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 316.768 CPU sec, 17.756 real sec
[0000] Calling mem_process_seqs.., task: 1472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516612, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 440, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (793.90, 635.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.73, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1330, 1872, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (1849.25, 1010.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 317.310 CPU sec, 17.808 real sec
[0000] Calling mem_process_seqs.., task: 1473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517269, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (689, 1164, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (1047.38, 645.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.93, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1238, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1355.62, 700.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 316.272 CPU sec, 17.739 real sec
[0000] Calling mem_process_seqs.., task: 1474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517547, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 562, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (824.11, 681.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.97, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1413, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (1244.38, 659.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 313.281 CPU sec, 17.532 real sec
[0000] Calling mem_process_seqs.., task: 1475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517135, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 645, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (840.29, 843.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1476, 2794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6058)
[0000][PE] mean and std.dev: (1707.53, 934.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 315.351 CPU sec, 17.682 real sec
[0000] Calling mem_process_seqs.., task: 1476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517264, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 331, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (679.64, 658.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.30, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (525, 1064, 2629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6837)
[0000][PE] mean and std.dev: (1312.67, 1096.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 319.742 CPU sec, 17.949 real sec
[0000] Calling mem_process_seqs.., task: 1477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517018, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 449, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1830)
[0000][PE] mean and std.dev: (523.25, 331.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1349, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (1329.05, 659.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 319.860 CPU sec, 17.909 real sec
[0000] Calling mem_process_seqs.., task: 1478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517137, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 407, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5358)
[0000][PE] mean and std.dev: (812.00, 862.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1210, 1497, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1616.78, 719.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 313.123 CPU sec, 17.555 real sec
[0000] Calling mem_process_seqs.., task: 1479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517222, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 463, 836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1896)
[0000][PE] mean and std.dev: (665.11, 536.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1213, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (1198.50, 669.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 312.466 CPU sec, 17.523 real sec
[0000] Calling mem_process_seqs.., task: 1480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517165, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 1041, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6943)
[0000][PE] mean and std.dev: (1472.89, 1555.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1189, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (1300.47, 600.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 319.643 CPU sec, 17.935 real sec
[0000] Calling mem_process_seqs.., task: 1481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517177, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 855, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5320)
[0000][PE] mean and std.dev: (1059.47, 1139.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1178, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (1172.80, 659.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 317.330 CPU sec, 17.823 real sec
[0000] Calling mem_process_seqs.., task: 1482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517135, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 377, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (695.75, 654.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (471, 993, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (1062.91, 755.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 314.439 CPU sec, 17.664 real sec
[0000] Calling mem_process_seqs.., task: 1483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517263, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 409, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (685.67, 767.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1325, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5288)
[0000][PE] mean and std.dev: (1425.24, 1023.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 314.929 CPU sec, 17.651 real sec
[0000] Calling mem_process_seqs.., task: 1484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517431, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 815, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4469)
[0000][PE] mean and std.dev: (1003.62, 952.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1305, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (1517.32, 1053.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 312.986 CPU sec, 17.564 real sec
[0000] Calling mem_process_seqs.., task: 1485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517137, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 438, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (749.53, 795.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1237, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6127)
[0000][PE] mean and std.dev: (1722.74, 1326.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 313.550 CPU sec, 17.591 real sec
[0000] Calling mem_process_seqs.., task: 1486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517447, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 722, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (668.65, 582.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.85, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1326, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5220)
[0000][PE] mean and std.dev: (1809.70, 1288.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 312.508 CPU sec, 17.561 real sec
[0000] Calling mem_process_seqs.., task: 1487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516813, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (489, 942, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (1009.32, 773.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.50, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (561, 1459, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6477)
[0000][PE] mean and std.dev: (1706.82, 1332.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 317.390 CPU sec, 17.805 real sec
[0000] Calling mem_process_seqs.., task: 1488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516899, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 898, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1275.81, 1216.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1434, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (1375.00, 703.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 313.733 CPU sec, 17.592 real sec
[0000] Calling mem_process_seqs.., task: 1489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517145, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 414, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2684)
[0000][PE] mean and std.dev: (704.33, 593.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1249, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (1376.06, 724.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 313.476 CPU sec, 17.548 real sec
[0000] Calling mem_process_seqs.., task: 1490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517205, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1019, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1159.26, 1071.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1390, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5363)
[0000][PE] mean and std.dev: (1526.59, 784.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 315.195 CPU sec, 17.664 real sec
[0000] Calling mem_process_seqs.., task: 1491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516966, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 805, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (978.62, 687.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1139, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5078)
[0000][PE] mean and std.dev: (1494.32, 844.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 318.977 CPU sec, 17.949 real sec
[0000] Calling mem_process_seqs.., task: 1492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517399, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 643, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1207.47, 1174.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.26, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1268, 1844, 3992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9440)
[0000][PE] mean and std.dev: (2805.33, 2173.17)
[0000][PE] low and high boundaries for proper pairs: (1, 12164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 311.988 CPU sec, 17.459 real sec
[0000] Calling mem_process_seqs.., task: 1493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517084, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 561, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4225)
[0000][PE] mean and std.dev: (818.89, 678.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1653, 2814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6866)
[0000][PE] mean and std.dev: (1729.54, 1114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 313.703 CPU sec, 17.578 real sec
[0000] Calling mem_process_seqs.., task: 1494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517198, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 653, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (703.78, 414.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1086, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (1370.76, 1136.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 316.483 CPU sec, 17.738 real sec
[0000] Calling mem_process_seqs.., task: 1495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517447, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 564, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (645.52, 558.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.18, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1511, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5049)
[0000][PE] mean and std.dev: (1672.71, 980.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 316.683 CPU sec, 17.777 real sec
[0000] Calling mem_process_seqs.., task: 1496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517101, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 411, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (690.36, 695.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.48, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (460, 823, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (918.21, 744.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 320.927 CPU sec, 18.043 real sec
[0000] Calling mem_process_seqs.., task: 1497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516943, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 696, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (1059.70, 963.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.19, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1081, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (1039.50, 517.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 316.112 CPU sec, 17.708 real sec
[0000] Calling mem_process_seqs.., task: 1498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517100, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 437, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5666)
[0000][PE] mean and std.dev: (924.78, 966.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.29, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1304, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (1350.56, 848.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 318.983 CPU sec, 17.868 real sec
[0000] Calling mem_process_seqs.., task: 1499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517065, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 475, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (1035.14, 907.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1290, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (1476.12, 1046.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 315.221 CPU sec, 17.659 real sec
[0000] Calling mem_process_seqs.., task: 1500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517123, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 480, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (783.84, 721.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.39, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1038, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7980)
[0000][PE] mean and std.dev: (1677.12, 1285.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 321.755 CPU sec, 18.092 real sec
[0000] Calling mem_process_seqs.., task: 1501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516878, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 497, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1932)
[0000][PE] mean and std.dev: (571.37, 472.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1335, 1665, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4263)
[0000][PE] mean and std.dev: (1635.12, 857.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 314.516 CPU sec, 17.629 real sec
[0000] Calling mem_process_seqs.., task: 1502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516960, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 441, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (911.91, 910.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1763, 2022, 3940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8294)
[0000][PE] mean and std.dev: (2643.24, 1702.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 321.280 CPU sec, 18.021 real sec
[0000] Calling mem_process_seqs.., task: 1503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517084, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 624, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5794)
[0000][PE] mean and std.dev: (1102.20, 1160.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1371, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (1371.71, 727.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 316.382 CPU sec, 17.759 real sec
[0000] Calling mem_process_seqs.., task: 1504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517104, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 914, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5363)
[0000][PE] mean and std.dev: (1138.42, 952.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.73, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1013, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4782)
[0000][PE] mean and std.dev: (1280.27, 868.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 316.270 CPU sec, 17.760 real sec
[0000] Calling mem_process_seqs.., task: 1505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517134, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 1023, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (923.92, 706.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1477, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (1377.00, 556.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 314.139 CPU sec, 17.615 real sec
[0000] Calling mem_process_seqs.., task: 1506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516804, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 786, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (743.91, 579.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.29, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 1244, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (1306.22, 738.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 317.124 CPU sec, 17.821 real sec
[0000] Calling mem_process_seqs.., task: 1507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516988, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 712, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (873.52, 608.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1255, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (291, 2106)
[0000][PE] mean and std.dev: (1076.86, 400.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 313.905 CPU sec, 17.587 real sec
[0000] Calling mem_process_seqs.., task: 1508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517419, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (501, 1034, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5733)
[0000][PE] mean and std.dev: (1362.14, 1221.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1756, 2631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5519)
[0000][PE] mean and std.dev: (1808.33, 998.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 314.100 CPU sec, 17.607 real sec
[0000] Calling mem_process_seqs.., task: 1509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517577, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 454, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (887.47, 891.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1617, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6940)
[0000][PE] mean and std.dev: (1835.20, 1255.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 320.098 CPU sec, 17.960 real sec
[0000] Calling mem_process_seqs.., task: 1510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517221, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 745, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6229)
[0000][PE] mean and std.dev: (1224.88, 1281.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1565, 1838, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4187)
[0000][PE] mean and std.dev: (1591.38, 703.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 322.317 CPU sec, 18.081 real sec
[0000] Calling mem_process_seqs.., task: 1511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516860, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 720, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3378)
[0000][PE] mean and std.dev: (755.19, 504.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.75, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1207, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (1247.53, 719.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 312.162 CPU sec, 17.493 real sec
[0000] Calling mem_process_seqs.., task: 1512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517165, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 676, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (817.61, 854.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.72, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 2224, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6057)
[0000][PE] mean and std.dev: (2336.94, 1278.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 318.075 CPU sec, 17.851 real sec
[0000] Calling mem_process_seqs.., task: 1513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516643, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 885, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (771.57, 708.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1349, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5670)
[0000][PE] mean and std.dev: (1588.76, 1035.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 313.918 CPU sec, 17.642 real sec
[0000] Calling mem_process_seqs.., task: 1514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517048, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 593, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (839.34, 745.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1620, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1753.84, 993.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 313.472 CPU sec, 17.656 real sec
[0000] Calling mem_process_seqs.., task: 1515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517164, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 443, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (726.24, 661.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1300, 1817, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (1570.75, 568.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 315.509 CPU sec, 17.681 real sec
[0000] Calling mem_process_seqs.., task: 1516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516445, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 747, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5515)
[0000][PE] mean and std.dev: (976.32, 829.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1176, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (1232.47, 660.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 321.478 CPU sec, 18.058 real sec
[0000] Calling mem_process_seqs.., task: 1517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516588, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 517, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2905)
[0000][PE] mean and std.dev: (583.50, 437.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.93, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1319, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3011)
[0000][PE] mean and std.dev: (1236.13, 490.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 310.753 CPU sec, 17.426 real sec
[0000] Calling mem_process_seqs.., task: 1518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516870, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 516, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (738.62, 743.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1038, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (1221.20, 810.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 321.632 CPU sec, 18.052 real sec
[0000] Calling mem_process_seqs.., task: 1519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516288, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 1029, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3856)
[0000][PE] mean and std.dev: (1094.44, 747.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1491, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1809.07, 899.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 318.451 CPU sec, 17.852 real sec
[0000] Calling mem_process_seqs.., task: 1520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516697, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 499, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (892.91, 826.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1415, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (1278.79, 557.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 317.718 CPU sec, 17.901 real sec
[0000] Calling mem_process_seqs.., task: 1521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517047, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 433, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3154)
[0000][PE] mean and std.dev: (657.71, 587.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1752, 2968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7624)
[0000][PE] mean and std.dev: (2134.71, 1855.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 315.518 CPU sec, 17.685 real sec
[0000] Calling mem_process_seqs.., task: 1522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516984, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 917, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4931)
[0000][PE] mean and std.dev: (1062.20, 965.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1651, 3661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8935)
[0000][PE] mean and std.dev: (2303.31, 1945.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 317.831 CPU sec, 17.829 real sec
[0000] Calling mem_process_seqs.., task: 1523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517139, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 1181, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5785)
[0000][PE] mean and std.dev: (1298.31, 1019.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1406, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (1515.64, 572.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 318.759 CPU sec, 17.895 real sec
[0000] Calling mem_process_seqs.., task: 1524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517589, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 478, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2832)
[0000][PE] mean and std.dev: (767.33, 660.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1339, 2761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6249)
[0000][PE] mean and std.dev: (1579.20, 1300.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 322.739 CPU sec, 18.092 real sec
[0000] Calling mem_process_seqs.., task: 1525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517127, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 601, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (1119.32, 1323.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1363, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4285)
[0000][PE] mean and std.dev: (1394.60, 806.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 315.543 CPU sec, 17.700 real sec
[0000] Calling mem_process_seqs.., task: 1526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517024, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 470, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4505)
[0000][PE] mean and std.dev: (972.76, 1064.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1355, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (1304.61, 554.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 322.172 CPU sec, 18.079 real sec
[0000] Calling mem_process_seqs.., task: 1527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517122, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 368, 845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2017)
[0000][PE] mean and std.dev: (495.29, 379.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1267, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4599)
[0000][PE] mean and std.dev: (1436.76, 875.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 313.789 CPU sec, 17.592 real sec
[0000] Calling mem_process_seqs.., task: 1528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517111, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 504, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2510)
[0000][PE] mean and std.dev: (792.21, 589.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.76, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1157, 3053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7571)
[0000][PE] mean and std.dev: (1698.12, 1279.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 322.715 CPU sec, 18.145 real sec
[0000] Calling mem_process_seqs.., task: 1529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516609, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 968, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3594)
[0000][PE] mean and std.dev: (840.57, 679.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1757, 3008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6748)
[0000][PE] mean and std.dev: (2031.53, 1348.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 318.261 CPU sec, 17.853 real sec
[0000] Calling mem_process_seqs.., task: 1530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517307, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1190, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1283.00, 1082.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1910, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (1593.56, 461.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 323.566 CPU sec, 18.148 real sec
[0000] Calling mem_process_seqs.., task: 1531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517113, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 465, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (628.87, 443.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1234, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (1160.83, 470.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 316.082 CPU sec, 17.700 real sec
[0000] Calling mem_process_seqs.., task: 1532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517252, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 458, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2433)
[0000][PE] mean and std.dev: (571.06, 336.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.33, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1455, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4094)
[0000][PE] mean and std.dev: (1375.90, 628.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 320.203 CPU sec, 17.965 real sec
[0000] Calling mem_process_seqs.., task: 1533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517228, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 920, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (1018.50, 722.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1334, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4904)
[0000][PE] mean and std.dev: (1391.19, 916.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 319.775 CPU sec, 17.946 real sec
[0000] Calling mem_process_seqs.., task: 1534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517214, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 698, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (920.25, 665.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (698, 880, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2750)
[0000][PE] mean and std.dev: (975.75, 505.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 321.764 CPU sec, 18.061 real sec
[0000] Calling mem_process_seqs.., task: 1535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516835, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 574, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3114)
[0000][PE] mean and std.dev: (608.95, 419.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1474, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5698)
[0000][PE] mean and std.dev: (1552.56, 1202.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 324.232 CPU sec, 18.198 real sec
[0000] Calling mem_process_seqs.., task: 1536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516823, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 340, 729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1749)
[0000][PE] mean and std.dev: (433.08, 356.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (769, 2161, 3268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8266)
[0000][PE] mean and std.dev: (1898.56, 1540.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10765)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1519, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (1560.56, 1201.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 316.756 CPU sec, 17.804 real sec
[0000] Calling mem_process_seqs.., task: 1537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516863, 10, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 684, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2319)
[0000][PE] mean and std.dev: (712.24, 492.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.70, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (187, 1793, 4298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12520)
[0000][PE] mean and std.dev: (2253.60, 2218.54)
[0000][PE] low and high boundaries for proper pairs: (1, 16631)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1200, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (1151.20, 458.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 319.756 CPU sec, 17.969 real sec
[0000] Calling mem_process_seqs.., task: 1538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517040, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 350, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (465.55, 423.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.27, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 323.504 CPU sec, 18.133 real sec
[0000] Calling mem_process_seqs.., task: 1539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516754, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 992, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (1188.04, 886.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1467, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (1357.61, 682.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 315.555 CPU sec, 17.694 real sec
[0000] Calling mem_process_seqs.., task: 1540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517485, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 720, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (810.87, 459.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (806, 2799, 5275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14213)
[0000][PE] mean and std.dev: (3052.30, 2671.87)
[0000][PE] low and high boundaries for proper pairs: (1, 18682)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1293, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (1284.75, 639.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 315.630 CPU sec, 17.739 real sec
[0000] Calling mem_process_seqs.., task: 1541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516822, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 557, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (910.45, 799.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.01, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1490, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4056)
[0000][PE] mean and std.dev: (1439.30, 668.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 315.879 CPU sec, 17.721 real sec
[0000] Calling mem_process_seqs.., task: 1542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517576, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 527, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (832.23, 778.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 318.680 CPU sec, 17.895 real sec
[0000] Calling mem_process_seqs.., task: 1543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517195, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 435, 791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1897)
[0000][PE] mean and std.dev: (484.10, 281.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1222, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1430.69, 782.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 317.545 CPU sec, 17.881 real sec
[0000] Calling mem_process_seqs.., task: 1544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516885, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 373, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5900)
[0000][PE] mean and std.dev: (1044.94, 1287.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1109, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2582)
[0000][PE] mean and std.dev: (1097.71, 426.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 319.022 CPU sec, 17.894 real sec
[0000] Calling mem_process_seqs.., task: 1545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516522, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 738, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1039.07, 1084.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 772, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (795.73, 555.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 319.024 CPU sec, 17.921 real sec
[0000] Calling mem_process_seqs.., task: 1546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517088, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 412, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6119)
[0000][PE] mean and std.dev: (1089.42, 1313.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.67, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1252, 2655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5955)
[0000][PE] mean and std.dev: (1563.54, 879.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 317.819 CPU sec, 17.848 real sec
[0000] Calling mem_process_seqs.., task: 1547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516726, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 423, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (624.17, 523.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.44, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1501, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (1463.76, 910.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 315.366 CPU sec, 17.722 real sec
[0000] Calling mem_process_seqs.., task: 1548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517076, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 781, 3239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9215)
[0000][PE] mean and std.dev: (1376.90, 1587.28)
[0000][PE] low and high boundaries for proper pairs: (1, 12203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (556, 1215, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (1084.82, 733.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 316.738 CPU sec, 17.853 real sec
[0000] Calling mem_process_seqs.., task: 1549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517038, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 773, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (912.71, 819.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1654, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1530.07, 966.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 317.899 CPU sec, 17.815 real sec
[0000] Calling mem_process_seqs.., task: 1550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516966, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 361, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (544.89, 470.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.73, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1036, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (984.45, 412.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 317.486 CPU sec, 17.795 real sec
[0000] Calling mem_process_seqs.., task: 1551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517257, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 367, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (705.65, 818.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1399, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (1448.00, 887.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 316.420 CPU sec, 17.735 real sec
[0000] Calling mem_process_seqs.., task: 1552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516418, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 412, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2607)
[0000][PE] mean and std.dev: (584.23, 471.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (539, 875, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4466)
[0000][PE] mean and std.dev: (1212.68, 877.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 316.547 CPU sec, 17.749 real sec
[0000] Calling mem_process_seqs.., task: 1553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516400, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 669, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (744.12, 628.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1209, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (1332.15, 539.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 318.697 CPU sec, 17.892 real sec
[0000] Calling mem_process_seqs.., task: 1554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516821, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 365, 891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2149)
[0000][PE] mean and std.dev: (565.17, 496.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1326, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1470.08, 754.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 318.068 CPU sec, 17.905 real sec
[0000] Calling mem_process_seqs.., task: 1555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516910, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 610, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (909.70, 752.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1408, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5125)
[0000][PE] mean and std.dev: (1146.56, 747.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 317.422 CPU sec, 17.804 real sec
[0000] Calling mem_process_seqs.., task: 1556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517182, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 557, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (829.55, 824.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 1634, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6243)
[0000][PE] mean and std.dev: (1779.19, 935.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 319.646 CPU sec, 17.991 real sec
[0000] Calling mem_process_seqs.., task: 1557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516745, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1251, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1322.27, 974.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 1394, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1384.68, 814.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 314.254 CPU sec, 17.625 real sec
[0000] Calling mem_process_seqs.., task: 1558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516658, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 407, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2892)
[0000][PE] mean and std.dev: (609.30, 518.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1405, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (1208.17, 987.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 316.360 CPU sec, 17.728 real sec
[0000] Calling mem_process_seqs.., task: 1559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517113, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 906, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1085.71, 1055.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1502, 1882, 3112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6332)
[0000][PE] mean and std.dev: (2360.38, 1457.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 313.875 CPU sec, 17.641 real sec
[0000] Calling mem_process_seqs.., task: 1560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516661, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 797, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1187.09, 1155.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1446, 3127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7061)
[0000][PE] mean and std.dev: (1966.28, 1230.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 317.487 CPU sec, 17.830 real sec
[0000] Calling mem_process_seqs.., task: 1561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516931, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (553, 891, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4648)
[0000][PE] mean and std.dev: (1318.00, 1129.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.65, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1375, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (1250.07, 546.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 315.012 CPU sec, 17.644 real sec
[0000] Calling mem_process_seqs.., task: 1562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516880, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 506, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (588.15, 509.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 318.693 CPU sec, 17.859 real sec
[0000] Calling mem_process_seqs.., task: 1563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516799, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 398, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2480)
[0000][PE] mean and std.dev: (639.16, 554.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1614, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5081)
[0000][PE] mean and std.dev: (1746.77, 1154.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 316.089 CPU sec, 17.734 real sec
[0000] Calling mem_process_seqs.., task: 1564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516710, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 866, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3507)
[0000][PE] mean and std.dev: (1017.46, 881.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1189, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6750)
[0000][PE] mean and std.dev: (1601.83, 982.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 316.643 CPU sec, 17.749 real sec
[0000] Calling mem_process_seqs.., task: 1565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516806, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 442, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2521)
[0000][PE] mean and std.dev: (657.91, 642.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1245, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1405.12, 1009.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 318.336 CPU sec, 17.838 real sec
[0000] Calling mem_process_seqs.., task: 1566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516860, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 610, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2100)
[0000][PE] mean and std.dev: (720.41, 406.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1588, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4850)
[0000][PE] mean and std.dev: (1702.54, 1074.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 315.331 CPU sec, 17.665 real sec
[0000] Calling mem_process_seqs.., task: 1567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516627, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 885, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3907)
[0000][PE] mean and std.dev: (1010.14, 780.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1316, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (1463.25, 686.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 316.578 CPU sec, 17.775 real sec
[0000] Calling mem_process_seqs.., task: 1568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516971, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 797, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (1005.50, 763.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1162, 2743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6379)
[0000][PE] mean and std.dev: (1797.39, 1277.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 315.600 CPU sec, 17.683 real sec
[0000] Calling mem_process_seqs.., task: 1569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517058, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 613, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (1074.95, 1025.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1176, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4530)
[0000][PE] mean and std.dev: (1499.40, 1087.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 315.010 CPU sec, 17.673 real sec
[0000] Calling mem_process_seqs.., task: 1570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517472, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 405, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2557)
[0000][PE] mean and std.dev: (656.96, 570.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1422, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (1599.15, 832.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 313.909 CPU sec, 17.559 real sec
[0000] Calling mem_process_seqs.., task: 1571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517322, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 905, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4541)
[0000][PE] mean and std.dev: (1134.57, 915.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1732, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (1615.64, 845.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 317.599 CPU sec, 17.813 real sec
[0000] Calling mem_process_seqs.., task: 1572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517061, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 304, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (533.63, 528.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.75, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1360, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4891)
[0000][PE] mean and std.dev: (1604.65, 843.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 315.270 CPU sec, 17.667 real sec
[0000] Calling mem_process_seqs.., task: 1573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517102, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 542, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5226)
[0000][PE] mean and std.dev: (966.15, 962.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1297, 2846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6278)
[0000][PE] mean and std.dev: (1707.00, 1438.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 313.666 CPU sec, 17.573 real sec
[0000] Calling mem_process_seqs.., task: 1574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517028, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 590, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (756.30, 683.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1324, 1580, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (1472.85, 441.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 313.851 CPU sec, 17.580 real sec
[0000] Calling mem_process_seqs.., task: 1575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516639, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 702, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (1013.54, 941.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1131, 3311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8381)
[0000][PE] mean and std.dev: (1670.09, 1586.57)
[0000][PE] low and high boundaries for proper pairs: (1, 10916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 317.753 CPU sec, 17.819 real sec
[0000] Calling mem_process_seqs.., task: 1576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517268, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 574, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (859.45, 746.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.74, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1594, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (1556.47, 888.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 315.220 CPU sec, 17.656 real sec
[0000] Calling mem_process_seqs.., task: 1577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517063, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 551, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (689.74, 724.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (357, 1515, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1386.00, 1056.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 316.120 CPU sec, 17.711 real sec
[0000] Calling mem_process_seqs.., task: 1578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516856, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 497, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (688.25, 490.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1257, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2752)
[0000][PE] mean and std.dev: (1214.33, 643.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 313.266 CPU sec, 17.539 real sec
[0000] Calling mem_process_seqs.., task: 1579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517072, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 490, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5229)
[0000][PE] mean and std.dev: (858.65, 841.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.78, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 1130, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (1124.57, 745.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 315.909 CPU sec, 17.707 real sec
[0000] Calling mem_process_seqs.., task: 1580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516696, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 444, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2209)
[0000][PE] mean and std.dev: (535.13, 441.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.20, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1543, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (1558.91, 782.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 315.625 CPU sec, 17.679 real sec
[0000] Calling mem_process_seqs.., task: 1581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516853, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1400, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4774)
[0000][PE] mean and std.dev: (1088.78, 795.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1339, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3066)
[0000][PE] mean and std.dev: (1248.65, 584.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 318.354 CPU sec, 17.847 real sec
[0000] Calling mem_process_seqs.., task: 1582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516803, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 321, 456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 894)
[0000][PE] mean and std.dev: (287.35, 122.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1004, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3870)
[0000][PE] mean and std.dev: (1093.65, 540.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 317.403 CPU sec, 17.816 real sec
[0000] Calling mem_process_seqs.., task: 1583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516565, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 486, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (808.79, 722.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1650, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (1611.41, 705.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 313.583 CPU sec, 17.590 real sec
[0000] Calling mem_process_seqs.., task: 1584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516929, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1196, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (1128.10, 844.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1076, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5264)
[0000][PE] mean and std.dev: (1328.07, 946.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 316.133 CPU sec, 17.732 real sec
[0000] Calling mem_process_seqs.., task: 1585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516878, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 349, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1755)
[0000][PE] mean and std.dev: (484.92, 372.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1342, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (1405.74, 752.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 318.190 CPU sec, 17.885 real sec
[0000] Calling mem_process_seqs.., task: 1586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516898, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 587, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (734.81, 686.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1313, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3150)
[0000][PE] mean and std.dev: (1371.71, 746.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 320.689 CPU sec, 18.100 real sec
[0000] Calling mem_process_seqs.., task: 1587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516885, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 1128, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (1215.22, 1051.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1442, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (1286.62, 508.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 320.046 CPU sec, 18.062 real sec
[0000] Calling mem_process_seqs.., task: 1588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516923, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 928, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (763.67, 602.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.96, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1512, 1927, 3154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6438)
[0000][PE] mean and std.dev: (2394.04, 1388.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 318.779 CPU sec, 17.976 real sec
[0000] Calling mem_process_seqs.., task: 1589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517024, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 429, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2256)
[0000][PE] mean and std.dev: (581.22, 458.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (627, 1144, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4686)
[0000][PE] mean and std.dev: (1219.00, 906.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 321.031 CPU sec, 18.045 real sec
[0000] Calling mem_process_seqs.., task: 1590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516751, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 493, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6659)
[0000][PE] mean and std.dev: (1101.25, 1344.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.34, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1247, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1369.12, 685.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 318.688 CPU sec, 17.937 real sec
[0000] Calling mem_process_seqs.., task: 1591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517089, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 918, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3882)
[0000][PE] mean and std.dev: (910.14, 769.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 893, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5346)
[0000][PE] mean and std.dev: (1001.41, 858.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 319.389 CPU sec, 17.972 real sec
[0000] Calling mem_process_seqs.., task: 1592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517308, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 1147, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4342)
[0000][PE] mean and std.dev: (1096.57, 808.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1274, 4432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11062)
[0000][PE] mean and std.dev: (2446.07, 2305.12)
[0000][PE] low and high boundaries for proper pairs: (1, 14377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 320.094 CPU sec, 17.994 real sec
[0000] Calling mem_process_seqs.., task: 1593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516846, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 463, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6672)
[0000][PE] mean and std.dev: (1274.00, 1387.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.82, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1062, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (971.47, 512.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 320.522 CPU sec, 18.018 real sec
[0000] Calling mem_process_seqs.., task: 1594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516721, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (597, 829, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (993.38, 615.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1131, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3568)
[0000][PE] mean and std.dev: (1127.56, 530.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 321.081 CPU sec, 18.093 real sec
[0000] Calling mem_process_seqs.., task: 1595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517159, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 403, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (675.55, 685.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1004, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (1057.09, 567.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 317.058 CPU sec, 17.819 real sec
[0000] Calling mem_process_seqs.., task: 1596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517638, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 566, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (964.00, 908.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1278, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2600)
[0000][PE] mean and std.dev: (1143.89, 478.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 317.978 CPU sec, 17.866 real sec
[0000] Calling mem_process_seqs.., task: 1597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516795, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 816, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7026)
[0000][PE] mean and std.dev: (1653.48, 1964.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.52, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1217, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (1270.14, 847.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 317.100 CPU sec, 17.858 real sec
[0000] Calling mem_process_seqs.., task: 1598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517165, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 645, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (751.21, 606.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (403, 1345, 3673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10213)
[0000][PE] mean and std.dev: (1965.75, 1988.66)
[0000][PE] low and high boundaries for proper pairs: (1, 13483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 321.232 CPU sec, 18.093 real sec
[0000] Calling mem_process_seqs.., task: 1599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517402, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 829, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (976.72, 687.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1326, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (968.44, 574.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 318.215 CPU sec, 17.858 real sec
[0000] Calling mem_process_seqs.., task: 1600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516567, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (979, 1077, 2931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6835)
[0000][PE] mean and std.dev: (1663.25, 1593.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1229, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4941)
[0000][PE] mean and std.dev: (1538.00, 1246.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 321.275 CPU sec, 18.128 real sec
[0000] Calling mem_process_seqs.., task: 1601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516674, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 1170, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (1180.93, 985.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1105, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (1191.19, 688.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 321.289 CPU sec, 18.055 real sec
[0000] Calling mem_process_seqs.., task: 1602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517215, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 763, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (856.47, 569.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.72, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1310, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5119)
[0000][PE] mean and std.dev: (1714.39, 1071.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 323.139 CPU sec, 18.212 real sec
[0000] Calling mem_process_seqs.., task: 1603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516758, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 685, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2684)
[0000][PE] mean and std.dev: (728.77, 468.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1366, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (1410.75, 604.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 322.728 CPU sec, 18.145 real sec
[0000] Calling mem_process_seqs.., task: 1604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516315, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 639, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (814.75, 703.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (611, 1240, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (1052.93, 616.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 323.586 CPU sec, 18.236 real sec
[0000] Calling mem_process_seqs.., task: 1605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517185, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 803, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3539)
[0000][PE] mean and std.dev: (940.75, 826.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1584, 2981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6521)
[0000][PE] mean and std.dev: (2115.41, 1601.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 320.565 CPU sec, 18.054 real sec
[0000] Calling mem_process_seqs.., task: 1606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517253, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 815, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (963.25, 680.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1136, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (1277.83, 908.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 318.370 CPU sec, 17.926 real sec
[0000] Calling mem_process_seqs.., task: 1607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517165, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 609, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (1134.04, 963.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1256, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (1092.46, 535.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 321.253 CPU sec, 18.048 real sec
[0000] Calling mem_process_seqs.., task: 1608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516975, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 450, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2069)
[0000][PE] mean and std.dev: (469.00, 360.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.84, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1306, 3268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7998)
[0000][PE] mean and std.dev: (2071.89, 1591.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 320.838 CPU sec, 18.019 real sec
[0000] Calling mem_process_seqs.., task: 1609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516408, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 373, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (734.29, 709.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1508, 3899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9483)
[0000][PE] mean and std.dev: (2267.62, 1779.41)
[0000][PE] low and high boundaries for proper pairs: (1, 12275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 322.542 CPU sec, 18.120 real sec
[0000] Calling mem_process_seqs.., task: 1610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517520, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 790, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (858.11, 659.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.94, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1614, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (1557.12, 881.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 319.747 CPU sec, 17.988 real sec
[0000] Calling mem_process_seqs.., task: 1611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516607, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 803, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (954.41, 827.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.27, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (438, 910, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (1133.58, 789.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 320.936 CPU sec, 18.057 real sec
[0000] Calling mem_process_seqs.., task: 1612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516845, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 695, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (697.07, 530.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.27, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (539, 1303, 3097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8213)
[0000][PE] mean and std.dev: (1546.12, 1293.66)
[0000][PE] low and high boundaries for proper pairs: (1, 10771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 320.787 CPU sec, 18.052 real sec
[0000] Calling mem_process_seqs.., task: 1613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517618, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 396, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2370)
[0000][PE] mean and std.dev: (677.42, 584.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (476, 928, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (1243.25, 1003.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 317.709 CPU sec, 17.854 real sec
[0000] Calling mem_process_seqs.., task: 1614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516846, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 708, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (965.71, 710.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1400, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4471)
[0000][PE] mean and std.dev: (1346.42, 816.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 322.334 CPU sec, 18.136 real sec
[0000] Calling mem_process_seqs.., task: 1615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516864, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 522, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (799.96, 672.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1173, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1231.32, 754.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 319.096 CPU sec, 17.993 real sec
[0000] Calling mem_process_seqs.., task: 1616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517183, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 401, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4757)
[0000][PE] mean and std.dev: (943.04, 864.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 1628, 2974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6246)
[0000][PE] mean and std.dev: (2270.64, 1239.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 320.283 CPU sec, 17.995 real sec
[0000] Calling mem_process_seqs.., task: 1617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516962, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 559, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4894)
[0000][PE] mean and std.dev: (971.35, 1063.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1337, 1414, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (491, 2606)
[0000][PE] mean and std.dev: (1505.56, 442.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 321.555 CPU sec, 18.046 real sec
[0000] Calling mem_process_seqs.., task: 1618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516941, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 384, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (721.30, 728.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1503, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (140, 2905)
[0000][PE] mean and std.dev: (1336.94, 491.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 322.297 CPU sec, 18.094 real sec
[0000] Calling mem_process_seqs.., task: 1619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516562, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 625, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (1055.74, 1027.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1337, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (1358.06, 787.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 325.491 CPU sec, 18.297 real sec
[0000] Calling mem_process_seqs.., task: 1620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516646, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 538, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4705)
[0000][PE] mean and std.dev: (1151.47, 1089.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.88, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1418, 3728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8672)
[0000][PE] mean and std.dev: (1866.91, 1292.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 323.084 CPU sec, 18.242 real sec
[0000] Calling mem_process_seqs.., task: 1621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517457, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 1103, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5040)
[0000][PE] mean and std.dev: (1112.34, 807.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1837, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5285)
[0000][PE] mean and std.dev: (1545.84, 955.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 321.727 CPU sec, 18.108 real sec
[0000] Calling mem_process_seqs.., task: 1622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516747, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 388, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2273)
[0000][PE] mean and std.dev: (549.95, 499.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1250, 3005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7255)
[0000][PE] mean and std.dev: (1683.25, 1148.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 318.530 CPU sec, 17.917 real sec
[0000] Calling mem_process_seqs.., task: 1623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517154, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 878, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1017.29, 817.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1169, 2861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6775)
[0000][PE] mean and std.dev: (1753.44, 1189.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 318.844 CPU sec, 17.943 real sec
[0000] Calling mem_process_seqs.., task: 1624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516837, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 384, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (716.18, 694.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 1058, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (1102.94, 723.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 320.478 CPU sec, 18.049 real sec
[0000] Calling mem_process_seqs.., task: 1625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516900, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 613, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (880.35, 705.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1296, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (1320.24, 560.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 320.741 CPU sec, 18.032 real sec
[0000] Calling mem_process_seqs.., task: 1626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516690, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 372, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2584)
[0000][PE] mean and std.dev: (662.67, 575.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1322, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (1548.50, 901.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 321.799 CPU sec, 18.143 real sec
[0000] Calling mem_process_seqs.., task: 1627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516445, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 878, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (983.00, 889.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1394, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5290)
[0000][PE] mean and std.dev: (1350.85, 788.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 319.802 CPU sec, 17.948 real sec
[0000] Calling mem_process_seqs.., task: 1628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516781, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 480, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3669)
[0000][PE] mean and std.dev: (649.80, 666.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1401, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (1488.94, 586.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 326.051 CPU sec, 18.379 real sec
[0000] Calling mem_process_seqs.., task: 1629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516640, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 426, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (848.00, 807.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1304, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (1184.92, 583.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 321.668 CPU sec, 18.094 real sec
[0000] Calling mem_process_seqs.., task: 1630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517197, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 703, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (943.25, 705.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1273, 3295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7437)
[0000][PE] mean and std.dev: (2204.18, 1849.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 321.900 CPU sec, 18.115 real sec
[0000] Calling mem_process_seqs.., task: 1631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516719, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 734, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (922.57, 848.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1449, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (1644.62, 930.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 320.210 CPU sec, 18.030 real sec
[0000] Calling mem_process_seqs.., task: 1632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516728, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 924, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4993)
[0000][PE] mean and std.dev: (1314.17, 1210.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1339, 2284, 3401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7525)
[0000][PE] mean and std.dev: (2594.77, 1569.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 322.800 CPU sec, 18.168 real sec
[0000] Calling mem_process_seqs.., task: 1633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517425, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 422, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (799.00, 693.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1396, 3575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9187)
[0000][PE] mean and std.dev: (2504.10, 2484.82)
[0000][PE] low and high boundaries for proper pairs: (1, 12443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 320.453 CPU sec, 18.035 real sec
[0000] Calling mem_process_seqs.., task: 1634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517206, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 811, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7016)
[0000][PE] mean and std.dev: (1241.73, 1264.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.47, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1256, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4307)
[0000][PE] mean and std.dev: (1446.80, 742.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 320.522 CPU sec, 18.043 real sec
[0000] Calling mem_process_seqs.., task: 1635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517203, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 465, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (660.81, 590.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.97, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1062, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (1076.85, 609.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 318.698 CPU sec, 17.934 real sec
[0000] Calling mem_process_seqs.., task: 1636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517229, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 436, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (809.10, 820.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 923, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2476)
[0000][PE] mean and std.dev: (830.09, 394.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 323.452 CPU sec, 18.190 real sec
[0000] Calling mem_process_seqs.., task: 1637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516857, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 400, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (757.91, 809.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1229, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (1126.33, 601.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 320.839 CPU sec, 18.017 real sec
[0000] Calling mem_process_seqs.., task: 1638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516985, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 522, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3536)
[0000][PE] mean and std.dev: (687.22, 521.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1716, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5159)
[0000][PE] mean and std.dev: (1725.56, 842.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 325.182 CPU sec, 18.328 real sec
[0000] Calling mem_process_seqs.., task: 1639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516339, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 575, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (1002.14, 991.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1816, 3053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6847)
[0000][PE] mean and std.dev: (1965.73, 1262.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 321.581 CPU sec, 18.132 real sec
[0000] Calling mem_process_seqs.., task: 1640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517045, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 800, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (940.65, 814.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.21, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1103, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (976.60, 463.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 320.870 CPU sec, 18.059 real sec
[0000] Calling mem_process_seqs.., task: 1641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516848, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 834, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (1066.32, 1025.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 1188, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (988.67, 397.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 320.443 CPU sec, 18.012 real sec
[0000] Calling mem_process_seqs.., task: 1642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516640, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 523, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (933.29, 812.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 910, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (1298.57, 992.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 321.922 CPU sec, 18.107 real sec
[0000] Calling mem_process_seqs.., task: 1643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517065, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 947, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5036)
[0000][PE] mean and std.dev: (1405.00, 1325.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1102, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (1222.94, 768.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 321.187 CPU sec, 18.059 real sec
[0000] Calling mem_process_seqs.., task: 1644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517362, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 994, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (898.95, 513.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (570, 1588, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5190)
[0000][PE] mean and std.dev: (1256.58, 782.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 317.685 CPU sec, 17.872 real sec
[0000] Calling mem_process_seqs.., task: 1645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516842, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 560, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3672)
[0000][PE] mean and std.dev: (945.10, 854.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1420, 2032, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (1971.00, 828.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 329.440 CPU sec, 18.499 real sec
[0000] Calling mem_process_seqs.., task: 1646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516918, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 352, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2032)
[0000][PE] mean and std.dev: (524.67, 334.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1365, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4897)
[0000][PE] mean and std.dev: (1641.11, 1144.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 319.319 CPU sec, 17.947 real sec
[0000] Calling mem_process_seqs.., task: 1647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517171, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 682, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (839.40, 748.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1301, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (1281.00, 566.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 318.670 CPU sec, 17.897 real sec
[0000] Calling mem_process_seqs.., task: 1648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516938, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 476, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (784.70, 831.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.88, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1143, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (1182.85, 672.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 317.005 CPU sec, 17.828 real sec
[0000] Calling mem_process_seqs.., task: 1649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517311, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 389, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2055)
[0000][PE] mean and std.dev: (503.48, 431.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1632, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5805)
[0000][PE] mean and std.dev: (1655.87, 727.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 328.313 CPU sec, 18.472 real sec
[0000] Calling mem_process_seqs.., task: 1650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517155, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 1051, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (1046.92, 988.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1274, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1164.29, 566.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 318.307 CPU sec, 17.870 real sec
[0000] Calling mem_process_seqs.., task: 1651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517370, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 440, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (790.09, 705.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1920, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4831)
[0000][PE] mean and std.dev: (1857.44, 709.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 316.433 CPU sec, 17.769 real sec
[0000] Calling mem_process_seqs.., task: 1652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516925, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 851, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (1030.44, 795.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 321.450 CPU sec, 18.053 real sec
[0000] Calling mem_process_seqs.., task: 1653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516967, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 409, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (799.55, 821.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1237, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (1344.20, 805.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 322.071 CPU sec, 18.112 real sec
[0000] Calling mem_process_seqs.., task: 1654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516539, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 580, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5808)
[0000][PE] mean and std.dev: (1167.75, 1124.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1609, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1466.08, 628.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 319.877 CPU sec, 17.968 real sec
[0000] Calling mem_process_seqs.., task: 1655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517522, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 898, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (1039.65, 1142.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.17, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1852, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6088)
[0000][PE] mean and std.dev: (2136.73, 1110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 320.113 CPU sec, 18.009 real sec
[0000] Calling mem_process_seqs.., task: 1656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516551, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 370, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (618.36, 556.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.02, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1427, 2927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6923)
[0000][PE] mean and std.dev: (1760.59, 1199.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 324.642 CPU sec, 18.273 real sec
[0000] Calling mem_process_seqs.., task: 1657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516650, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 524, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (923.30, 989.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (612, 1037, 3432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9072)
[0000][PE] mean and std.dev: (1613.53, 1258.58)
[0000][PE] low and high boundaries for proper pairs: (1, 11892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 320.416 CPU sec, 18.039 real sec
[0000] Calling mem_process_seqs.., task: 1658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517176, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 722, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (726.48, 563.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1186, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (1149.62, 468.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 318.960 CPU sec, 17.914 real sec
[0000] Calling mem_process_seqs.., task: 1659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516671, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 808, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (1038.14, 895.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1386, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (1491.32, 627.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 321.186 CPU sec, 18.070 real sec
[0000] Calling mem_process_seqs.., task: 1660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516665, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 807, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (814.08, 613.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1377, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4970)
[0000][PE] mean and std.dev: (1302.35, 710.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 320.840 CPU sec, 18.047 real sec
[0000] Calling mem_process_seqs.., task: 1661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516811, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 399, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2029)
[0000][PE] mean and std.dev: (452.83, 272.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 1049, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (1098.05, 624.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 317.962 CPU sec, 17.896 real sec
[0000] Calling mem_process_seqs.., task: 1662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517211, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 762, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2498)
[0000][PE] mean and std.dev: (683.00, 345.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1478, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (1558.36, 949.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 318.145 CPU sec, 17.930 real sec
[0000] Calling mem_process_seqs.., task: 1663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517045, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (953, 1099, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3458)
[0000][PE] mean and std.dev: (1260.00, 865.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1350, 2228, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5550)
[0000][PE] mean and std.dev: (1956.24, 944.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 320.679 CPU sec, 18.056 real sec
[0000] Calling mem_process_seqs.., task: 1664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516874, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 813, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (1184.59, 1094.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1332, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (1301.17, 575.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 320.332 CPU sec, 18.026 real sec
[0000] Calling mem_process_seqs.., task: 1665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517421, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 369, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (565.68, 483.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1045, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (958.85, 424.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 319.070 CPU sec, 17.940 real sec
[0000] Calling mem_process_seqs.., task: 1666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516550, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 374, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2644)
[0000][PE] mean and std.dev: (516.32, 450.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.72, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1456, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1505.68, 988.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 321.986 CPU sec, 18.139 real sec
[0000] Calling mem_process_seqs.., task: 1667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516943, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 511, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (1080.48, 1188.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1118, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (1220.32, 621.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 319.140 CPU sec, 17.956 real sec
[0000] Calling mem_process_seqs.., task: 1668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517183, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 803, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5055)
[0000][PE] mean and std.dev: (1015.32, 920.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 320.689 CPU sec, 18.049 real sec
[0000] Calling mem_process_seqs.., task: 1669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517242, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 617, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (707.67, 573.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1788, 3585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8903)
[0000][PE] mean and std.dev: (2436.38, 2015.17)
[0000][PE] low and high boundaries for proper pairs: (1, 11562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 325.635 CPU sec, 18.260 real sec
[0000] Calling mem_process_seqs.., task: 1670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516767, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 714, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4287)
[0000][PE] mean and std.dev: (1046.30, 905.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1158, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (1162.81, 540.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 321.615 CPU sec, 18.048 real sec
[0000] Calling mem_process_seqs.., task: 1671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516970, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 488, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2835)
[0000][PE] mean and std.dev: (704.15, 576.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (182, 694, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (712.85, 655.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 321.835 CPU sec, 18.128 real sec
[0000] Calling mem_process_seqs.., task: 1672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517058, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 449, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (751.92, 705.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.44, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 1051, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4657)
[0000][PE] mean and std.dev: (1249.15, 966.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 322.862 CPU sec, 18.212 real sec
[0000] Calling mem_process_seqs.., task: 1673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516935, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 399, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (741.86, 673.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1349, 1611, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (1636.82, 725.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 319.325 CPU sec, 17.993 real sec
[0000] Calling mem_process_seqs.., task: 1674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516970, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 940, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (1104.72, 972.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (510, 984, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2742)
[0000][PE] mean and std.dev: (933.67, 624.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 319.338 CPU sec, 18.053 real sec
[0000] Calling mem_process_seqs.., task: 1675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516494, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 524, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2607)
[0000][PE] mean and std.dev: (670.12, 562.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1368, 1610, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (1605.00, 786.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 321.698 CPU sec, 18.059 real sec
[0000] Calling mem_process_seqs.., task: 1676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517033, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 626, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3638)
[0000][PE] mean and std.dev: (853.90, 725.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 1210, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (1018.47, 595.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 320.526 CPU sec, 18.035 real sec
[0000] Calling mem_process_seqs.., task: 1677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516621, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 634, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (716.00, 579.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1463, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4063)
[0000][PE] mean and std.dev: (1403.58, 613.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 320.270 CPU sec, 18.080 real sec
[0000] Calling mem_process_seqs.., task: 1678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516722, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (604, 1132, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4591)
[0000][PE] mean and std.dev: (1289.60, 1051.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1363, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (1639.22, 1054.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 320.611 CPU sec, 18.031 real sec
[0000] Calling mem_process_seqs.., task: 1679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516748, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 339, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (705.65, 786.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1280, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (1245.12, 639.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 329.229 CPU sec, 18.530 real sec
[0000] Calling mem_process_seqs.., task: 1680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517057, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 976, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5368)
[0000][PE] mean and std.dev: (1292.00, 1272.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 1141, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3996)
[0000][PE] mean and std.dev: (1138.08, 806.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 319.785 CPU sec, 17.956 real sec
[0000] Calling mem_process_seqs.., task: 1681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516643, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 736, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2656)
[0000][PE] mean and std.dev: (696.05, 459.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1077, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1410.80, 959.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 325.441 CPU sec, 18.276 real sec
[0000] Calling mem_process_seqs.., task: 1682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517040, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 608, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5617)
[0000][PE] mean and std.dev: (1278.70, 1383.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.79, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 1057, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (1016.82, 563.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 321.803 CPU sec, 18.107 real sec
[0000] Calling mem_process_seqs.., task: 1683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517052, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 681, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (836.75, 946.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1059, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (1094.25, 520.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 319.659 CPU sec, 17.989 real sec
[0000] Calling mem_process_seqs.., task: 1684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517201, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 575, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (828.43, 641.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1535, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6180)
[0000][PE] mean and std.dev: (1895.47, 1316.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 319.839 CPU sec, 17.969 real sec
[0000] Calling mem_process_seqs.., task: 1685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517237, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 518, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (980.48, 893.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1206, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (1397.40, 656.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 322.206 CPU sec, 18.129 real sec
[0000] Calling mem_process_seqs.., task: 1686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517290, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 813, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (946.38, 836.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 321.092 CPU sec, 18.082 real sec
[0000] Calling mem_process_seqs.., task: 1687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517109, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1082, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1153.32, 924.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.59, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1065, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (1071.65, 501.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 321.691 CPU sec, 18.053 real sec
[0000] Calling mem_process_seqs.., task: 1688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516934, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1175, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8471)
[0000][PE] mean and std.dev: (1717.67, 1708.43)
[0000][PE] low and high boundaries for proper pairs: (1, 11186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1337, 1659, 3744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8558)
[0000][PE] mean and std.dev: (2546.28, 1887.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 312.826 CPU sec, 17.525 real sec
[0000] Calling mem_process_seqs.., task: 1689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517200, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 422, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (815.86, 896.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (564, 1023, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3048)
[0000][PE] mean and std.dev: (1057.21, 525.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 317.352 CPU sec, 17.798 real sec
[0000] Calling mem_process_seqs.., task: 1690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516756, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 594, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (765.94, 559.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1520, 2645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5855)
[0000][PE] mean and std.dev: (1474.17, 767.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 317.399 CPU sec, 17.858 real sec
[0000] Calling mem_process_seqs.., task: 1691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516906, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 509, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (515.33, 346.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1508, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (1481.44, 800.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 317.602 CPU sec, 17.877 real sec
[0000] Calling mem_process_seqs.., task: 1692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516422, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 782, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (901.82, 715.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 319.271 CPU sec, 17.942 real sec
[0000] Calling mem_process_seqs.., task: 1693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517164, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 479, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (703.39, 748.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1613, 2780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6418)
[0000][PE] mean and std.dev: (1989.21, 1343.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 316.818 CPU sec, 17.812 real sec
[0000] Calling mem_process_seqs.., task: 1694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517164, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 421, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3781)
[0000][PE] mean and std.dev: (758.39, 623.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (575, 906, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5774)
[0000][PE] mean and std.dev: (1320.85, 946.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 316.033 CPU sec, 17.752 real sec
[0000] Calling mem_process_seqs.., task: 1695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517154, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1456, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4611)
[0000][PE] mean and std.dev: (1231.32, 944.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1523, 2670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5654)
[0000][PE] mean and std.dev: (1856.72, 1227.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 314.707 CPU sec, 17.664 real sec
[0000] Calling mem_process_seqs.., task: 1696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516756, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 465, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1387)
[0000][PE] mean and std.dev: (463.87, 291.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1281, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5323)
[0000][PE] mean and std.dev: (1438.76, 768.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 316.909 CPU sec, 17.758 real sec
[0000] Calling mem_process_seqs.., task: 1697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517054, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 669, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (945.11, 912.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 1396, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6707)
[0000][PE] mean and std.dev: (1472.40, 1188.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 319.806 CPU sec, 17.929 real sec
[0000] Calling mem_process_seqs.., task: 1698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516744, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (477, 924, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4269)
[0000][PE] mean and std.dev: (991.70, 701.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.26, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 866, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4253)
[0000][PE] mean and std.dev: (1250.30, 857.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 316.384 CPU sec, 17.735 real sec
[0000] Calling mem_process_seqs.., task: 1699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517077, 8, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 453, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (771.21, 805.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1404, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (1362.73, 814.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 315.784 CPU sec, 17.759 real sec
[0000] Calling mem_process_seqs.., task: 1700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516947, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 910, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (958.50, 776.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.43, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1285, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (1412.56, 581.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 314.095 CPU sec, 17.594 real sec
[0000] Calling mem_process_seqs.., task: 1701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516844, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 671, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (926.14, 884.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1042, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (1183.64, 804.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 324.158 CPU sec, 18.210 real sec
[0000] Calling mem_process_seqs.., task: 1702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517128, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 605, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5826)
[0000][PE] mean and std.dev: (1302.96, 1448.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1587, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (1520.60, 906.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 313.247 CPU sec, 17.649 real sec
[0000] Calling mem_process_seqs.., task: 1703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516670, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 1023, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5145)
[0000][PE] mean and std.dev: (1109.53, 823.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1476, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (1324.89, 550.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 320.215 CPU sec, 17.970 real sec
[0000] Calling mem_process_seqs.., task: 1704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516955, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 738, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (860.21, 820.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1043, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (4, 2154)
[0000][PE] mean and std.dev: (926.93, 325.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 314.864 CPU sec, 17.619 real sec
[0000] Calling mem_process_seqs.., task: 1705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516864, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 713, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4897)
[0000][PE] mean and std.dev: (989.70, 1063.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.35, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1040, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3133)
[0000][PE] mean and std.dev: (1028.27, 571.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 318.878 CPU sec, 17.916 real sec
[0000] Calling mem_process_seqs.., task: 1706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517122, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 795, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3280)
[0000][PE] mean and std.dev: (831.92, 691.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1547, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1654.95, 1022.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 314.573 CPU sec, 17.689 real sec
[0000] Calling mem_process_seqs.., task: 1707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516708, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 374, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (708.25, 710.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.74, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1246, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (1127.62, 583.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 314.539 CPU sec, 17.670 real sec
[0000] Calling mem_process_seqs.., task: 1708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517050, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 474, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2530)
[0000][PE] mean and std.dev: (582.86, 395.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (728, 1203, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (1239.70, 846.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 315.730 CPU sec, 17.697 real sec
[0000] Calling mem_process_seqs.., task: 1709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517043, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 749, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (870.83, 724.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1328, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (1422.93, 492.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 315.852 CPU sec, 17.685 real sec
[0000] Calling mem_process_seqs.., task: 1710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517116, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 913, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (787.84, 546.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1028, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1237.09, 675.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 316.415 CPU sec, 17.720 real sec
[0000] Calling mem_process_seqs.., task: 1711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517392, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 1204, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (1002.35, 552.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1569, 3003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6987)
[0000][PE] mean and std.dev: (1934.78, 1322.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 315.582 CPU sec, 17.697 real sec
[0000] Calling mem_process_seqs.., task: 1712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516860, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 493, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (659.76, 520.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1098, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (1196.35, 553.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 315.240 CPU sec, 17.672 real sec
[0000] Calling mem_process_seqs.., task: 1713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517321, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 558, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (750.03, 717.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1461, 4438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11270)
[0000][PE] mean and std.dev: (2542.88, 2148.29)
[0000][PE] low and high boundaries for proper pairs: (1, 14686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 317.254 CPU sec, 17.801 real sec
[0000] Calling mem_process_seqs.., task: 1714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516612, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 697, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (882.26, 681.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1414, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5249)
[0000][PE] mean and std.dev: (1443.74, 934.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 315.291 CPU sec, 17.695 real sec
[0000] Calling mem_process_seqs.., task: 1715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517125, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 432, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (746.20, 672.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.74, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1286, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4885)
[0000][PE] mean and std.dev: (1443.00, 828.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 313.036 CPU sec, 17.552 real sec
[0000] Calling mem_process_seqs.., task: 1716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516928, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 363, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (606.91, 555.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1314, 3069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7279)
[0000][PE] mean and std.dev: (1793.90, 1391.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 316.175 CPU sec, 17.782 real sec
[0000] Calling mem_process_seqs.., task: 1717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517282, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 983, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (912.95, 758.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.38, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1306, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (1220.54, 445.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 315.825 CPU sec, 17.692 real sec
[0000] Calling mem_process_seqs.., task: 1718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517219, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 712, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (755.60, 609.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 319.423 CPU sec, 17.922 real sec
[0000] Calling mem_process_seqs.., task: 1719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516966, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 875, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5452)
[0000][PE] mean and std.dev: (1371.77, 1422.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 1488, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1632.88, 896.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 315.054 CPU sec, 17.648 real sec
[0000] Calling mem_process_seqs.., task: 1720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516866, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 992, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (946.72, 728.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.34, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1119, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5606)
[0000][PE] mean and std.dev: (1399.92, 1151.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 316.084 CPU sec, 17.720 real sec
[0000] Calling mem_process_seqs.., task: 1721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517049, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 398, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (611.84, 529.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1480, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1645.12, 929.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 317.068 CPU sec, 17.777 real sec
[0000] Calling mem_process_seqs.., task: 1722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517073, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 621, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (791.67, 654.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1352, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5443)
[0000][PE] mean and std.dev: (1682.44, 1058.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 316.453 CPU sec, 17.728 real sec
[0000] Calling mem_process_seqs.., task: 1723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517194, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 432, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2210)
[0000][PE] mean and std.dev: (635.48, 496.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1582, 2186, 3077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6067)
[0000][PE] mean and std.dev: (2343.86, 1463.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 316.957 CPU sec, 17.777 real sec
[0000] Calling mem_process_seqs.., task: 1724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516843, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 424, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3236)
[0000][PE] mean and std.dev: (689.18, 711.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1212, 3417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8129)
[0000][PE] mean and std.dev: (1901.87, 1181.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 316.076 CPU sec, 17.741 real sec
[0000] Calling mem_process_seqs.., task: 1725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517211, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 624, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (818.64, 719.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1172, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2971)
[0000][PE] mean and std.dev: (1105.89, 478.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 316.186 CPU sec, 17.716 real sec
[0000] Calling mem_process_seqs.., task: 1726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516853, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 914, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5949)
[0000][PE] mean and std.dev: (1315.42, 1182.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1397, 2806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6356)
[0000][PE] mean and std.dev: (1829.40, 1501.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 318.133 CPU sec, 17.845 real sec
[0000] Calling mem_process_seqs.., task: 1727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516892, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 403, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2408)
[0000][PE] mean and std.dev: (607.56, 611.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.07, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1077, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (1062.93, 519.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 319.188 CPU sec, 17.937 real sec
[0000] Calling mem_process_seqs.., task: 1728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517019, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 518, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (730.60, 633.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1303, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4155)
[0000][PE] mean and std.dev: (1403.84, 644.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 321.119 CPU sec, 18.048 real sec
[0000] Calling mem_process_seqs.., task: 1729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516884, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 406, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (944.79, 1069.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.95, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (789, 1767, 5164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13914)
[0000][PE] mean and std.dev: (2737.27, 2498.12)
[0000][PE] low and high boundaries for proper pairs: (1, 18289)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1235, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1454.65, 761.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 318.695 CPU sec, 17.866 real sec
[0000] Calling mem_process_seqs.., task: 1730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517352, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 529, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (931.00, 838.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1246, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (1605.54, 1088.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 316.401 CPU sec, 17.721 real sec
[0000] Calling mem_process_seqs.., task: 1731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516661, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 684, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6071)
[0000][PE] mean and std.dev: (1165.62, 1102.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1072, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4428)
[0000][PE] mean and std.dev: (1470.33, 1018.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 318.985 CPU sec, 17.887 real sec
[0000] Calling mem_process_seqs.., task: 1732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516717, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 856, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (862.71, 488.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.31, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1242, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (1034.38, 420.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 318.690 CPU sec, 17.859 real sec
[0000] Calling mem_process_seqs.., task: 1733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516877, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1113, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5672)
[0000][PE] mean and std.dev: (1267.88, 1313.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1367, 1858, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4448)
[0000][PE] mean and std.dev: (1813.27, 908.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 324.153 CPU sec, 18.215 real sec
[0000] Calling mem_process_seqs.., task: 1734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516831, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 902, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5813)
[0000][PE] mean and std.dev: (1234.65, 1000.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1322, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (1116.78, 640.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 318.229 CPU sec, 17.835 real sec
[0000] Calling mem_process_seqs.., task: 1735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517356, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 794, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (893.18, 685.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1676, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (1466.50, 699.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 316.699 CPU sec, 17.782 real sec
[0000] Calling mem_process_seqs.., task: 1736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516728, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 791, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (829.88, 568.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1433, 1568, 3426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7412)
[0000][PE] mean and std.dev: (2146.47, 1354.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 321.378 CPU sec, 18.031 real sec
[0000] Calling mem_process_seqs.., task: 1737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517207, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 559, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3147)
[0000][PE] mean and std.dev: (816.17, 663.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.34, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1093, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (1112.55, 673.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 317.260 CPU sec, 17.774 real sec
[0000] Calling mem_process_seqs.., task: 1738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517155, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 594, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2637)
[0000][PE] mean and std.dev: (769.35, 571.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1610, 2501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5973)
[0000][PE] mean and std.dev: (1605.48, 1120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 316.471 CPU sec, 17.778 real sec
[0000] Calling mem_process_seqs.., task: 1739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516929, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 513, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2287)
[0000][PE] mean and std.dev: (613.21, 418.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.69, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1081, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4308)
[0000][PE] mean and std.dev: (1320.44, 706.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 318.916 CPU sec, 17.890 real sec
[0000] Calling mem_process_seqs.., task: 1740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516828, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 632, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (831.47, 764.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 999, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1354.00, 879.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 322.291 CPU sec, 18.065 real sec
[0000] Calling mem_process_seqs.., task: 1741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517326, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 841, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4454)
[0000][PE] mean and std.dev: (1100.55, 1017.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1034, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4063)
[0000][PE] mean and std.dev: (1471.63, 869.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 315.704 CPU sec, 17.737 real sec
[0000] Calling mem_process_seqs.., task: 1742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516880, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 688, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (927.08, 793.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.24, 120.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1281, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (1235.26, 533.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 318.206 CPU sec, 17.824 real sec
[0000] Calling mem_process_seqs.., task: 1743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517024, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 412, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2595)
[0000][PE] mean and std.dev: (564.09, 508.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1110, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5457)
[0000][PE] mean and std.dev: (1479.14, 1343.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 315.893 CPU sec, 17.717 real sec
[0000] Calling mem_process_seqs.., task: 1744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517204, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 440, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (955.69, 995.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1197, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (1091.38, 445.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 319.324 CPU sec, 17.920 real sec
[0000] Calling mem_process_seqs.., task: 1745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517181, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 728, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2568)
[0000][PE] mean and std.dev: (701.00, 375.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1369, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (1429.14, 810.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 318.106 CPU sec, 17.852 real sec
[0000] Calling mem_process_seqs.., task: 1746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516764, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 508, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (848.52, 770.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1473, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (1481.17, 806.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 320.841 CPU sec, 17.974 real sec
[0000] Calling mem_process_seqs.., task: 1747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517105, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 710, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (859.92, 882.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1352, 2951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7331)
[0000][PE] mean and std.dev: (1829.83, 1345.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 318.060 CPU sec, 17.869 real sec
[0000] Calling mem_process_seqs.., task: 1748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517116, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 714, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (954.96, 892.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1068, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (48, 2188)
[0000][PE] mean and std.dev: (1012.12, 391.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 317.027 CPU sec, 17.791 real sec
[0000] Calling mem_process_seqs.., task: 1749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517138, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1239, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1155.09, 1102.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1240, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (1315.60, 863.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 316.946 CPU sec, 17.769 real sec
[0000] Calling mem_process_seqs.., task: 1750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516919, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 525, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2605)
[0000][PE] mean and std.dev: (571.50, 413.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1438, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (1398.25, 534.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 317.923 CPU sec, 17.830 real sec
[0000] Calling mem_process_seqs.., task: 1751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517144, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 454, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (821.67, 795.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (343, 919, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1255.76, 1136.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 319.628 CPU sec, 17.958 real sec
[0000] Calling mem_process_seqs.., task: 1752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517064, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 400, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2319)
[0000][PE] mean and std.dev: (562.71, 485.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1490, 1620, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4826)
[0000][PE] mean and std.dev: (1756.00, 574.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 313.668 CPU sec, 17.618 real sec
[0000] Calling mem_process_seqs.., task: 1753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517004, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 442, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (784.48, 680.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1481, 3203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7519)
[0000][PE] mean and std.dev: (1904.56, 1460.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 318.210 CPU sec, 17.868 real sec
[0000] Calling mem_process_seqs.., task: 1754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516961, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 567, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (866.96, 760.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 1456, 3581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8399)
[0000][PE] mean and std.dev: (2077.47, 1858.88)
[0000][PE] low and high boundaries for proper pairs: (1, 10808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 318.952 CPU sec, 17.903 real sec
[0000] Calling mem_process_seqs.., task: 1755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516925, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 712, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4850)
[0000][PE] mean and std.dev: (1049.56, 1017.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1233, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5351)
[0000][PE] mean and std.dev: (1432.00, 939.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 317.166 CPU sec, 17.788 real sec
[0000] Calling mem_process_seqs.., task: 1756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516432, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1140, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (1366.28, 1174.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1268, 2599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6425)
[0000][PE] mean and std.dev: (1580.95, 1157.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 320.431 CPU sec, 17.978 real sec
[0000] Calling mem_process_seqs.., task: 1757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516980, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 707, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (736.03, 645.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1356, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (1634.80, 1088.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 316.500 CPU sec, 17.758 real sec
[0000] Calling mem_process_seqs.., task: 1758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516765, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 456, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (751.55, 607.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.76, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1321, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5575)
[0000][PE] mean and std.dev: (1634.80, 932.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 317.377 CPU sec, 17.801 real sec
[0000] Calling mem_process_seqs.., task: 1759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516789, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 797, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (818.92, 658.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1427, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5136)
[0000][PE] mean and std.dev: (1629.89, 1160.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 318.521 CPU sec, 17.886 real sec
[0000] Calling mem_process_seqs.., task: 1760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517257, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 675, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (795.65, 702.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1365, 3967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10069)
[0000][PE] mean and std.dev: (2247.16, 2116.04)
[0000][PE] low and high boundaries for proper pairs: (1, 13120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 318.929 CPU sec, 17.880 real sec
[0000] Calling mem_process_seqs.., task: 1761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516666, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 280, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (637.40, 591.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1540, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (1414.68, 521.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 322.183 CPU sec, 18.109 real sec
[0000] Calling mem_process_seqs.., task: 1762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516327, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 744, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3133)
[0000][PE] mean and std.dev: (796.31, 542.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1623, 3002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6888)
[0000][PE] mean and std.dev: (1947.00, 1348.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 317.830 CPU sec, 17.854 real sec
[0000] Calling mem_process_seqs.., task: 1763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517276, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 587, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (700.52, 591.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1431, 3174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7258)
[0000][PE] mean and std.dev: (2270.15, 1968.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 317.608 CPU sec, 17.779 real sec
[0000] Calling mem_process_seqs.., task: 1764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516960, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 848, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3170)
[0000][PE] mean and std.dev: (831.25, 656.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1336, 3413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8449)
[0000][PE] mean and std.dev: (1918.13, 1445.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 315.149 CPU sec, 17.662 real sec
[0000] Calling mem_process_seqs.., task: 1765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516695, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 603, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5986)
[0000][PE] mean and std.dev: (1230.24, 1459.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1584, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (1660.20, 903.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 324.054 CPU sec, 18.176 real sec
[0000] Calling mem_process_seqs.., task: 1766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516372, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 703, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4151)
[0000][PE] mean and std.dev: (906.62, 836.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 1049, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (1090.12, 777.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 318.234 CPU sec, 17.839 real sec
[0000] Calling mem_process_seqs.., task: 1767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517168, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 436, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (757.71, 615.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1256, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5705)
[0000][PE] mean and std.dev: (1729.21, 1263.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 316.347 CPU sec, 17.732 real sec
[0000] Calling mem_process_seqs.., task: 1768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516889, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1038, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (933.80, 813.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1474, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4888)
[0000][PE] mean and std.dev: (1441.45, 789.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 317.929 CPU sec, 17.806 real sec
[0000] Calling mem_process_seqs.., task: 1769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517462, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 871, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (755.27, 506.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1110, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (1219.63, 590.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 315.725 CPU sec, 17.715 real sec
[0000] Calling mem_process_seqs.., task: 1770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517320, 5, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 451, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2611)
[0000][PE] mean and std.dev: (605.86, 517.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.64, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1300, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (1273.06, 564.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 313.382 CPU sec, 17.570 real sec
[0000] Calling mem_process_seqs.., task: 1771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516734, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 817, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (954.67, 803.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1418, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6280)
[0000][PE] mean and std.dev: (1695.65, 1125.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 317.596 CPU sec, 17.834 real sec
[0000] Calling mem_process_seqs.., task: 1772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516954, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 459, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (802.17, 724.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1343, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4910)
[0000][PE] mean and std.dev: (1484.74, 880.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 317.836 CPU sec, 17.833 real sec
[0000] Calling mem_process_seqs.., task: 1773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517057, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 818, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3539)
[0000][PE] mean and std.dev: (750.70, 619.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1369, 1893, 3772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8578)
[0000][PE] mean and std.dev: (2179.50, 1462.35)
[0000][PE] low and high boundaries for proper pairs: (1, 10981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 320.769 CPU sec, 17.974 real sec
[0000] Calling mem_process_seqs.., task: 1774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516642, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 426, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (813.68, 761.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.25, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1386, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (1195.32, 683.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 325.214 CPU sec, 18.277 real sec
[0000] Calling mem_process_seqs.., task: 1775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517572, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 766, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (978.58, 1036.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1203, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5858)
[0000][PE] mean and std.dev: (1413.62, 1117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 317.840 CPU sec, 17.836 real sec
[0000] Calling mem_process_seqs.., task: 1776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517123, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 619, 3073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8297)
[0000][PE] mean and std.dev: (1844.85, 2564.74)
[0000][PE] low and high boundaries for proper pairs: (1, 12104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1573, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4194)
[0000][PE] mean and std.dev: (1399.19, 712.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 320.710 CPU sec, 18.022 real sec
[0000] Calling mem_process_seqs.., task: 1777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517509, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 474, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (602.30, 435.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1053, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (1293.56, 671.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 315.581 CPU sec, 17.755 real sec
[0000] Calling mem_process_seqs.., task: 1778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517036, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 751, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2598)
[0000][PE] mean and std.dev: (847.13, 577.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1213, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (1107.94, 648.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 321.901 CPU sec, 18.101 real sec
[0000] Calling mem_process_seqs.., task: 1779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517171, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 925, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (1143.17, 983.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1407, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (1325.78, 792.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 317.802 CPU sec, 17.865 real sec
[0000] Calling mem_process_seqs.., task: 1780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516505, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 866, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (957.15, 704.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (158, 886, 3217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9335)
[0000][PE] mean and std.dev: (1528.82, 1703.34)
[0000][PE] low and high boundaries for proper pairs: (1, 12394)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1716, 3104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7038)
[0000][PE] mean and std.dev: (2049.35, 1180.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 316.406 CPU sec, 17.798 real sec
[0000] Calling mem_process_seqs.., task: 1781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516820, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 344, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (516.56, 465.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.75, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1804, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6141)
[0000][PE] mean and std.dev: (1893.78, 1006.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 317.334 CPU sec, 17.836 real sec
[0000] Calling mem_process_seqs.., task: 1782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517978, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 649, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2422)
[0000][PE] mean and std.dev: (545.62, 356.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1493, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (1480.08, 946.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 314.250 CPU sec, 17.637 real sec
[0000] Calling mem_process_seqs.., task: 1783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517041, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 775, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (935.57, 827.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1111, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (1124.20, 490.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 318.820 CPU sec, 17.938 real sec
[0000] Calling mem_process_seqs.., task: 1784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516897, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 702, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (912.39, 764.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1379, 2012, 3657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8213)
[0000][PE] mean and std.dev: (2337.07, 1659.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 315.534 CPU sec, 17.722 real sec
[0000] Calling mem_process_seqs.., task: 1785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517271, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 941, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (882.40, 534.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1269, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (1395.40, 919.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 317.008 CPU sec, 17.787 real sec
[0000] Calling mem_process_seqs.., task: 1786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517288, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 517, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (743.29, 642.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.26, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1196, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2979)
[0000][PE] mean and std.dev: (983.20, 412.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 315.395 CPU sec, 17.666 real sec
[0000] Calling mem_process_seqs.., task: 1787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517004, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 613, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (1044.80, 1102.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1462, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (1446.81, 821.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 316.900 CPU sec, 17.802 real sec
[0000] Calling mem_process_seqs.., task: 1788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517064, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 856, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (1006.97, 804.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1105, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (1159.93, 471.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 316.878 CPU sec, 17.749 real sec
[0000] Calling mem_process_seqs.., task: 1789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517034, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 850, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (879.00, 632.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1860, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1809.29, 1057.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 315.842 CPU sec, 17.698 real sec
[0000] Calling mem_process_seqs.., task: 1790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516913, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 998, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5717)
[0000][PE] mean and std.dev: (1465.86, 1401.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.75, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1693, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (1473.00, 695.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 318.132 CPU sec, 17.865 real sec
[0000] Calling mem_process_seqs.., task: 1791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516761, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 327, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (589.95, 579.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (376, 2154, 2865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7843)
[0000][PE] mean and std.dev: (1879.20, 1642.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10332)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1927, 2505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5255)
[0000][PE] mean and std.dev: (1849.60, 973.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 316.228 CPU sec, 17.734 real sec
[0000] Calling mem_process_seqs.., task: 1792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517024, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 527, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5643)
[0000][PE] mean and std.dev: (977.10, 876.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1421, 1899, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (1806.50, 778.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 316.198 CPU sec, 17.718 real sec
[0000] Calling mem_process_seqs.., task: 1793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517200, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 331, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2528)
[0000][PE] mean and std.dev: (527.06, 492.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1245, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (1421.50, 692.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 315.381 CPU sec, 17.726 real sec
[0000] Calling mem_process_seqs.., task: 1794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517233, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 825, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (974.96, 750.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 2077, 5773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14865)
[0000][PE] mean and std.dev: (3355.00, 2743.17)
[0000][PE] low and high boundaries for proper pairs: (1, 19411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 317.446 CPU sec, 17.780 real sec
[0000] Calling mem_process_seqs.., task: 1795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516690, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 289, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (805.88, 1014.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1350, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1469.55, 855.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 314.220 CPU sec, 17.602 real sec
[0000] Calling mem_process_seqs.., task: 1796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517128, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 535, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (800.07, 623.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.20, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1467, 2116, 3830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8556)
[0000][PE] mean and std.dev: (2351.06, 1185.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 313.565 CPU sec, 17.573 real sec
[0000] Calling mem_process_seqs.., task: 1797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516935, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 421, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5916)
[0000][PE] mean and std.dev: (1209.00, 1471.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 915, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (995.50, 876.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 315.384 CPU sec, 17.654 real sec
[0000] Calling mem_process_seqs.., task: 1798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517019, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 813, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5587)
[0000][PE] mean and std.dev: (1285.41, 1105.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1446, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6338)
[0000][PE] mean and std.dev: (1693.89, 1224.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 319.559 CPU sec, 17.919 real sec
[0000] Calling mem_process_seqs.., task: 1799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516868, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 511, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (729.29, 535.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 1084, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (1239.77, 767.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 318.739 CPU sec, 17.989 real sec
[0000] Calling mem_process_seqs.., task: 1800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517222, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 540, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (772.33, 611.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.26, 121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1404, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (1559.92, 789.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 314.733 CPU sec, 17.634 real sec
[0000] Calling mem_process_seqs.., task: 1801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516609, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 707, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (838.94, 709.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.65, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1893, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5754)
[0000][PE] mean and std.dev: (1848.46, 860.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 318.383 CPU sec, 17.867 real sec
[0000] Calling mem_process_seqs.., task: 1802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516712, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 692, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (760.19, 554.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.23, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1336, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (1389.71, 880.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 314.839 CPU sec, 17.637 real sec
[0000] Calling mem_process_seqs.., task: 1803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 517214, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1123, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (1280.92, 1262.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1505, 1788, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5249)
[0000][PE] mean and std.dev: (1973.78, 1073.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 315.501 CPU sec, 17.699 real sec
[0000] Calling mem_process_seqs.., task: 1804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517273, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 455, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5183)
[0000][PE] mean and std.dev: (985.95, 1149.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1182, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (1364.70, 827.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 322.504 CPU sec, 18.061 real sec
[0000] Calling mem_process_seqs.., task: 1805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516994, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 475, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2178)
[0000][PE] mean and std.dev: (527.45, 444.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1308, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (1443.55, 957.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 317.245 CPU sec, 17.783 real sec
[0000] Calling mem_process_seqs.., task: 1806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517532, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 717, 3158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9102)
[0000][PE] mean and std.dev: (1722.76, 2067.89)
[0000][PE] low and high boundaries for proper pairs: (1, 12074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1541, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (1459.92, 704.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 314.089 CPU sec, 17.583 real sec
[0000] Calling mem_process_seqs.., task: 1807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517209, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 669, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (958.63, 753.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1308, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (1394.00, 790.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 312.243 CPU sec, 17.509 real sec
[0000] Calling mem_process_seqs.., task: 1808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516854, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 935, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (850.50, 720.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1463, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5483)
[0000][PE] mean and std.dev: (1708.65, 925.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 313.234 CPU sec, 17.526 real sec
[0000] Calling mem_process_seqs.., task: 1809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516770, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 471, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (720.37, 572.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1293, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1311.73, 727.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 324.815 CPU sec, 18.263 real sec
[0000] Calling mem_process_seqs.., task: 1810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516874, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 885, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2744)
[0000][PE] mean and std.dev: (756.41, 529.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.27, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1415, 1666, 2879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5807)
[0000][PE] mean and std.dev: (1988.60, 1039.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 314.540 CPU sec, 17.645 real sec
[0000] Calling mem_process_seqs.., task: 1811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516715, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 556, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1099.27, 998.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1851, 2994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6776)
[0000][PE] mean and std.dev: (1797.25, 911.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 316.446 CPU sec, 17.729 real sec
[0000] Calling mem_process_seqs.., task: 1812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517080, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 875, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (899.95, 674.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (559, 1415, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3982)
[0000][PE] mean and std.dev: (1141.83, 561.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 315.611 CPU sec, 17.693 real sec
[0000] Calling mem_process_seqs.., task: 1813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516956, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 528, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1031.92, 1033.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 950, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (893.85, 473.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 316.802 CPU sec, 17.788 real sec
[0000] Calling mem_process_seqs.., task: 1814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517032, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 438, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (827.94, 732.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1242, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (1260.25, 548.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 316.645 CPU sec, 17.792 real sec
[0000] Calling mem_process_seqs.., task: 1815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517027, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 815, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (988.95, 901.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 120.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1316, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7002)
[0000][PE] mean and std.dev: (1666.06, 1160.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 313.469 CPU sec, 17.560 real sec
[0000] Calling mem_process_seqs.., task: 1816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517278, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 752, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3525)
[0000][PE] mean and std.dev: (769.41, 546.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1455, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (73, 2843)
[0000][PE] mean and std.dev: (1401.42, 499.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 317.537 CPU sec, 17.804 real sec
[0000] Calling mem_process_seqs.., task: 1817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516988, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 760, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (730.89, 582.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.65, 120.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1253, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4591)
[0000][PE] mean and std.dev: (1455.28, 883.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 316.982 CPU sec, 17.829 real sec
[0000] Calling mem_process_seqs.., task: 1818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516874, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 570, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (969.70, 1004.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (378, 1012, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (905.38, 512.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 315.446 CPU sec, 17.656 real sec
[0000] Calling mem_process_seqs.., task: 1819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516674, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 387, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5958)
[0000][PE] mean and std.dev: (1033.24, 1325.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1176, 2953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6629)
[0000][PE] mean and std.dev: (1560.39, 1171.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 313.185 CPU sec, 17.528 real sec
[0000] Calling mem_process_seqs.., task: 1820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517117, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 351, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (905.30, 912.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1307, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (1175.80, 435.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 314.103 CPU sec, 17.640 real sec
[0000] Calling mem_process_seqs.., task: 1821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517041, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (635, 1129, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5369)
[0000][PE] mean and std.dev: (1260.25, 866.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.91, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1398, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6095)
[0000][PE] mean and std.dev: (1892.65, 1578.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 317.043 CPU sec, 17.782 real sec
[0000] Calling mem_process_seqs.., task: 1822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517322, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 509, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (895.39, 759.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1307, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6302)
[0000][PE] mean and std.dev: (1604.00, 1320.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 314.469 CPU sec, 17.644 real sec
[0000] Calling mem_process_seqs.., task: 1823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517152, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 666, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (743.85, 634.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1489, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1579.24, 949.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 317.526 CPU sec, 17.785 real sec
[0000] Calling mem_process_seqs.., task: 1824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517129, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 712, 2943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8063)
[0000][PE] mean and std.dev: (1527.38, 1562.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1374, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5937)
[0000][PE] mean and std.dev: (1600.06, 1099.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 314.041 CPU sec, 17.571 real sec
[0000] Calling mem_process_seqs.., task: 1825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516920, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 560, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5226)
[0000][PE] mean and std.dev: (999.96, 1036.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1320, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (1273.57, 412.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 317.663 CPU sec, 17.827 real sec
[0000] Calling mem_process_seqs.., task: 1826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516840, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 390, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2654)
[0000][PE] mean and std.dev: (584.57, 507.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1521, 3067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7097)
[0000][PE] mean and std.dev: (1958.25, 1433.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 317.088 CPU sec, 17.745 real sec
[0000] Calling mem_process_seqs.., task: 1827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517032, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 406, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (759.55, 792.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.73, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1044, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (1164.05, 629.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 313.580 CPU sec, 17.559 real sec
[0000] Calling mem_process_seqs.., task: 1828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516878, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 889, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (1065.74, 805.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1721, 2639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5547)
[0000][PE] mean and std.dev: (1510.67, 847.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 318.579 CPU sec, 17.923 real sec
[0000] Calling mem_process_seqs.., task: 1829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517436, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 701, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (955.24, 815.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1367, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1390.00, 775.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 318.202 CPU sec, 17.854 real sec
[0000] Calling mem_process_seqs.., task: 1830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517018, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 378, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (976.24, 1054.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (452, 1376, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (1202.79, 616.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 315.363 CPU sec, 17.675 real sec
[0000] Calling mem_process_seqs.., task: 1831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517115, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 628, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (634.67, 491.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (556, 1209, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4234)
[0000][PE] mean and std.dev: (1196.00, 851.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 314.619 CPU sec, 17.608 real sec
[0000] Calling mem_process_seqs.., task: 1832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516736, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 803, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (958.33, 907.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1346, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4892)
[0000][PE] mean and std.dev: (1484.43, 1037.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 325.352 CPU sec, 18.248 real sec
[0000] Calling mem_process_seqs.., task: 1833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516796, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 415, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1014.05, 1157.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1285, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (45, 2495)
[0000][PE] mean and std.dev: (1149.85, 376.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 316.709 CPU sec, 17.767 real sec
[0000] Calling mem_process_seqs.., task: 1834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516849, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 386, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2266)
[0000][PE] mean and std.dev: (607.44, 568.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1252, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3257)
[0000][PE] mean and std.dev: (1449.63, 560.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 316.530 CPU sec, 17.728 real sec
[0000] Calling mem_process_seqs.., task: 1835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517150, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 955, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1121.35, 940.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1311, 1897, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5742)
[0000][PE] mean and std.dev: (2052.00, 1100.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 314.967 CPU sec, 17.643 real sec
[0000] Calling mem_process_seqs.., task: 1836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517322, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 791, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1057.36, 907.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1369, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (1514.06, 931.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 312.519 CPU sec, 17.524 real sec
[0000] Calling mem_process_seqs.., task: 1837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517410, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (649, 1476, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1620.21, 1222.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1320, 1755, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5808)
[0000][PE] mean and std.dev: (2104.86, 1179.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 314.316 CPU sec, 17.596 real sec
[0000] Calling mem_process_seqs.., task: 1838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516935, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 514, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (876.17, 841.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1392, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1313.37, 728.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 317.099 CPU sec, 17.799 real sec
[0000] Calling mem_process_seqs.., task: 1839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516835, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 515, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3998)
[0000][PE] mean and std.dev: (822.26, 751.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1229, 3245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7999)
[0000][PE] mean and std.dev: (1867.23, 1315.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 318.574 CPU sec, 17.833 real sec
[0000] Calling mem_process_seqs.., task: 1840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517279, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 518, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4706)
[0000][PE] mean and std.dev: (892.24, 886.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1540, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1463.71, 918.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 315.843 CPU sec, 17.690 real sec
[0000] Calling mem_process_seqs.., task: 1841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516682, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 916, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5094)
[0000][PE] mean and std.dev: (1099.23, 1150.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1103, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (1258.78, 694.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 316.195 CPU sec, 17.706 real sec
[0000] Calling mem_process_seqs.., task: 1842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516750, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 426, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (748.28, 764.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1423, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (1511.30, 1024.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 320.863 CPU sec, 17.988 real sec
[0000] Calling mem_process_seqs.., task: 1843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516957, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 831, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5058)
[0000][PE] mean and std.dev: (1145.66, 1195.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1065, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5317)
[0000][PE] mean and std.dev: (1343.88, 857.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 315.498 CPU sec, 17.662 real sec
[0000] Calling mem_process_seqs.., task: 1844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517073, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 558, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7955)
[0000][PE] mean and std.dev: (1151.36, 1165.24)
[0000][PE] low and high boundaries for proper pairs: (1, 10499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.91, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 878, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (1226.21, 815.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 323.883 CPU sec, 18.238 real sec
[0000] Calling mem_process_seqs.., task: 1845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516956, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 716, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (875.32, 753.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1494, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6103)
[0000][PE] mean and std.dev: (1626.83, 1011.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 317.120 CPU sec, 17.760 real sec
[0000] Calling mem_process_seqs.., task: 1846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516972, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 1384, 2919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7981)
[0000][PE] mean and std.dev: (1641.90, 1341.83)
[0000][PE] low and high boundaries for proper pairs: (1, 10512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1139, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (8, 2478)
[0000][PE] mean and std.dev: (1115.31, 397.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 316.369 CPU sec, 17.753 real sec
[0000] Calling mem_process_seqs.., task: 1847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517040, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 516, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5899)
[0000][PE] mean and std.dev: (1155.41, 1164.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 1233, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (1040.07, 677.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 320.321 CPU sec, 17.935 real sec
[0000] Calling mem_process_seqs.., task: 1848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516790, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 410, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (613.22, 520.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (567, 1708, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5427)
[0000][PE] mean and std.dev: (1611.72, 1164.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 316.180 CPU sec, 17.735 real sec
[0000] Calling mem_process_seqs.., task: 1849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517111, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 346, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2070)
[0000][PE] mean and std.dev: (522.77, 437.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.08, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1319, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (1298.22, 538.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 317.083 CPU sec, 17.812 real sec
[0000] Calling mem_process_seqs.., task: 1850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516876, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 468, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (880.24, 865.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1494, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (1360.06, 594.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 321.055 CPU sec, 18.025 real sec
[0000] Calling mem_process_seqs.., task: 1851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516730, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 878, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6810)
[0000][PE] mean and std.dev: (1440.68, 1397.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 1208, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (1161.23, 504.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 316.737 CPU sec, 17.751 real sec
[0000] Calling mem_process_seqs.., task: 1852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517224, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 520, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1127.00, 1280.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1204, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3643)
[0000][PE] mean and std.dev: (1191.65, 687.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 321.224 CPU sec, 18.012 real sec
[0000] Calling mem_process_seqs.., task: 1853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516643, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 648, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (800.17, 696.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.93, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 1391, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (1281.16, 925.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 323.047 CPU sec, 18.124 real sec
[0000] Calling mem_process_seqs.., task: 1854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517621, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 408, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2445)
[0000][PE] mean and std.dev: (591.60, 514.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1367, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 2893)
[0000][PE] mean and std.dev: (1325.75, 222.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 313.016 CPU sec, 17.530 real sec
[0000] Calling mem_process_seqs.., task: 1855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517140, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 793, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (982.46, 885.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1519, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5488)
[0000][PE] mean and std.dev: (1760.79, 1235.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 313.358 CPU sec, 17.603 real sec
[0000] Calling mem_process_seqs.., task: 1856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516817, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 621, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3599)
[0000][PE] mean and std.dev: (907.76, 833.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1554, 3189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7629)
[0000][PE] mean and std.dev: (2299.62, 2064.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 318.831 CPU sec, 17.903 real sec
[0000] Calling mem_process_seqs.., task: 1857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516759, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 471, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (722.27, 653.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1293, 1491, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (1605.53, 590.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 314.498 CPU sec, 17.646 real sec
[0000] Calling mem_process_seqs.., task: 1858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516630, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 443, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (825.00, 801.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1274, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (1362.19, 813.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 314.317 CPU sec, 17.625 real sec
[0000] Calling mem_process_seqs.., task: 1859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516904, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 923, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5912)
[0000][PE] mean and std.dev: (1225.88, 1199.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.96, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1582, 1882, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5764)
[0000][PE] mean and std.dev: (2150.09, 931.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 315.725 CPU sec, 17.716 real sec
[0000] Calling mem_process_seqs.., task: 1860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516849, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 751, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1178.69, 1201.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1327, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1264.20, 838.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 312.669 CPU sec, 17.559 real sec
[0000] Calling mem_process_seqs.., task: 1861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516880, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1056, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (791.08, 499.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1195, 3474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8744)
[0000][PE] mean and std.dev: (1928.88, 1531.28)
[0000][PE] low and high boundaries for proper pairs: (1, 11379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 313.816 CPU sec, 17.579 real sec
[0000] Calling mem_process_seqs.., task: 1862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517115, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 509, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (639.05, 538.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1387, 1823, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4819)
[0000][PE] mean and std.dev: (1713.60, 691.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 311.430 CPU sec, 17.483 real sec
[0000] Calling mem_process_seqs.., task: 1863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517033, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 706, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (1101.96, 1073.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1561, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (1473.24, 570.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 311.694 CPU sec, 17.491 real sec
[0000] Calling mem_process_seqs.., task: 1864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516997, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 1152, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1208.89, 1087.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1508, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5142)
[0000][PE] mean and std.dev: (1460.57, 848.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 311.325 CPU sec, 17.442 real sec
[0000] Calling mem_process_seqs.., task: 1865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517159, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 592, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (806.56, 862.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.26, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1175, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (1318.29, 805.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 315.523 CPU sec, 17.701 real sec
[0000] Calling mem_process_seqs.., task: 1866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517185, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 592, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (831.56, 677.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1802, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4575)
[0000][PE] mean and std.dev: (1674.73, 834.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 317.034 CPU sec, 17.822 real sec
[0000] Calling mem_process_seqs.., task: 1867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516953, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 570, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2510)
[0000][PE] mean and std.dev: (598.20, 474.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.01, 120.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1507, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (1472.76, 748.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 320.953 CPU sec, 18.000 real sec
[0000] Calling mem_process_seqs.., task: 1868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516856, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 510, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5141)
[0000][PE] mean and std.dev: (1040.61, 1048.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.17, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (267, 4191, 5044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14598)
[0000][PE] mean and std.dev: (3239.70, 2130.39)
[0000][PE] low and high boundaries for proper pairs: (1, 19375)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1289, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (1133.41, 430.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 317.130 CPU sec, 17.872 real sec
[0000] Calling mem_process_seqs.., task: 1869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516970, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 420, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4170)
[0000][PE] mean and std.dev: (922.00, 940.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1381, 3486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8324)
[0000][PE] mean and std.dev: (1924.20, 1270.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 315.109 CPU sec, 17.686 real sec
[0000] Calling mem_process_seqs.., task: 1870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517314, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 910, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3993)
[0000][PE] mean and std.dev: (1000.76, 823.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.29, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1900, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1649.20, 808.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 313.409 CPU sec, 17.579 real sec
[0000] Calling mem_process_seqs.., task: 1871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517042, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 830, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1038.30, 937.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1296, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1585.56, 971.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 315.066 CPU sec, 17.712 real sec
[0000] Calling mem_process_seqs.., task: 1872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517178, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 357, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (737.44, 676.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1498, 2620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6048)
[0000][PE] mean and std.dev: (1848.80, 1363.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 311.391 CPU sec, 17.461 real sec
[0000] Calling mem_process_seqs.., task: 1873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516712, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 862, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1211.48, 1001.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1191, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (1385.62, 899.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 315.226 CPU sec, 17.692 real sec
[0000] Calling mem_process_seqs.., task: 1874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516685, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 818, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5920)
[0000][PE] mean and std.dev: (1256.88, 1346.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1673, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (1871.60, 778.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 314.629 CPU sec, 17.656 real sec
[0000] Calling mem_process_seqs.., task: 1875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517398, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1114, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (929.60, 680.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1240, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (1480.81, 967.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 313.673 CPU sec, 17.600 real sec
[0000] Calling mem_process_seqs.., task: 1876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517038, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 301, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (621.44, 748.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1660, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5125)
[0000][PE] mean and std.dev: (1674.62, 930.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 312.377 CPU sec, 17.546 real sec
[0000] Calling mem_process_seqs.., task: 1877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516991, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 548, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (971.60, 991.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1351, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4637)
[0000][PE] mean and std.dev: (1387.83, 718.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 313.366 CPU sec, 17.603 real sec
[0000] Calling mem_process_seqs.., task: 1878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516802, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 649, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4372)
[0000][PE] mean and std.dev: (1031.42, 930.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (539, 1201, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (1075.77, 578.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 309.512 CPU sec, 17.326 real sec
[0000] Calling mem_process_seqs.., task: 1879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517020, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 551, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (916.47, 852.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1602, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (1479.40, 596.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 316.255 CPU sec, 17.714 real sec
[0000] Calling mem_process_seqs.., task: 1880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517191, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 703, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4342)
[0000][PE] mean and std.dev: (906.32, 803.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (534, 846, 4771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13245)
[0000][PE] mean and std.dev: (2350.40, 2391.84)
[0000][PE] low and high boundaries for proper pairs: (1, 17482)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (668, 1679, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5297)
[0000][PE] mean and std.dev: (1523.69, 996.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 322.639 CPU sec, 18.103 real sec
[0000] Calling mem_process_seqs.., task: 1881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517037, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 426, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3022)
[0000][PE] mean and std.dev: (728.41, 660.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (649, 5588, 6291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17575)
[0000][PE] mean and std.dev: (4302.60, 3261.97)
[0000][PE] low and high boundaries for proper pairs: (1, 23217)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1680, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4461)
[0000][PE] mean and std.dev: (1632.47, 780.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 314.904 CPU sec, 17.691 real sec
[0000] Calling mem_process_seqs.., task: 1882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516782, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 361, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2554)
[0000][PE] mean and std.dev: (742.58, 771.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1461, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (1567.00, 856.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 314.320 CPU sec, 17.633 real sec
[0000] Calling mem_process_seqs.., task: 1883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517036, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 775, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (904.38, 755.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1359, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6341)
[0000][PE] mean and std.dev: (1815.29, 1368.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 312.433 CPU sec, 17.523 real sec
[0000] Calling mem_process_seqs.., task: 1884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516532, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 987, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (830.92, 555.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.77, 120.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1123, 3382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8306)
[0000][PE] mean and std.dev: (1941.20, 1726.98)
[0000][PE] low and high boundaries for proper pairs: (1, 10768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 315.102 CPU sec, 17.720 real sec
[0000] Calling mem_process_seqs.., task: 1885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517198, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 496, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (663.80, 525.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1081, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2972)
[0000][PE] mean and std.dev: (1126.07, 514.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 312.887 CPU sec, 17.558 real sec
[0000] Calling mem_process_seqs.., task: 1886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516510, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 548, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5250)
[0000][PE] mean and std.dev: (1040.52, 1078.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1589, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7072)
[0000][PE] mean and std.dev: (2189.58, 1860.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 313.674 CPU sec, 17.602 real sec
[0000] Calling mem_process_seqs.., task: 1887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516999, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 864, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (744.60, 576.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1228, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (1653.07, 1013.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 313.759 CPU sec, 17.569 real sec
[0000] Calling mem_process_seqs.., task: 1888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516939, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 1020, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (863.10, 550.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1159, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (1086.76, 566.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 315.924 CPU sec, 17.732 real sec
[0000] Calling mem_process_seqs.., task: 1889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517047, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (541, 1322, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7039)
[0000][PE] mean and std.dev: (1624.47, 1697.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.00, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1863, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1467.90, 750.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 312.959 CPU sec, 17.609 real sec
[0000] Calling mem_process_seqs.., task: 1890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516959, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 638, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6344)
[0000][PE] mean and std.dev: (1211.29, 1184.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1532, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (1517.50, 742.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 317.617 CPU sec, 17.815 real sec
[0000] Calling mem_process_seqs.., task: 1891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517061, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 782, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (936.00, 792.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (167, 1245, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4505)
[0000][PE] mean and std.dev: (992.33, 949.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5951)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 318.558 CPU sec, 17.905 real sec
[0000] Calling mem_process_seqs.., task: 1892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516866, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 512, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7454)
[0000][PE] mean and std.dev: (1381.40, 1484.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1581, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5337)
[0000][PE] mean and std.dev: (1951.53, 1201.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 314.869 CPU sec, 17.657 real sec
[0000] Calling mem_process_seqs.., task: 1893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516883, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 601, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (814.46, 660.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1395, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (1245.27, 581.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 323.588 CPU sec, 18.160 real sec
[0000] Calling mem_process_seqs.., task: 1894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517250, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 775, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (1006.33, 815.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1252, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (1344.52, 572.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 312.131 CPU sec, 17.526 real sec
[0000] Calling mem_process_seqs.., task: 1895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517061, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 421, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (732.36, 612.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 967, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (1197.88, 752.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 322.617 CPU sec, 18.075 real sec
[0000] Calling mem_process_seqs.., task: 1896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516882, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 780, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (846.52, 707.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1462, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3222)
[0000][PE] mean and std.dev: (1302.00, 513.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 314.538 CPU sec, 17.652 real sec
[0000] Calling mem_process_seqs.., task: 1897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516722, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 540, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (768.53, 673.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1321, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2799)
[0000][PE] mean and std.dev: (1362.71, 481.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 317.336 CPU sec, 17.859 real sec
[0000] Calling mem_process_seqs.., task: 1898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516965, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 1106, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5039)
[0000][PE] mean and std.dev: (1169.75, 883.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1570, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (1517.47, 666.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 320.620 CPU sec, 18.013 real sec
[0000] Calling mem_process_seqs.., task: 1899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517164, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 415, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (819.38, 812.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1031, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (844.38, 362.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 323.161 CPU sec, 18.109 real sec
[0000] Calling mem_process_seqs.., task: 1900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516952, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 325, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2158)
[0000][PE] mean and std.dev: (448.00, 346.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1265, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6745)
[0000][PE] mean and std.dev: (1838.59, 1323.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 316.564 CPU sec, 17.754 real sec
[0000] Calling mem_process_seqs.., task: 1901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517138, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 433, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (878.33, 874.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1419, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5328)
[0000][PE] mean and std.dev: (1500.85, 917.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 319.057 CPU sec, 17.943 real sec
[0000] Calling mem_process_seqs.., task: 1902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517005, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 493, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4857)
[0000][PE] mean and std.dev: (807.94, 921.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.05, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1324, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (1379.00, 556.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 323.283 CPU sec, 18.123 real sec
[0000] Calling mem_process_seqs.., task: 1903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516318, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 996, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5029)
[0000][PE] mean and std.dev: (1297.54, 1143.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.40, 121.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (545, 1185, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (1322.82, 1058.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 324.158 CPU sec, 18.187 real sec
[0000] Calling mem_process_seqs.., task: 1904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517043, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 393, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (933.96, 844.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1266, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (1188.00, 606.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 312.092 CPU sec, 17.495 real sec
[0000] Calling mem_process_seqs.., task: 1905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516853, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 590, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4378)
[0000][PE] mean and std.dev: (1050.44, 1069.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1411, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4200)
[0000][PE] mean and std.dev: (1609.22, 858.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 320.145 CPU sec, 17.956 real sec
[0000] Calling mem_process_seqs.., task: 1906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516827, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 786, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4995)
[0000][PE] mean and std.dev: (1112.19, 1017.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 945, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (1085.67, 538.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 318.583 CPU sec, 17.912 real sec
[0000] Calling mem_process_seqs.., task: 1907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517127, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 891, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (773.89, 376.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.82, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1087, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5346)
[0000][PE] mean and std.dev: (1263.67, 795.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 318.626 CPU sec, 17.877 real sec
[0000] Calling mem_process_seqs.., task: 1908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516995, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 614, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (689.52, 581.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1179, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6153)
[0000][PE] mean and std.dev: (1400.67, 1126.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 320.926 CPU sec, 18.013 real sec
[0000] Calling mem_process_seqs.., task: 1909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517136, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 495, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2493)
[0000][PE] mean and std.dev: (647.73, 534.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (519, 1129, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (1177.74, 794.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 318.842 CPU sec, 17.842 real sec
[0000] Calling mem_process_seqs.., task: 1910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517360, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 555, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (809.95, 653.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1398, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (1530.05, 830.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 317.478 CPU sec, 17.795 real sec
[0000] Calling mem_process_seqs.., task: 1911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517255, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 437, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (800.50, 725.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1232, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (1500.88, 988.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 322.062 CPU sec, 18.048 real sec
[0000] Calling mem_process_seqs.., task: 1912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517020, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1054, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5023)
[0000][PE] mean and std.dev: (1297.22, 1203.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1101, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4598)
[0000][PE] mean and std.dev: (1195.40, 652.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 318.223 CPU sec, 17.864 real sec
[0000] Calling mem_process_seqs.., task: 1913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516956, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1433, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5106)
[0000][PE] mean and std.dev: (1426.54, 1062.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.16, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 315.679 CPU sec, 17.711 real sec
[0000] Calling mem_process_seqs.., task: 1914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517172, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 679, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (710.70, 544.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (480, 1448, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5985)
[0000][PE] mean and std.dev: (1544.62, 1078.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 318.502 CPU sec, 17.916 real sec
[0000] Calling mem_process_seqs.., task: 1915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516731, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 477, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (861.41, 796.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 2105, 2717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6553)
[0000][PE] mean and std.dev: (1950.12, 1284.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 319.267 CPU sec, 17.898 real sec
[0000] Calling mem_process_seqs.., task: 1916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517048, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 624, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (849.79, 710.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1446, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (1382.75, 671.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 318.740 CPU sec, 17.899 real sec
[0000] Calling mem_process_seqs.., task: 1917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517220, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 460, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4759)
[0000][PE] mean and std.dev: (1023.27, 1036.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.06, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1430, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4682)
[0000][PE] mean and std.dev: (1404.00, 962.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 317.485 CPU sec, 17.827 real sec
[0000] Calling mem_process_seqs.., task: 1918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517472, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 534, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (665.95, 584.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1868, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6059)
[0000][PE] mean and std.dev: (2043.64, 1406.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 317.375 CPU sec, 17.814 real sec
[0000] Calling mem_process_seqs.., task: 1919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517102, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 604, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (690.29, 455.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.26, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1581, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (1330.23, 664.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 317.067 CPU sec, 17.856 real sec
[0000] Calling mem_process_seqs.., task: 1920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516553, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 570, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2017)
[0000][PE] mean and std.dev: (638.44, 513.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.28, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1294, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5904)
[0000][PE] mean and std.dev: (1450.50, 848.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 318.371 CPU sec, 17.887 real sec
[0000] Calling mem_process_seqs.., task: 1921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517180, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1211, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4866)
[0000][PE] mean and std.dev: (1293.45, 974.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (561, 1417, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5271)
[0000][PE] mean and std.dev: (1292.67, 868.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 317.199 CPU sec, 17.808 real sec
[0000] Calling mem_process_seqs.., task: 1922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517161, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 470, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4834)
[0000][PE] mean and std.dev: (1185.68, 1229.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1315, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1381.59, 963.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 316.319 CPU sec, 17.784 real sec
[0000] Calling mem_process_seqs.., task: 1923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517012, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 691, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (776.05, 690.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1622, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4487)
[0000][PE] mean and std.dev: (1584.71, 934.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 318.118 CPU sec, 17.853 real sec
[0000] Calling mem_process_seqs.., task: 1924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517157, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 896, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (1028.32, 816.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 120.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1709, 2062, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (83, 4148)
[0000][PE] mean and std.dev: (1959.08, 723.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 320.418 CPU sec, 17.988 real sec
[0000] Calling mem_process_seqs.., task: 1925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517416, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 830, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (918.54, 817.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 2246, 3397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7799)
[0000][PE] mean and std.dev: (2345.52, 1491.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 318.923 CPU sec, 17.894 real sec
[0000] Calling mem_process_seqs.., task: 1926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516852, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 575, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (798.27, 721.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1185, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (1163.73, 578.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 319.265 CPU sec, 17.902 real sec
[0000] Calling mem_process_seqs.., task: 1927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516855, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 376, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2365)
[0000][PE] mean and std.dev: (465.05, 366.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1366, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3466)
[0000][PE] mean and std.dev: (1304.64, 670.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 318.111 CPU sec, 17.837 real sec
[0000] Calling mem_process_seqs.., task: 1928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517298, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 398, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2953)
[0000][PE] mean and std.dev: (766.42, 711.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1218, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3594)
[0000][PE] mean and std.dev: (1397.06, 627.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 316.405 CPU sec, 17.721 real sec
[0000] Calling mem_process_seqs.., task: 1929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517076, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1026, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (992.36, 716.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.01, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 686, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (930.38, 818.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 316.212 CPU sec, 17.743 real sec
[0000] Calling mem_process_seqs.., task: 1930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516876, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 936, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (880.87, 601.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.22, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (456, 1071, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5238)
[0000][PE] mean and std.dev: (1190.00, 711.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 316.625 CPU sec, 17.731 real sec
[0000] Calling mem_process_seqs.., task: 1931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517304, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 894, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (886.35, 661.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 900)
[0000][PE] mean and std.dev: (514.84, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1340, 3958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10162)
[0000][PE] mean and std.dev: (2452.72, 2272.98)
[0000][PE] low and high boundaries for proper pairs: (1, 13264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 318.673 CPU sec, 17.858 real sec
[0000] Calling mem_process_seqs.., task: 1932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516862, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 726, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (780.73, 601.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1326, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5342)
[0000][PE] mean and std.dev: (1601.70, 1343.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 318.284 CPU sec, 17.849 real sec
[0000] Calling mem_process_seqs.., task: 1933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517103, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 431, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5365)
[0000][PE] mean and std.dev: (1046.86, 1138.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1283, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (1359.91, 764.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 315.454 CPU sec, 17.660 real sec
[0000] Calling mem_process_seqs.., task: 1934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516712, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 765, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (876.08, 642.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.85, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 1517, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (1466.93, 401.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 318.999 CPU sec, 17.907 real sec
[0000] Calling mem_process_seqs.., task: 1935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517085, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 993, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (859.80, 524.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1312, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (1379.76, 665.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 319.407 CPU sec, 17.903 real sec
[0000] Calling mem_process_seqs.., task: 1936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516772, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 772, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (889.38, 708.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1477, 5299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14003)
[0000][PE] mean and std.dev: (2623.56, 2236.33)
[0000][PE] low and high boundaries for proper pairs: (1, 18355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 318.454 CPU sec, 17.831 real sec
[0000] Calling mem_process_seqs.., task: 1937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517192, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 707, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (778.84, 762.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (762, 2906, 7312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20412)
[0000][PE] mean and std.dev: (3355.83, 2955.48)
[0000][PE] low and high boundaries for proper pairs: (1, 26962)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 316.868 CPU sec, 17.774 real sec
[0000] Calling mem_process_seqs.., task: 1938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517289, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 1058, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (918.92, 645.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.20, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1290, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (1268.80, 380.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 317.991 CPU sec, 17.831 real sec
[0000] Calling mem_process_seqs.., task: 1939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515858, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 543, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (1085.09, 1038.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1692, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1490.94, 697.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 321.042 CPU sec, 17.993 real sec
[0000] Calling mem_process_seqs.., task: 1940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516828, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 447, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2175)
[0000][PE] mean and std.dev: (614.36, 522.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1439, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5013)
[0000][PE] mean and std.dev: (1788.14, 1208.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 319.682 CPU sec, 17.905 real sec
[0000] Calling mem_process_seqs.., task: 1941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516994, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 566, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2951)
[0000][PE] mean and std.dev: (629.88, 582.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.15, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1382, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (1427.47, 704.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 317.839 CPU sec, 17.816 real sec
[0000] Calling mem_process_seqs.., task: 1942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517111, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 665, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5370)
[0000][PE] mean and std.dev: (1142.04, 1088.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.96, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1540, 2530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5556)
[0000][PE] mean and std.dev: (1728.62, 1155.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 317.732 CPU sec, 17.815 real sec
[0000] Calling mem_process_seqs.., task: 1943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516875, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 659, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2936)
[0000][PE] mean and std.dev: (763.38, 626.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1311, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (1533.94, 1186.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 316.982 CPU sec, 17.780 real sec
[0000] Calling mem_process_seqs.., task: 1944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516850, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 1040, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (1036.00, 801.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.86, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1243, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4535)
[0000][PE] mean and std.dev: (1204.47, 696.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 319.169 CPU sec, 17.863 real sec
[0000] Calling mem_process_seqs.., task: 1945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516859, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (490, 1448, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1317.38, 1028.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1709, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1399.92, 624.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 317.271 CPU sec, 17.802 real sec
[0000] Calling mem_process_seqs.., task: 1946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517483, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 672, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (678.89, 501.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.41, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1386, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4661)
[0000][PE] mean and std.dev: (1655.00, 708.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 316.666 CPU sec, 17.734 real sec
[0000] Calling mem_process_seqs.., task: 1947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516507, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 983, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5363)
[0000][PE] mean and std.dev: (1171.67, 1009.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.77, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1383, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (1246.20, 562.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 316.563 CPU sec, 17.757 real sec
[0000] Calling mem_process_seqs.., task: 1948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517085, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 602, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1947)
[0000][PE] mean and std.dev: (517.93, 333.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1314, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (1207.62, 671.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 318.665 CPU sec, 17.865 real sec
[0000] Calling mem_process_seqs.., task: 1949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516779, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (787, 1162, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (1279.90, 854.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.55, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 937, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5387)
[0000][PE] mean and std.dev: (1663.53, 1414.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 318.051 CPU sec, 17.812 real sec
[0000] Calling mem_process_seqs.., task: 1950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517239, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 956, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3669)
[0000][PE] mean and std.dev: (1033.28, 745.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1726, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4425)
[0000][PE] mean and std.dev: (1625.00, 586.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 319.688 CPU sec, 17.946 real sec
[0000] Calling mem_process_seqs.., task: 1951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517124, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 1209, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (1206.89, 1018.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (595, 1372, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6739)
[0000][PE] mean and std.dev: (1857.00, 1552.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 317.323 CPU sec, 17.793 real sec
[0000] Calling mem_process_seqs.., task: 1952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517269, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 667, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (966.87, 875.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1381, 3069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7249)
[0000][PE] mean and std.dev: (1678.53, 1036.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 318.270 CPU sec, 17.872 real sec
[0000] Calling mem_process_seqs.., task: 1953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517018, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 497, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (647.17, 585.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.99, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1507, 2589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5597)
[0000][PE] mean and std.dev: (1751.62, 1047.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7101)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 316.954 CPU sec, 17.746 real sec
[0000] Calling mem_process_seqs.., task: 1954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516813, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 624, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (809.58, 816.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1342, 1508, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (1688.72, 669.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 322.138 CPU sec, 18.089 real sec
[0000] Calling mem_process_seqs.., task: 1955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516752, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 902, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (926.50, 703.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1355, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (1699.32, 1192.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 318.606 CPU sec, 17.917 real sec
[0000] Calling mem_process_seqs.., task: 1956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516908, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 877, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5463)
[0000][PE] mean and std.dev: (999.96, 995.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.14, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1350, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (1308.55, 802.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 315.689 CPU sec, 17.705 real sec
[0000] Calling mem_process_seqs.., task: 1957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516756, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 837, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4841)
[0000][PE] mean and std.dev: (1154.07, 977.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1100, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (1243.12, 762.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 322.113 CPU sec, 18.065 real sec
[0000] Calling mem_process_seqs.., task: 1958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517078, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 464, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5046)
[0000][PE] mean and std.dev: (1233.76, 1332.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1034, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (1120.12, 731.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 319.535 CPU sec, 17.939 real sec
[0000] Calling mem_process_seqs.., task: 1959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517169, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 951, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1018.96, 860.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1535, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5976)
[0000][PE] mean and std.dev: (1672.06, 1018.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 314.649 CPU sec, 17.628 real sec
[0000] Calling mem_process_seqs.., task: 1960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517116, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 347, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2709)
[0000][PE] mean and std.dev: (535.11, 550.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1449, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (1328.60, 655.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 318.005 CPU sec, 17.843 real sec
[0000] Calling mem_process_seqs.., task: 1961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517368, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 568, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2535)
[0000][PE] mean and std.dev: (615.71, 513.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1283, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5176)
[0000][PE] mean and std.dev: (1462.26, 951.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 315.149 CPU sec, 17.762 real sec
[0000] Calling mem_process_seqs.., task: 1962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516768, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 443, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (711.46, 602.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1548, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4812)
[0000][PE] mean and std.dev: (1581.58, 795.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 319.962 CPU sec, 17.954 real sec
[0000] Calling mem_process_seqs.., task: 1963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517009, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 720, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (943.97, 942.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1503, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5773)
[0000][PE] mean and std.dev: (1808.23, 1140.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 320.123 CPU sec, 17.959 real sec
[0000] Calling mem_process_seqs.., task: 1964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516928, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 532, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2476)
[0000][PE] mean and std.dev: (602.56, 484.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1161, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 2411)
[0000][PE] mean and std.dev: (1143.73, 358.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 321.648 CPU sec, 18.111 real sec
[0000] Calling mem_process_seqs.., task: 1965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516878, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 401, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2474)
[0000][PE] mean and std.dev: (656.95, 488.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.63, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1358, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (1558.00, 697.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 317.936 CPU sec, 17.835 real sec
[0000] Calling mem_process_seqs.., task: 1966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516801, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 434, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (971.22, 1004.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.88, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1809, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5608)
[0000][PE] mean and std.dev: (1613.38, 1153.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 316.048 CPU sec, 17.830 real sec
[0000] Calling mem_process_seqs.., task: 1967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517104, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 713, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (845.44, 652.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1052, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (1232.46, 714.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 319.017 CPU sec, 17.911 real sec
[0000] Calling mem_process_seqs.., task: 1968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517061, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 846, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (1284.42, 1323.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1321, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5671)
[0000][PE] mean and std.dev: (1582.06, 1053.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 318.393 CPU sec, 17.862 real sec
[0000] Calling mem_process_seqs.., task: 1969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517321, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 965, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (822.61, 619.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.07, 121.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1377, 1590, 2806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5664)
[0000][PE] mean and std.dev: (1895.50, 1215.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 313.914 CPU sec, 17.580 real sec
[0000] Calling mem_process_seqs.., task: 1970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517267, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 445, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (927.75, 1017.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1486, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (1472.35, 821.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 318.433 CPU sec, 17.848 real sec
[0000] Calling mem_process_seqs.., task: 1971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517151, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 658, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (831.91, 726.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1131, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (1160.24, 624.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 317.795 CPU sec, 17.848 real sec
[0000] Calling mem_process_seqs.., task: 1972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516904, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 515, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5579)
[0000][PE] mean and std.dev: (843.58, 970.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1449, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (1489.76, 828.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 315.641 CPU sec, 17.752 real sec
[0000] Calling mem_process_seqs.., task: 1973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517129, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 736, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (987.28, 845.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1203, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (1228.88, 897.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 315.122 CPU sec, 17.657 real sec
[0000] Calling mem_process_seqs.., task: 1974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517210, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 493, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (874.94, 799.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.95, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 316.665 CPU sec, 17.775 real sec
[0000] Calling mem_process_seqs.., task: 1975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517053, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 620, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (836.73, 795.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (633, 1030, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4830)
[0000][PE] mean and std.dev: (1272.67, 862.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 315.770 CPU sec, 17.718 real sec
[0000] Calling mem_process_seqs.., task: 1976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516907, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 463, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (739.70, 787.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1627, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5552)
[0000][PE] mean and std.dev: (1702.71, 1165.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 315.237 CPU sec, 17.656 real sec
[0000] Calling mem_process_seqs.., task: 1977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517137, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 348, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 798)
[0000][PE] mean and std.dev: (288.24, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.32, 121.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 315.875 CPU sec, 17.712 real sec
[0000] Calling mem_process_seqs.., task: 1978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516710, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1022, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6625)
[0000][PE] mean and std.dev: (1448.42, 1534.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (531, 917, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5772)
[0000][PE] mean and std.dev: (1335.55, 1169.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 316.054 CPU sec, 17.724 real sec
[0000] Calling mem_process_seqs.., task: 1979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516697, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 789, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (873.45, 738.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1189, 3436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8696)
[0000][PE] mean and std.dev: (2050.91, 1813.13)
[0000][PE] low and high boundaries for proper pairs: (1, 11326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 317.276 CPU sec, 17.766 real sec
[0000] Calling mem_process_seqs.., task: 1980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517312, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 722, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4264)
[0000][PE] mean and std.dev: (990.00, 1039.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.82, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1213, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (1088.47, 529.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 317.540 CPU sec, 17.771 real sec
[0000] Calling mem_process_seqs.., task: 1981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517044, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 497, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3193)
[0000][PE] mean and std.dev: (621.07, 509.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1611, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4373)
[0000][PE] mean and std.dev: (1336.17, 671.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 314.905 CPU sec, 17.638 real sec
[0000] Calling mem_process_seqs.., task: 1982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517616, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 525, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (690.45, 535.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.99, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1273, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1554.80, 1109.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 312.528 CPU sec, 17.516 real sec
[0000] Calling mem_process_seqs.., task: 1983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517077, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 793, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4649)
[0000][PE] mean and std.dev: (981.73, 794.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.78, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1321, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (170, 2545)
[0000][PE] mean and std.dev: (1225.14, 408.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 315.438 CPU sec, 17.665 real sec
[0000] Calling mem_process_seqs.., task: 1984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517071, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 704, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (874.16, 467.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1253, 1682, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (1556.00, 595.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 317.004 CPU sec, 17.738 real sec
[0000] Calling mem_process_seqs.., task: 1985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517158, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 396, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4368)
[0000][PE] mean and std.dev: (1019.88, 1000.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.32, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1369, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3520)
[0000][PE] mean and std.dev: (1322.19, 661.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 312.886 CPU sec, 17.540 real sec
[0000] Calling mem_process_seqs.., task: 1986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516867, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 637, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (859.83, 726.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1106, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (1084.69, 573.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 318.809 CPU sec, 17.838 real sec
[0000] Calling mem_process_seqs.., task: 1987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517267, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 694, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2936)
[0000][PE] mean and std.dev: (744.59, 685.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1368, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (1350.79, 551.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 313.027 CPU sec, 17.549 real sec
[0000] Calling mem_process_seqs.., task: 1988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516762, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 427, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (810.00, 770.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.02, 121.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (557, 921, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4487)
[0000][PE] mean and std.dev: (1152.91, 1097.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 315.988 CPU sec, 17.688 real sec
[0000] Calling mem_process_seqs.., task: 1989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516990, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 848, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (804.70, 655.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.72, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1426, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6794)
[0000][PE] mean and std.dev: (1782.56, 1139.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 314.543 CPU sec, 17.606 real sec
[0000] Calling mem_process_seqs.., task: 1990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516966, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 927, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (818.82, 508.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.79, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1297, 1568, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5272)
[0000][PE] mean and std.dev: (1793.19, 934.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 317.552 CPU sec, 17.768 real sec
[0000] Calling mem_process_seqs.., task: 1991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516542, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 845, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (831.96, 648.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.93, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1670, 2580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6100)
[0000][PE] mean and std.dev: (1689.12, 1123.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 317.098 CPU sec, 17.796 real sec
[0000] Calling mem_process_seqs.., task: 1992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516260, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 482, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (983.86, 1076.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.04, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1628, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (1614.67, 531.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 318.548 CPU sec, 17.841 real sec
[0000] Calling mem_process_seqs.., task: 1993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517279, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 397, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (588.50, 538.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1565, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1792.58, 1030.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 315.573 CPU sec, 17.673 real sec
[0000] Calling mem_process_seqs.., task: 1994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516684, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1173, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4495)
[0000][PE] mean and std.dev: (1181.56, 992.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.01, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1452, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (1786.78, 1098.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 315.518 CPU sec, 17.701 real sec
[0000] Calling mem_process_seqs.., task: 1995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517192, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 392, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2081)
[0000][PE] mean and std.dev: (447.33, 332.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (570, 906, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2865)
[0000][PE] mean and std.dev: (924.61, 451.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 315.504 CPU sec, 17.674 real sec
[0000] Calling mem_process_seqs.., task: 1996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516926, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 749, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1019.67, 921.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.27, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1424, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (1302.36, 585.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 318.039 CPU sec, 17.796 real sec
[0000] Calling mem_process_seqs.., task: 1997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517446, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 526, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (735.77, 608.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1586, 2569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5797)
[0000][PE] mean and std.dev: (1656.85, 1087.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 315.670 CPU sec, 17.695 real sec
[0000] Calling mem_process_seqs.., task: 1998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516844, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 451, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (705.28, 650.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (189, 426, 2917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8373)
[0000][PE] mean and std.dev: (1606.90, 2013.77)
[0000][PE] low and high boundaries for proper pairs: (1, 11101)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1354, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (1310.41, 461.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 316.311 CPU sec, 17.700 real sec
[0000] Calling mem_process_seqs.., task: 1999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516822, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 787, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (839.00, 751.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.99, 120.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (429, 1122, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (1070.90, 711.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 318.343 CPU sec, 17.827 real sec
[0000] Calling mem_process_seqs.., task: 2000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517275, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 555, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5714)
[0000][PE] mean and std.dev: (1050.24, 1082.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.38, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1693, 2902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6392)
[0000][PE] mean and std.dev: (1759.17, 923.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 316.593 CPU sec, 17.733 real sec
[0000] Calling mem_process_seqs.., task: 2001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517007, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 1513, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5739)
[0000][PE] mean and std.dev: (1292.95, 1082.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.05, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1709, 3719, 4907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11303)
[0000][PE] mean and std.dev: (3271.10, 2497.73)
[0000][PE] low and high boundaries for proper pairs: (1, 14501)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 1223, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5398)
[0000][PE] mean and std.dev: (1315.00, 946.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 316.626 CPU sec, 17.744 real sec
[0000] Calling mem_process_seqs.., task: 2002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516695, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 718, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (809.52, 668.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.10, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1427, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1701.28, 1051.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 317.855 CPU sec, 17.813 real sec
[0000] Calling mem_process_seqs.., task: 2003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516688, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 457, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (728.83, 787.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.08, 121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (612, 1051, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4980)
[0000][PE] mean and std.dev: (1227.50, 840.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 318.207 CPU sec, 17.824 real sec
[0000] Calling mem_process_seqs.., task: 2004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517148, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 383, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (788.83, 862.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1650, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4693)
[0000][PE] mean and std.dev: (1444.20, 761.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 313.142 CPU sec, 17.590 real sec
[0000] Calling mem_process_seqs.., task: 2005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516726, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (454, 1164, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (1257.22, 957.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.41, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1481, 2711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6035)
[0000][PE] mean and std.dev: (1854.36, 1171.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 320.311 CPU sec, 17.991 real sec
[0000] Calling mem_process_seqs.., task: 2006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517201, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 377, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1138)
[0000][PE] mean and std.dev: (354.93, 237.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.18, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1224, 3091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7063)
[0000][PE] mean and std.dev: (1727.78, 1067.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 313.830 CPU sec, 17.573 real sec
[0000] Calling mem_process_seqs.., task: 2007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517141, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 677, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (842.48, 711.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1320, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5759)
[0000][PE] mean and std.dev: (1576.65, 1244.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 314.222 CPU sec, 17.594 real sec
[0000] Calling mem_process_seqs.., task: 2008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516863, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 667, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (955.73, 1010.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.51, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1440, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (1497.93, 659.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 314.755 CPU sec, 17.631 real sec
[0000] Calling mem_process_seqs.., task: 2009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517128, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 368, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (774.58, 925.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.71, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1169, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3578)
[0000][PE] mean and std.dev: (1269.09, 684.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 315.875 CPU sec, 17.692 real sec
[0000] Calling mem_process_seqs.., task: 2010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517387, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 536, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4309)
[0000][PE] mean and std.dev: (953.22, 983.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1748, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (1478.00, 900.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 313.851 CPU sec, 17.576 real sec
[0000] Calling mem_process_seqs.., task: 2011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516929, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 327, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3378)
[0000][PE] mean and std.dev: (546.00, 596.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1181, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (1013.75, 437.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 314.387 CPU sec, 17.623 real sec
[0000] Calling mem_process_seqs.., task: 2012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516959, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 519, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2598)
[0000][PE] mean and std.dev: (658.00, 538.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.47, 121.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1064, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1344.88, 928.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 313.258 CPU sec, 17.570 real sec
[0000] Calling mem_process_seqs.., task: 2013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516864, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 622, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3031)
[0000][PE] mean and std.dev: (779.20, 650.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1444, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1329.92, 743.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 313.796 CPU sec, 17.592 real sec
[0000] Calling mem_process_seqs.., task: 2014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517056, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 814, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (905.12, 682.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1130, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1172.47, 653.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 316.930 CPU sec, 17.742 real sec
[0000] Calling mem_process_seqs.., task: 2015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517102, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 777, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8115)
[0000][PE] mean and std.dev: (1351.83, 1257.49)
[0000][PE] low and high boundaries for proper pairs: (1, 10669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 906)
[0000][PE] mean and std.dev: (515.39, 121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1075, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3319)
[0000][PE] mean and std.dev: (1020.79, 582.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 314.477 CPU sec, 17.628 real sec
[0000] Calling mem_process_seqs.., task: 2016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516994, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 733, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (957.20, 882.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.27, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1365, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3357)
[0000][PE] mean and std.dev: (1245.56, 621.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 316.061 CPU sec, 17.693 real sec
[0000] Calling mem_process_seqs.., task: 2017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516611, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 335, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2567)
[0000][PE] mean and std.dev: (578.07, 552.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1230, 1603, 2994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6522)
[0000][PE] mean and std.dev: (2298.63, 1627.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 316.012 CPU sec, 17.679 real sec
[0000] Calling mem_process_seqs.., task: 2018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516793, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 602, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (757.15, 629.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.96, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (600, 1057, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (1450.38, 1299.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 316.933 CPU sec, 17.779 real sec
[0000] Calling mem_process_seqs.., task: 2019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517036, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 588, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (816.70, 769.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.91, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (633, 1178, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3246)
[0000][PE] mean and std.dev: (1175.14, 614.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 312.688 CPU sec, 17.512 real sec
[0000] Calling mem_process_seqs.., task: 2020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516842, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 875, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5231)
[0000][PE] mean and std.dev: (1140.50, 943.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.03, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1308, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (13, 2483)
[0000][PE] mean and std.dev: (1052.09, 469.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 320.620 CPU sec, 17.962 real sec
[0000] Calling mem_process_seqs.., task: 2021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516855, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 368, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (653.25, 696.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.38, 121.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1335, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (1212.25, 603.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 312.294 CPU sec, 17.464 real sec
[0000] Calling mem_process_seqs.., task: 2022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516963, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 431, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (723.37, 665.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.83, 121.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1562, 1884, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5177)
[0000][PE] mean and std.dev: (2262.95, 985.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 313.498 CPU sec, 17.571 real sec
[0000] Calling mem_process_seqs.., task: 2023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516806, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 558, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (797.73, 731.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.77, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1153, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (1171.88, 481.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 315.217 CPU sec, 17.664 real sec
[0000] Calling mem_process_seqs.., task: 2024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517177, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 552, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2881)
[0000][PE] mean and std.dev: (724.71, 599.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.92, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1334, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4601)
[0000][PE] mean and std.dev: (1505.08, 887.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 314.996 CPU sec, 17.644 real sec
[0000] Calling mem_process_seqs.., task: 2025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516987, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 496, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (684.58, 507.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1188, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (1180.33, 567.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 313.937 CPU sec, 17.589 real sec
[0000] Calling mem_process_seqs.., task: 2026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516492, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1542, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5083)
[0000][PE] mean and std.dev: (1396.96, 1277.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1374, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (1384.15, 719.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 321.093 CPU sec, 18.006 real sec
[0000] Calling mem_process_seqs.., task: 2027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516757, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 416, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1612)
[0000][PE] mean and std.dev: (430.00, 292.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.25, 120.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1217, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (1134.00, 664.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 313.466 CPU sec, 17.547 real sec
[0000] Calling mem_process_seqs.., task: 2028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516938, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 632, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4329)
[0000][PE] mean and std.dev: (646.33, 606.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.89, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1658, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (1855.50, 1129.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 322.011 CPU sec, 18.047 real sec
[0000] Calling mem_process_seqs.., task: 2029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517352, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 918, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (867.38, 742.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.00, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1940, 3061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6993)
[0000][PE] mean and std.dev: (2028.50, 1280.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 312.894 CPU sec, 17.523 real sec
[0000] Calling mem_process_seqs.., task: 2030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517156, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 511, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2849)
[0000][PE] mean and std.dev: (755.38, 639.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.90, 120.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1509, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5166)
[0000][PE] mean and std.dev: (1507.73, 971.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 319.082 CPU sec, 17.866 real sec
[0000] Calling mem_process_seqs.., task: 2031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516893, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 899, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (985.94, 773.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.80, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1475, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (1309.55, 747.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 314.441 CPU sec, 17.627 real sec
[0000] Calling mem_process_seqs.., task: 2032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516932, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 1174, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5369)
[0000][PE] mean and std.dev: (1393.47, 1315.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.06, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1268, 2814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6656)
[0000][PE] mean and std.dev: (1324.78, 838.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 319.529 CPU sec, 17.938 real sec
[0000] Calling mem_process_seqs.., task: 2033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517289, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 871, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (919.60, 643.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.96, 120.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1329, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3719)
[0000][PE] mean and std.dev: (1418.89, 611.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 314.058 CPU sec, 17.620 real sec
[0000] Calling mem_process_seqs.., task: 2034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516637, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 704, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (854.33, 748.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.03, 121.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1127, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3436)
[0000][PE] mean and std.dev: (1297.38, 765.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 318.990 CPU sec, 17.892 real sec
[0000] Calling mem_process_seqs.., task: 2035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516487, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 346, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (747.29, 900.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.65, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (380, 1378, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4916)
[0000][PE] mean and std.dev: (1164.90, 739.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 315.501 CPU sec, 17.668 real sec
[0000] Calling mem_process_seqs.., task: 2036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516871, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 666, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4466)
[0000][PE] mean and std.dev: (939.68, 979.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.12, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 1229, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (1076.67, 651.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 318.845 CPU sec, 17.894 real sec
[0000] Calling mem_process_seqs.., task: 2037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516659, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 690, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3602)
[0000][PE] mean and std.dev: (846.90, 548.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.32, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1515, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4934)
[0000][PE] mean and std.dev: (1782.18, 1068.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 317.515 CPU sec, 17.791 real sec
[0000] Calling mem_process_seqs.., task: 2038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517144, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 987, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (813.91, 603.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.98, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1518, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5032)
[0000][PE] mean and std.dev: (1517.32, 688.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 317.314 CPU sec, 17.779 real sec
[0000] Calling mem_process_seqs.., task: 2039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516841, 11, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 647, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5447)
[0000][PE] mean and std.dev: (1001.00, 923.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.57, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (399, 1107, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (808.67, 578.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (681, 884, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2553)
[0000][PE] mean and std.dev: (919.72, 460.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 320.237 CPU sec, 17.927 real sec
[0000] Calling mem_process_seqs.., task: 2040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516830, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 937, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4530)
[0000][PE] mean and std.dev: (979.95, 810.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.51, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1248, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (1367.88, 678.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 316.574 CPU sec, 17.760 real sec
[0000] Calling mem_process_seqs.., task: 2041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517271, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 422, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (886.78, 1022.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 120.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1126, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4369)
[0000][PE] mean and std.dev: (1247.12, 672.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 318.930 CPU sec, 17.873 real sec
[0000] Calling mem_process_seqs.., task: 2042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517017, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 943, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4801)
[0000][PE] mean and std.dev: (1180.68, 1016.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 2001, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6965)
[0000][PE] mean and std.dev: (2063.21, 1698.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 318.186 CPU sec, 17.810 real sec
[0000] Calling mem_process_seqs.., task: 2043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517142, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 411, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (887.25, 940.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.80, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1650, 3465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8571)
[0000][PE] mean and std.dev: (2250.64, 1486.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 320.454 CPU sec, 17.952 real sec
[0000] Calling mem_process_seqs.., task: 2044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516939, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 446, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2346)
[0000][PE] mean and std.dev: (607.55, 523.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.81, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1989, 4060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10312)
[0000][PE] mean and std.dev: (2407.06, 1702.44)
[0000][PE] low and high boundaries for proper pairs: (1, 13438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 313.609 CPU sec, 17.609 real sec
[0000] Calling mem_process_seqs.., task: 2045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516973, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 781, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (867.92, 689.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1190, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3193)
[0000][PE] mean and std.dev: (1071.65, 516.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 316.329 CPU sec, 17.724 real sec
[0000] Calling mem_process_seqs.., task: 2046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516671, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 824, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (1044.60, 893.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.98, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1386, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1312.42, 724.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 321.999 CPU sec, 18.045 real sec
[0000] Calling mem_process_seqs.., task: 2047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516951, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1521, 3503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9721)
[0000][PE] mean and std.dev: (1952.35, 1550.62)
[0000][PE] low and high boundaries for proper pairs: (1, 12830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.84, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1337, 2964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6938)
[0000][PE] mean and std.dev: (1631.17, 979.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 315.784 CPU sec, 17.682 real sec
[0000] Calling mem_process_seqs.., task: 2048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517049, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 426, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2569)
[0000][PE] mean and std.dev: (744.85, 565.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.65, 120.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1191, 2580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6038)
[0000][PE] mean and std.dev: (1743.88, 1287.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 319.398 CPU sec, 17.874 real sec
[0000] Calling mem_process_seqs.., task: 2049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517261, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 452, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (808.07, 742.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.10, 121.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1560, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (1282.27, 668.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 317.967 CPU sec, 17.807 real sec
[0000] Calling mem_process_seqs.., task: 2050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516622, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (670, 1355, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (1156.88, 684.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 120.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 907, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1037.71, 830.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 321.390 CPU sec, 18.006 real sec
[0000] Calling mem_process_seqs.., task: 2051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516955, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 633, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (834.73, 753.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.94, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1799, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (1528.87, 672.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 319.898 CPU sec, 17.900 real sec
[0000] Calling mem_process_seqs.., task: 2052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517108, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 431, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (654.95, 593.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 1473, 4004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10832)
[0000][PE] mean and std.dev: (2670.88, 2818.61)
[0000][PE] low and high boundaries for proper pairs: (1, 14246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 313.560 CPU sec, 17.561 real sec
[0000] Calling mem_process_seqs.., task: 2053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517251, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 402, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (644.05, 514.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.12, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1308, 1625, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (1545.46, 524.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 317.371 CPU sec, 17.831 real sec
[0000] Calling mem_process_seqs.., task: 2054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 516990, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 406, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (951.38, 1145.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.13, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1423, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1588.94, 703.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 320.114 CPU sec, 17.928 real sec
[0000] Calling mem_process_seqs.., task: 2055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517452, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 523, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2562)
[0000][PE] mean and std.dev: (673.29, 494.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.16, 121.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1197, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (1022.79, 592.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 316.129 CPU sec, 17.732 real sec
[0000] Calling mem_process_seqs.., task: 2056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516590, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 1065, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (1119.75, 894.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.87, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1611, 2294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4962)
[0000][PE] mean and std.dev: (1596.30, 779.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 318.914 CPU sec, 17.961 real sec
[0000] Calling mem_process_seqs.., task: 2057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516790, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 449, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4855)
[0000][PE] mean and std.dev: (944.69, 1042.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.24, 121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1499, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (1178.20, 601.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 321.830 CPU sec, 18.079 real sec
[0000] Calling mem_process_seqs.., task: 2058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516901, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 897, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (762.52, 513.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.34, 120.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1718, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (1296.55, 547.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 317.001 CPU sec, 17.819 real sec
[0000] Calling mem_process_seqs.., task: 2059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516988, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 780, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (939.09, 651.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.30, 121.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 1032, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (963.20, 478.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 316.393 CPU sec, 17.814 real sec
[0000] Calling mem_process_seqs.., task: 2060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517363, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 390, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (507.67, 557.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.77, 120.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1429, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (1412.14, 1032.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 317.561 CPU sec, 17.902 real sec
[0000] Calling mem_process_seqs.., task: 2061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517352, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 461, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (603.30, 467.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 120.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1737, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1671.38, 829.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 315.745 CPU sec, 17.695 real sec
[0000] Calling mem_process_seqs.., task: 2062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517226, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 693, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (879.11, 755.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.71, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1122, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (1074.00, 590.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 317.929 CPU sec, 17.851 real sec
[0000] Calling mem_process_seqs.., task: 2063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516783, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 996, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (749.73, 672.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.85, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1187, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (1404.76, 939.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 316.535 CPU sec, 17.743 real sec
[0000] Calling mem_process_seqs.., task: 2064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517316, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 703, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (979.52, 914.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 316.238 CPU sec, 17.735 real sec
[0000] Calling mem_process_seqs.., task: 2065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516886, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 327, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1739)
[0000][PE] mean and std.dev: (356.27, 201.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (514.88, 121.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 1121, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (1176.39, 711.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 318.997 CPU sec, 17.900 real sec
[0000] Calling mem_process_seqs.., task: 2066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516641, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 693, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (815.85, 691.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.09, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1416, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1622.04, 842.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 318.865 CPU sec, 17.892 real sec
[0000] Calling mem_process_seqs.., task: 2067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516886, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 683, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3750)
[0000][PE] mean and std.dev: (824.43, 655.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 1914, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5286)
[0000][PE] mean and std.dev: (1787.30, 858.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 317.555 CPU sec, 17.827 real sec
[0000] Calling mem_process_seqs.., task: 2068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517174, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 869, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2882)
[0000][PE] mean and std.dev: (786.80, 618.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.23, 121.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1551, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4705)
[0000][PE] mean and std.dev: (1582.86, 1158.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 316.995 CPU sec, 17.753 real sec
[0000] Calling mem_process_seqs.., task: 2069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516778, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 475, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (691.61, 655.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.77, 121.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 317.604 CPU sec, 17.777 real sec
[0000] Calling mem_process_seqs.., task: 2070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517173, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 484, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2784)
[0000][PE] mean and std.dev: (719.62, 707.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.13, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1884, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5306)
[0000][PE] mean and std.dev: (1660.88, 942.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 317.827 CPU sec, 17.958 real sec
[0000] Calling mem_process_seqs.., task: 2071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517186, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 386, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (754.27, 661.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.19, 121.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1556, 3210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7338)
[0000][PE] mean and std.dev: (1884.44, 1212.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 319.088 CPU sec, 17.885 real sec
[0000] Calling mem_process_seqs.., task: 2072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516970, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 440, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2149)
[0000][PE] mean and std.dev: (623.86, 448.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.11, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1542, 3204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7902)
[0000][PE] mean and std.dev: (1940.73, 1836.01)
[0000][PE] low and high boundaries for proper pairs: (1, 10251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 318.292 CPU sec, 17.884 real sec
[0000] Calling mem_process_seqs.., task: 2073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516793, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 399, 2790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7820)
[0000][PE] mean and std.dev: (1001.53, 1397.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.69, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1392, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (1165.44, 584.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 319.273 CPU sec, 17.882 real sec
[0000] Calling mem_process_seqs.., task: 2074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517111, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 718, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6081)
[0000][PE] mean and std.dev: (1377.64, 1662.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.04, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1380, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1632.18, 1009.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 321.221 CPU sec, 18.035 real sec
[0000] Calling mem_process_seqs.., task: 2075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517256, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 817, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (945.53, 757.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.90, 121.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1236, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3560)
[0000][PE] mean and std.dev: (1437.00, 790.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 318.419 CPU sec, 17.818 real sec
[0000] Calling mem_process_seqs.., task: 2076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517165, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 429, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6498)
[0000][PE] mean and std.dev: (1103.67, 1369.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1271, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (1326.90, 608.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 318.602 CPU sec, 17.841 real sec
[0000] Calling mem_process_seqs.., task: 2077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516771, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 565, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3539)
[0000][PE] mean and std.dev: (702.00, 553.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 506, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.80, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1768, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5733)
[0000][PE] mean and std.dev: (1851.05, 886.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 317.325 CPU sec, 17.825 real sec
[0000] Calling mem_process_seqs.., task: 2078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516971, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 885, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (907.91, 753.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1341, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (1140.93, 622.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 318.453 CPU sec, 17.859 real sec
[0000] Calling mem_process_seqs.., task: 2079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517449, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 401, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5414)
[0000][PE] mean and std.dev: (1023.11, 1016.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.15, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (422, 1524, 4466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12554)
[0000][PE] mean and std.dev: (2199.70, 2110.56)
[0000][PE] low and high boundaries for proper pairs: (1, 16598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 320.279 CPU sec, 17.941 real sec
[0000] Calling mem_process_seqs.., task: 2080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517101, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 506, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4881)
[0000][PE] mean and std.dev: (1099.56, 1222.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.94, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1622, 3213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7637)
[0000][PE] mean and std.dev: (2242.87, 1888.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 317.493 CPU sec, 17.806 real sec
[0000] Calling mem_process_seqs.., task: 2081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516905, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 483, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (769.72, 726.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.11, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 971, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (895.70, 407.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 316.648 CPU sec, 17.786 real sec
[0000] Calling mem_process_seqs.., task: 2082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516954, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 687, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5815)
[0000][PE] mean and std.dev: (1155.53, 1277.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.97, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1645, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (1555.09, 860.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 318.079 CPU sec, 17.820 real sec
[0000] Calling mem_process_seqs.., task: 2083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517197, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 432, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1830)
[0000][PE] mean and std.dev: (543.48, 402.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 902)
[0000][PE] mean and std.dev: (514.56, 120.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1755, 1990, 3733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7689)
[0000][PE] mean and std.dev: (2556.55, 1474.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 318.914 CPU sec, 17.934 real sec
[0000] Calling mem_process_seqs.., task: 2084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517007, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 461, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (709.43, 618.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (515.09, 121.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1136, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (1156.62, 818.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 320.938 CPU sec, 18.028 real sec
[0000] Calling mem_process_seqs.., task: 2085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516922, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 391, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4535)
[0000][PE] mean and std.dev: (982.89, 989.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.31, 121.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1550, 2661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6097)
[0000][PE] mean and std.dev: (1694.84, 1189.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 319.382 CPU sec, 17.918 real sec
[0000] Calling mem_process_seqs.., task: 2086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516595, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (600, 1208, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6078)
[0000][PE] mean and std.dev: (1523.26, 1299.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 905)
[0000][PE] mean and std.dev: (514.93, 121.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1541, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (1198.81, 563.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 316.809 CPU sec, 17.776 real sec
[0000] Calling mem_process_seqs.., task: 2087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 150930974, nseq: 1011184
	[0000][ M::kt_pipeline] read 1011184 sequences (150930974 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516737, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 570, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (713.61, 633.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.14, 121.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1384, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (1265.18, 622.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 318.771 CPU sec, 17.868 real sec
[0000] Calling mem_process_seqs.., task: 2088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1011184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 433505, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 450, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (568.07, 415.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 507, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (515.38, 121.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1417, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (60, 2785)
[0000][PE] mean and std.dev: (1224.00, 581.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1011184 reads in 265.611 CPU sec, 14.984 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.140164 MHz
Runtime profile:

	Time taken for main_mem function: 37334.72 sec

	IO times (sec) :
	Reading IO time (reads) avg: 1732.16, (1732.16, 1732.16)
	Writing IO time (SAM) avg: 2868.96, (2868.96, 2868.96)
	Reading IO time (Reference Genome) avg: 17.24, (17.24, 17.24)
	Index read time avg: 27.23, (27.23, 27.23)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 37290.19
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 37284.89, (37284.89, 37284.89)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 14470.32, (14470.32, 14470.32)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 22652.36, (22652.36, 22652.36)
		SMEM compute avg: 8097.69, (8154.48, 8062.31)
		SAL compute avg: 2863.38, (2876.28, 2841.08)
				MEM_SA avg: 1360.88, (1362.72, 1358.25)

		BSW time, avg: 8835.02, (8837.17, 8832.66)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
