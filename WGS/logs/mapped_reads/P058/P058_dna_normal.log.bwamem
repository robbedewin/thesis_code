Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000064 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000002 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515610, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 346, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (589.33, 611.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.37, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 2409, 2924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6330)
[0000][PE] mean and std.dev: (2149.50, 1214.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 512.135 CPU sec, 241.522 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515633, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 428, 642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1312)
[0000][PE] mean and std.dev: (386.39, 163.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.49, 126.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1168, 1760, 3709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8791)
[0000][PE] mean and std.dev: (2101.07, 1449.89)
[0000][PE] low and high boundaries for proper pairs: (1, 11332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 508.027 CPU sec, 87.479 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515767, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 335, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1922)
[0000][PE] mean and std.dev: (390.29, 332.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.44, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 489.428 CPU sec, 101.488 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515669, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 395, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1900)
[0000][PE] mean and std.dev: (436.00, 282.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.54, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 483.445 CPU sec, 70.487 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515993, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 338, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2339)
[0000][PE] mean and std.dev: (631.23, 597.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 488.560 CPU sec, 72.561 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515689, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 347, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1825)
[0000][PE] mean and std.dev: (590.48, 516.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.67, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1187, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (241, 2316)
[0000][PE] mean and std.dev: (1154.90, 381.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 487.584 CPU sec, 95.392 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515842, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 470, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2062)
[0000][PE] mean and std.dev: (497.93, 373.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1385, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (1629.27, 987.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 478.902 CPU sec, 100.857 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515852, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 329, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2571)
[0000][PE] mean and std.dev: (520.76, 478.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.36, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1296, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (1325.67, 421.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 483.784 CPU sec, 75.778 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516026, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 315, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2498)
[0000][PE] mean and std.dev: (500.90, 490.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 907, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5839)
[0000][PE] mean and std.dev: (1386.09, 978.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 475.493 CPU sec, 69.978 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516259, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 416, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1350)
[0000][PE] mean and std.dev: (327.74, 206.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.52, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 476.884 CPU sec, 81.649 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516025, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 481, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3213)
[0000][PE] mean and std.dev: (749.56, 748.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.53, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 1352, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5741)
[0000][PE] mean and std.dev: (1301.54, 888.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 485.574 CPU sec, 81.787 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516245, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 327, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2263)
[0000][PE] mean and std.dev: (526.39, 506.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.47, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1379, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (1192.33, 568.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 480.955 CPU sec, 80.806 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515977, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 279, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (506.04, 537.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 479.091 CPU sec, 88.971 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516249, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 352, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 967)
[0000][PE] mean and std.dev: (329.42, 186.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1169, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (1125.17, 491.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 479.122 CPU sec, 69.597 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515944, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 336, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (383.96, 300.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.02, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 477.095 CPU sec, 72.734 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515113, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 403, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1641)
[0000][PE] mean and std.dev: (384.95, 217.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1311, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (1312.00, 673.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 478.645 CPU sec, 84.299 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515558, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 280, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4598)
[0000][PE] mean and std.dev: (809.55, 875.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (110, 335, 4265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12575)
[0000][PE] mean and std.dev: (1949.80, 2310.49)
[0000][PE] low and high boundaries for proper pairs: (1, 16730)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (577, 1640, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5152)
[0000][PE] mean and std.dev: (1281.08, 712.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 474.066 CPU sec, 64.420 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516489, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 379, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1661)
[0000][PE] mean and std.dev: (448.87, 362.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.65, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 912, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (857.92, 509.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 471.144 CPU sec, 65.844 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516308, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 374, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (667.41, 600.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.61, 126.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1026, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1239.54, 699.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 475.435 CPU sec, 65.483 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515930, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 454, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2856)
[0000][PE] mean and std.dev: (543.66, 484.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.00, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 1174, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1142.40, 720.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 478.911 CPU sec, 132.767 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515846, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 378, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (535.54, 537.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.07, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 474.340 CPU sec, 91.823 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515700, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 258, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (382.23, 486.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (461, 1333, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6341)
[0000][PE] mean and std.dev: (1364.33, 984.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 474.998 CPU sec, 71.712 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515536, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 304, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1876)
[0000][PE] mean and std.dev: (393.00, 311.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 486.886 CPU sec, 78.655 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515417, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 308, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1055)
[0000][PE] mean and std.dev: (303.29, 190.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.32, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1588, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (1551.24, 752.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 479.016 CPU sec, 81.808 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515787, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 424, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (717.22, 581.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1248, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (1384.80, 638.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 471.298 CPU sec, 71.325 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516232, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 408, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (928.70, 883.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.02, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 473.292 CPU sec, 70.429 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515964, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 386, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 972)
[0000][PE] mean and std.dev: (392.25, 220.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1060, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (1239.60, 835.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 475.145 CPU sec, 69.706 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515466, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 348, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1489)
[0000][PE] mean and std.dev: (408.16, 334.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1231, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1528.20, 741.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 479.092 CPU sec, 91.961 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515645, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 375, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (553.50, 482.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.42, 126.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1131, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (1305.07, 725.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 480.564 CPU sec, 155.828 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515588, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 437, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2912)
[0000][PE] mean and std.dev: (609.54, 494.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 482.233 CPU sec, 77.384 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515962, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 295, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 753)
[0000][PE] mean and std.dev: (268.07, 165.19)
[0000][PE] low and high boundaries for proper pairs: (1, 966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.52, 126.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 1008, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (956.00, 563.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 484.188 CPU sec, 139.939 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515881, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 282, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (538.38, 555.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.37, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1041, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3669)
[0000][PE] mean and std.dev: (1062.08, 634.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 473.591 CPU sec, 55.270 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515342, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 432, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4894)
[0000][PE] mean and std.dev: (962.05, 1125.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.11, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (657, 1583, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (1352.00, 722.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 473.946 CPU sec, 58.484 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516247, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 474, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (715.27, 615.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.53, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1849, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (1412.17, 798.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 471.059 CPU sec, 68.415 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516171, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 380, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (688.96, 585.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.56, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 473.522 CPU sec, 65.382 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515852, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 338, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1490)
[0000][PE] mean and std.dev: (441.46, 292.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1200, 1526, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (1652.69, 762.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 473.795 CPU sec, 71.429 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516208, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 403, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (714.05, 587.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.45, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1325, 3030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7542)
[0000][PE] mean and std.dev: (1859.83, 1607.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 474.688 CPU sec, 84.580 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515531, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 453, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2424)
[0000][PE] mean and std.dev: (607.59, 505.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.58, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 1407, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (1222.57, 576.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 476.806 CPU sec, 93.213 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515573, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 383, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2255)
[0000][PE] mean and std.dev: (586.62, 500.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 486.251 CPU sec, 93.500 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515751, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 407, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (824.87, 962.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 481.185 CPU sec, 98.494 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516087, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 369, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (694.67, 754.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1523, 1686, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (473, 3098)
[0000][PE] mean and std.dev: (1520.25, 437.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 474.572 CPU sec, 83.977 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516238, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 306, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (672.36, 712.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 1181, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (53, 2773)
[0000][PE] mean and std.dev: (1213.08, 508.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 471.958 CPU sec, 72.490 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515686, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 665, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (766.33, 506.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 127.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1043, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (1364.65, 965.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 477.408 CPU sec, 96.142 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 515920, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 509, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2356)
[0000][PE] mean and std.dev: (627.97, 543.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1747, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (1513.10, 542.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 475.904 CPU sec, 94.405 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515558, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 445, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1779)
[0000][PE] mean and std.dev: (451.46, 293.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 474.885 CPU sec, 88.829 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206116
	[0000][ M::kt_pipeline] read 1206116 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516147, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 401, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1964)
[0000][PE] mean and std.dev: (412.32, 345.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (523, 1569, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4822)
[0000][PE] mean and std.dev: (1327.54, 816.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 475.112 CPU sec, 86.865 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516234, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 589, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (977.33, 1077.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.60, 126.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1541, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (182, 2812)
[0000][PE] mean and std.dev: (1440.10, 407.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206116 reads in 472.021 CPU sec, 93.897 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515910, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (47, 439, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (546.36, 531.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1144, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (911.17, 429.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 485.832 CPU sec, 101.341 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515756, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 518, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2912)
[0000][PE] mean and std.dev: (677.40, 480.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1416, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (1353.71, 575.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 478.755 CPU sec, 99.777 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515947, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 334, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2692)
[0000][PE] mean and std.dev: (459.04, 475.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.67, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1425, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (1357.64, 470.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 481.407 CPU sec, 102.668 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515765, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 291, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 875)
[0000][PE] mean and std.dev: (251.24, 122.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 483.536 CPU sec, 88.460 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515629, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 552, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4686)
[0000][PE] mean and std.dev: (819.21, 698.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 481.118 CPU sec, 103.564 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516026, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 313, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1151)
[0000][PE] mean and std.dev: (311.32, 228.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 791, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (1015.27, 623.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 476.649 CPU sec, 98.124 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515774, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 474, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2189)
[0000][PE] mean and std.dev: (525.83, 499.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 478.887 CPU sec, 100.856 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515733, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 389, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (614.25, 522.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.31, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 476.523 CPU sec, 88.106 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516183, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 353, 863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2209)
[0000][PE] mean and std.dev: (548.83, 557.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.32, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1387, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (1543.73, 810.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 476.380 CPU sec, 97.182 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516138, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 317, 443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 831)
[0000][PE] mean and std.dev: (287.00, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.18, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1047, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3341)
[0000][PE] mean and std.dev: (1322.07, 748.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 478.870 CPU sec, 94.533 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516039, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 397, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1879)
[0000][PE] mean and std.dev: (589.52, 445.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.01, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1273, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (987.50, 441.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 477.359 CPU sec, 89.023 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516085, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 378, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (559.45, 395.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.70, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1196, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3274)
[0000][PE] mean and std.dev: (1277.92, 446.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 474.611 CPU sec, 92.182 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515942, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 353, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3572)
[0000][PE] mean and std.dev: (693.26, 761.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.59, 126.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 472.330 CPU sec, 83.935 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515771, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 321, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (601.25, 732.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1352, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2483)
[0000][PE] mean and std.dev: (1207.40, 409.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 474.800 CPU sec, 84.977 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515841, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 412, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (628.24, 549.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.01, 127.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1197, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (1175.44, 653.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 479.856 CPU sec, 98.713 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516007, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 436, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (661.67, 704.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.67, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 479.282 CPU sec, 100.715 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206096
	[0000][ M::kt_pipeline] read 1206096 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515505, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 346, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (573.32, 591.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.00, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1387, 1647, 3262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7012)
[0000][PE] mean and std.dev: (2256.08, 1352.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 484.197 CPU sec, 102.515 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515381, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 418, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2452)
[0000][PE] mean and std.dev: (731.74, 688.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (534, 814, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (850.70, 493.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206096 reads in 481.158 CPU sec, 114.716 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515527, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 282, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (417.50, 390.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 481.194 CPU sec, 99.151 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515448, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 360, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1628)
[0000][PE] mean and std.dev: (456.05, 339.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1391, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 2718)
[0000][PE] mean and std.dev: (1224.71, 570.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 482.988 CPU sec, 99.003 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515458, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 331, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 999)
[0000][PE] mean and std.dev: (281.12, 101.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 484.601 CPU sec, 109.875 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515441, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 418, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (546.61, 469.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 1337, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (1301.00, 447.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 483.182 CPU sec, 107.051 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516677, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 326, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2073)
[0000][PE] mean and std.dev: (360.32, 229.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.41, 126.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1312, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (1532.87, 900.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 472.838 CPU sec, 99.728 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515810, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 390, 772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1852)
[0000][PE] mean and std.dev: (463.87, 360.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.99, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 478.445 CPU sec, 105.515 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515848, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 263, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 723)
[0000][PE] mean and std.dev: (266.29, 129.41)
[0000][PE] low and high boundaries for proper pairs: (1, 904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 479.766 CPU sec, 103.497 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515717, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 430, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1965)
[0000][PE] mean and std.dev: (569.38, 437.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (353, 852, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5921)
[0000][PE] mean and std.dev: (952.20, 742.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 486.766 CPU sec, 125.752 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516196, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 399, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2787)
[0000][PE] mean and std.dev: (660.84, 654.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1239, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5505)
[0000][PE] mean and std.dev: (1446.19, 1071.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 491.900 CPU sec, 96.642 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515842, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 344, 622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1414)
[0000][PE] mean and std.dev: (334.81, 180.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1243, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (1373.10, 696.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 484.550 CPU sec, 112.171 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515459, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 326, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (517.35, 557.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 127.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (594, 1079, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (1008.10, 608.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 487.963 CPU sec, 112.679 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515911, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 390, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (702.13, 733.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 483.971 CPU sec, 101.034 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515566, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 482, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (770.78, 627.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1221, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (1055.44, 475.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 479.157 CPU sec, 100.817 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515755, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 317, 472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 888)
[0000][PE] mean and std.dev: (313.90, 153.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.71, 126.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 990, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (1004.89, 538.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 478.090 CPU sec, 94.812 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515419, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 350, 456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 934)
[0000][PE] mean and std.dev: (279.81, 165.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 611)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 943)
[0000][PE] mean and std.dev: (531.26, 127.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1109)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1421, 1756, 3149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6605)
[0000][PE] mean and std.dev: (1595.30, 685.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 480.725 CPU sec, 104.142 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515982, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 393, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1419)
[0000][PE] mean and std.dev: (390.46, 206.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 479.563 CPU sec, 111.437 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515410, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 341, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2026)
[0000][PE] mean and std.dev: (448.73, 362.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 970, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (1161.40, 607.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 476.391 CPU sec, 100.549 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515920, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 418, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2343)
[0000][PE] mean and std.dev: (494.86, 350.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 1515, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5639)
[0000][PE] mean and std.dev: (1548.08, 1432.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 478.417 CPU sec, 105.398 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515846, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 300, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1135)
[0000][PE] mean and std.dev: (324.65, 226.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1150, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (1167.25, 619.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 485.259 CPU sec, 104.906 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515643, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 366, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1415)
[0000][PE] mean and std.dev: (420.68, 253.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1300, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1388.21, 603.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 482.662 CPU sec, 108.540 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515589, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 426, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1606)
[0000][PE] mean and std.dev: (468.07, 268.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.69, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 483.608 CPU sec, 104.767 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515744, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 435, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2158)
[0000][PE] mean and std.dev: (497.31, 321.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1420, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5206)
[0000][PE] mean and std.dev: (1374.00, 794.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 484.578 CPU sec, 100.930 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515728, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 401, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1049)
[0000][PE] mean and std.dev: (409.09, 153.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1324, 1733, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1744.82, 968.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 474.239 CPU sec, 81.924 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515917, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 712, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (873.19, 764.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.53, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 483.508 CPU sec, 91.634 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515904, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 354, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1902)
[0000][PE] mean and std.dev: (472.59, 391.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.08, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 482.023 CPU sec, 106.405 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515786, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 393, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (840.39, 772.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 520, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.23, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 481.925 CPU sec, 120.790 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516153, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 385, 726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1726)
[0000][PE] mean and std.dev: (422.50, 296.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 489.667 CPU sec, 98.170 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516281, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 385, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1173)
[0000][PE] mean and std.dev: (417.12, 257.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1602, 3234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7840)
[0000][PE] mean and std.dev: (1678.92, 1167.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 477.639 CPU sec, 85.814 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515400, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 434, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1641)
[0000][PE] mean and std.dev: (449.65, 295.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 485.109 CPU sec, 100.243 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515996, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 394, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (612.26, 457.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1439, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4890)
[0000][PE] mean and std.dev: (1580.93, 805.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 484.896 CPU sec, 129.048 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515892, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 475, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (750.29, 590.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.67, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 934, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2571)
[0000][PE] mean and std.dev: (939.86, 570.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 472.689 CPU sec, 94.978 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515316, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 360, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1959)
[0000][PE] mean and std.dev: (514.59, 396.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.79, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1100, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (1057.10, 509.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 477.290 CPU sec, 99.236 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516109, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 442, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2815)
[0000][PE] mean and std.dev: (707.05, 592.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 1385, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7437)
[0000][PE] mean and std.dev: (1469.17, 1324.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 480.130 CPU sec, 101.649 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515859, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 396, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (587.00, 578.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (436, 1211, 4752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13384)
[0000][PE] mean and std.dev: (2420.91, 2566.70)
[0000][PE] low and high boundaries for proper pairs: (1, 17700)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 477.325 CPU sec, 95.719 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516426, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 428, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (788.76, 763.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1811, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (1703.43, 935.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 475.940 CPU sec, 100.663 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515590, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 397, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1780)
[0000][PE] mean and std.dev: (558.96, 459.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.54, 127.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (518, 649, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2972)
[0000][PE] mean and std.dev: (861.00, 501.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 486.863 CPU sec, 99.682 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515787, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 443, 598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1252)
[0000][PE] mean and std.dev: (459.32, 321.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.46, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 476.940 CPU sec, 96.890 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516173, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 394, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (656.50, 559.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1394, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (1372.23, 820.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 483.914 CPU sec, 107.364 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515922, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 349, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4658)
[0000][PE] mean and std.dev: (1031.70, 1116.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.18, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1677, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4641)
[0000][PE] mean and std.dev: (1567.50, 745.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 482.183 CPU sec, 113.998 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516020, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 417, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1888)
[0000][PE] mean and std.dev: (540.88, 414.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 481.061 CPU sec, 95.036 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515748, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 364, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (822.71, 1104.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 484.679 CPU sec, 108.696 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515548, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 398, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (812.64, 757.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.24, 126.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1785, 2761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6289)
[0000][PE] mean and std.dev: (1902.61, 916.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 485.143 CPU sec, 101.681 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516167, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 516, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (898.79, 842.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 1229, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4739)
[0000][PE] mean and std.dev: (1546.65, 1162.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 478.946 CPU sec, 107.049 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515801, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 402, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2475)
[0000][PE] mean and std.dev: (557.83, 524.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1359, 1529, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (1380.88, 391.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 478.829 CPU sec, 104.617 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515665, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 359, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (684.35, 768.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1325, 4212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10532)
[0000][PE] mean and std.dev: (2747.17, 2895.39)
[0000][PE] low and high boundaries for proper pairs: (1, 14329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 486.315 CPU sec, 99.689 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515923, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 437, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1485)
[0000][PE] mean and std.dev: (502.60, 311.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.05, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1254, 1521, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (1617.50, 592.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 483.272 CPU sec, 101.072 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516328, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 455, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2482)
[0000][PE] mean and std.dev: (596.19, 537.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1338, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5190)
[0000][PE] mean and std.dev: (1709.88, 955.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 485.891 CPU sec, 112.310 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515638, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 464, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1740)
[0000][PE] mean and std.dev: (555.11, 441.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 483.323 CPU sec, 108.976 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515973, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 336, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1412)
[0000][PE] mean and std.dev: (404.32, 286.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 482.313 CPU sec, 107.132 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515667, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 430, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (757.62, 656.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.04, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 890, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1965)
[0000][PE] mean and std.dev: (842.60, 346.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 481.156 CPU sec, 95.331 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515690, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 270, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1155)
[0000][PE] mean and std.dev: (292.32, 148.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.35, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1120, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4956)
[0000][PE] mean and std.dev: (1079.92, 613.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 480.475 CPU sec, 99.690 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516135, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 330, 448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1010)
[0000][PE] mean and std.dev: (277.47, 167.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 478.160 CPU sec, 91.620 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515943, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 363, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1618)
[0000][PE] mean and std.dev: (365.13, 276.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 490.074 CPU sec, 111.949 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515995, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 529, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (979.81, 1082.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1227, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (1162.89, 523.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 479.980 CPU sec, 109.494 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516092, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 326, 472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 898)
[0000][PE] mean and std.dev: (317.54, 155.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1527, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5705)
[0000][PE] mean and std.dev: (1763.58, 806.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 482.518 CPU sec, 117.990 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515633, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 353, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1968)
[0000][PE] mean and std.dev: (489.72, 485.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.98, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 479.129 CPU sec, 95.728 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516237, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 341, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1277)
[0000][PE] mean and std.dev: (320.15, 251.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 126.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1102, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (1335.27, 948.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 478.582 CPU sec, 96.910 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515854, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 329, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1237)
[0000][PE] mean and std.dev: (300.20, 204.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 476.304 CPU sec, 87.826 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515595, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 434, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (688.35, 539.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 482.614 CPU sec, 101.062 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515709, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 372, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1891)
[0000][PE] mean and std.dev: (510.92, 397.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.47, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1273, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (1333.69, 844.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 477.683 CPU sec, 100.044 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516105, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 397, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (726.03, 739.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 969, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1420.20, 1072.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 477.059 CPU sec, 113.502 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 515295, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 412, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2294)
[0000][PE] mean and std.dev: (554.50, 406.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1522, 4988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12594)
[0000][PE] mean and std.dev: (2660.18, 2530.03)
[0000][PE] low and high boundaries for proper pairs: (1, 16397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 483.309 CPU sec, 102.363 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515733, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 386, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5382)
[0000][PE] mean and std.dev: (853.89, 1091.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.02, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 486.612 CPU sec, 113.814 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515263, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 346, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2568)
[0000][PE] mean and std.dev: (594.65, 488.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1316, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4517)
[0000][PE] mean and std.dev: (1289.20, 949.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 485.075 CPU sec, 102.861 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515702, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 420, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2243)
[0000][PE] mean and std.dev: (574.65, 441.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 481.798 CPU sec, 104.402 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516146, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 358, 700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1774)
[0000][PE] mean and std.dev: (409.13, 309.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.26, 126.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1029, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (71, 1841)
[0000][PE] mean and std.dev: (975.33, 367.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 483.630 CPU sec, 102.514 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515701, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 417, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1660)
[0000][PE] mean and std.dev: (485.69, 410.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.59, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 478.360 CPU sec, 100.902 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515767, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 567, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (840.59, 882.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.57, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 480.059 CPU sec, 106.357 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515791, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 335, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (717.77, 772.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.55, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1718, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (1558.80, 975.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 480.693 CPU sec, 108.231 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515770, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 297, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2149)
[0000][PE] mean and std.dev: (446.33, 486.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.03, 127.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1278, 1471, 2954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6306)
[0000][PE] mean and std.dev: (1790.00, 986.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 483.905 CPU sec, 111.596 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 515476, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 537, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (623.00, 483.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.40, 126.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 2314, 4459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11127)
[0000][PE] mean and std.dev: (2997.30, 2599.58)
[0000][PE] low and high boundaries for proper pairs: (1, 14461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 482.240 CPU sec, 104.607 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515809, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 425, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (702.88, 632.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (461, 983, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (1033.46, 629.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 484.923 CPU sec, 102.816 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515665, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 371, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1378)
[0000][PE] mean and std.dev: (438.36, 324.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1102, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (1170.00, 599.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 480.592 CPU sec, 98.549 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515884, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 490, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2653)
[0000][PE] mean and std.dev: (660.34, 541.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1729, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5433)
[0000][PE] mean and std.dev: (1378.70, 660.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 476.291 CPU sec, 101.027 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516023, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 460, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (638.60, 453.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1011, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (1296.21, 850.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 476.981 CPU sec, 107.384 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516277, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 488, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2267)
[0000][PE] mean and std.dev: (554.24, 536.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.55, 126.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (976, 1770, 3121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7411)
[0000][PE] mean and std.dev: (1889.20, 1345.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9556)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 484.018 CPU sec, 110.628 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515538, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 455, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2600)
[0000][PE] mean and std.dev: (678.03, 588.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1219, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (251, 2431)
[0000][PE] mean and std.dev: (1202.75, 416.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 485.605 CPU sec, 96.120 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515453, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 434, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (688.43, 694.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 486.311 CPU sec, 109.119 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515842, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 401, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (989.92, 1166.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1383, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (1429.40, 607.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 493.581 CPU sec, 105.332 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515474, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 375, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (681.38, 589.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 480.019 CPU sec, 102.688 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516073, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 498, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6642)
[0000][PE] mean and std.dev: (698.29, 610.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.37, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 480.288 CPU sec, 95.021 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515415, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 345, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1161)
[0000][PE] mean and std.dev: (354.11, 226.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 486.329 CPU sec, 104.134 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515699, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 333, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (516.69, 539.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 479.009 CPU sec, 104.561 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515552, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 367, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (421.84, 369.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.99, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 481.748 CPU sec, 105.559 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515888, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 360, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1212)
[0000][PE] mean and std.dev: (333.05, 225.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1452, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4256)
[0000][PE] mean and std.dev: (1618.14, 885.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 480.470 CPU sec, 96.272 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516258, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 347, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (570.29, 486.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.58, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 478.191 CPU sec, 96.576 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515850, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 409, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (696.12, 672.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.38, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1365, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (144, 2689)
[0000][PE] mean and std.dev: (1192.67, 415.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 483.862 CPU sec, 98.390 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515997, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 408, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1533)
[0000][PE] mean and std.dev: (498.55, 387.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 127.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1805, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4679)
[0000][PE] mean and std.dev: (1495.31, 869.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 477.967 CPU sec, 97.916 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515731, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 286, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2711)
[0000][PE] mean and std.dev: (482.36, 505.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (232, 1083, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (1220.80, 1210.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6252)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 482.216 CPU sec, 102.759 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 515697, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 290, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (591.42, 692.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.58, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1352, 1755, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5096)
[0000][PE] mean and std.dev: (1806.94, 1070.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 490.021 CPU sec, 105.040 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515782, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 495, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2211)
[0000][PE] mean and std.dev: (619.50, 496.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.58, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 494.337 CPU sec, 114.607 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206108
	[0000][ M::kt_pipeline] read 1206108 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515565, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 479, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (669.50, 556.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (582, 1234, 2757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7107)
[0000][PE] mean and std.dev: (1333.36, 1047.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 484.314 CPU sec, 113.902 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515889, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 269, 642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1534)
[0000][PE] mean and std.dev: (310.05, 233.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.34, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1337, 2785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6811)
[0000][PE] mean and std.dev: (1815.36, 1279.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206108 reads in 505.603 CPU sec, 122.786 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515331, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 365, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (547.31, 486.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1284, 1582, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (250, 2835)
[0000][PE] mean and std.dev: (1650.30, 615.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 497.644 CPU sec, 104.099 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516033, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 378, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1027)
[0000][PE] mean and std.dev: (429.40, 256.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.01, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1610, 2105, 3223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (2336.00, 1394.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 491.605 CPU sec, 122.469 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515855, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 400, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1884)
[0000][PE] mean and std.dev: (572.17, 504.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1277, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (1107.18, 492.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 483.821 CPU sec, 100.498 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515473, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 321, 613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1521)
[0000][PE] mean and std.dev: (340.96, 283.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.38, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1466, 1655, 2433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4367)
[0000][PE] mean and std.dev: (1846.10, 606.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 492.877 CPU sec, 102.198 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515844, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 397, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1714)
[0000][PE] mean and std.dev: (556.84, 438.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.55, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 966, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4956)
[0000][PE] mean and std.dev: (1372.36, 782.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 488.689 CPU sec, 101.860 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516148, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 385, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2443)
[0000][PE] mean and std.dev: (550.54, 610.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 127.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1498, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (1354.80, 823.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 485.568 CPU sec, 101.826 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515383, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 375, 791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2145)
[0000][PE] mean and std.dev: (584.73, 573.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 489.553 CPU sec, 98.962 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516141, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 810, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (873.94, 874.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 1113, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5461)
[0000][PE] mean and std.dev: (1310.31, 1099.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 484.682 CPU sec, 98.635 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515867, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 392, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6093)
[0000][PE] mean and std.dev: (881.08, 1037.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 489.520 CPU sec, 104.986 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515676, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 502, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (732.38, 608.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.55, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1366, 1403, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (1777.73, 918.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 482.389 CPU sec, 98.541 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516067, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 373, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2028)
[0000][PE] mean and std.dev: (532.46, 401.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.58, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 482.201 CPU sec, 98.658 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515218, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 427, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (475.75, 452.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.44, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (335, 1270, 3578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10064)
[0000][PE] mean and std.dev: (1659.45, 1542.43)
[0000][PE] low and high boundaries for proper pairs: (1, 13307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 487.637 CPU sec, 97.678 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516089, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 400, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1067)
[0000][PE] mean and std.dev: (358.88, 174.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.57, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1267, 1643, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4849)
[0000][PE] mean and std.dev: (1743.87, 964.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 482.111 CPU sec, 102.711 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516080, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 339, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2106)
[0000][PE] mean and std.dev: (482.33, 388.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.67, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2089, 2952, 4605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9637)
[0000][PE] mean and std.dev: (2844.80, 1390.59)
[0000][PE] low and high boundaries for proper pairs: (1, 12153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 483.677 CPU sec, 104.619 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516267, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 434, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (539.78, 385.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.67, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 483.597 CPU sec, 102.776 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515738, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 362, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1771)
[0000][PE] mean and std.dev: (484.23, 332.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 486.929 CPU sec, 81.361 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515946, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 410, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (862.46, 875.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.54, 126.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1863, 4609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11741)
[0000][PE] mean and std.dev: (2848.14, 2344.91)
[0000][PE] low and high boundaries for proper pairs: (1, 15307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 478.492 CPU sec, 92.530 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515874, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 340, 467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 785)
[0000][PE] mean and std.dev: (314.58, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1682, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (1206.33, 529.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 487.086 CPU sec, 104.686 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515847, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 358, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2196)
[0000][PE] mean and std.dev: (630.05, 556.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 2737, 9063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 24987)
[0000][PE] mean and std.dev: (3868.23, 3237.41)
[0000][PE] low and high boundaries for proper pairs: (1, 32949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 487.801 CPU sec, 110.968 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515506, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 328, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2249)
[0000][PE] mean and std.dev: (442.61, 384.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 962, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3825)
[0000][PE] mean and std.dev: (908.90, 546.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 486.059 CPU sec, 109.765 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516108, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 375, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2540)
[0000][PE] mean and std.dev: (573.32, 527.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1896, 2746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5884)
[0000][PE] mean and std.dev: (2091.64, 1310.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 486.229 CPU sec, 99.619 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516293, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 358, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2924)
[0000][PE] mean and std.dev: (613.25, 662.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.67, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1839, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1697.93, 1017.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 477.148 CPU sec, 94.263 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515836, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 533, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (848.57, 753.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 484.195 CPU sec, 103.038 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516129, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 363, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2087)
[0000][PE] mean and std.dev: (571.03, 531.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 486.660 CPU sec, 118.108 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515517, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 428, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1305)
[0000][PE] mean and std.dev: (456.14, 247.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1945, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4621)
[0000][PE] mean and std.dev: (1720.50, 810.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 488.399 CPU sec, 102.565 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515619, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 286, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2241)
[0000][PE] mean and std.dev: (423.55, 444.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.36, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 985, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (957.91, 481.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 488.078 CPU sec, 109.308 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515861, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 610, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2866)
[0000][PE] mean and std.dev: (685.16, 527.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1181, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (1221.46, 712.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 478.012 CPU sec, 81.851 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515391, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 270, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 971)
[0000][PE] mean and std.dev: (248.18, 110.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 482.325 CPU sec, 102.580 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515935, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 336, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1617)
[0000][PE] mean and std.dev: (471.80, 392.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 903, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4091)
[0000][PE] mean and std.dev: (927.45, 620.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 473.615 CPU sec, 88.757 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516352, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 366, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1852)
[0000][PE] mean and std.dev: (453.55, 407.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.75, 126.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 478.224 CPU sec, 101.679 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516211, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 329, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2360)
[0000][PE] mean and std.dev: (515.00, 601.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.52, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1519, 1910, 3256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6730)
[0000][PE] mean and std.dev: (2401.54, 1619.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 487.960 CPU sec, 108.614 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515776, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 360, 643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1441)
[0000][PE] mean and std.dev: (412.46, 248.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.55, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 881, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (1009.20, 459.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 481.205 CPU sec, 107.652 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516424, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 325, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 851)
[0000][PE] mean and std.dev: (277.24, 104.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.29, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 479.307 CPU sec, 105.250 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515809, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 379, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (535.30, 399.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 483.645 CPU sec, 108.754 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516160, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 342, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2591)
[0000][PE] mean and std.dev: (477.68, 468.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 2106, 3914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10408)
[0000][PE] mean and std.dev: (2681.17, 2410.45)
[0000][PE] low and high boundaries for proper pairs: (1, 13655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 476.895 CPU sec, 117.071 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515570, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 378, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2856)
[0000][PE] mean and std.dev: (585.04, 507.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 479.338 CPU sec, 105.466 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515601, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 845, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5593)
[0000][PE] mean and std.dev: (1161.96, 1154.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1068, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (1165.21, 584.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 481.676 CPU sec, 109.609 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516217, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 386, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2566)
[0000][PE] mean and std.dev: (541.96, 512.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1405, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (1441.20, 707.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 478.014 CPU sec, 108.104 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516110, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 499, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2598)
[0000][PE] mean and std.dev: (670.16, 587.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.52, 126.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 479.798 CPU sec, 123.840 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515356, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 314, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1772)
[0000][PE] mean and std.dev: (537.64, 511.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (358, 1402, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5653)
[0000][PE] mean and std.dev: (1155.78, 739.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 482.583 CPU sec, 104.336 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515881, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 361, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1705)
[0000][PE] mean and std.dev: (413.48, 356.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1769, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (1900.09, 981.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 477.503 CPU sec, 102.220 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515281, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 334, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1626)
[0000][PE] mean and std.dev: (440.57, 329.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.40, 126.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (613, 1246, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (1284.38, 843.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 487.782 CPU sec, 113.807 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516019, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 327, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2374)
[0000][PE] mean and std.dev: (577.50, 515.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.09, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1703, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (1313.92, 624.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 479.073 CPU sec, 109.547 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515777, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 398, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (719.17, 781.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1721, 3163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7297)
[0000][PE] mean and std.dev: (2060.40, 1324.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 480.627 CPU sec, 110.017 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515752, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 223, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1846)
[0000][PE] mean and std.dev: (371.38, 352.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 479.865 CPU sec, 113.521 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515616, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 419, 735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1557)
[0000][PE] mean and std.dev: (483.23, 315.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.59, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 479.826 CPU sec, 102.689 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 515962, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 419, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2046)
[0000][PE] mean and std.dev: (588.57, 515.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 490.975 CPU sec, 107.419 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515942, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 767, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3327)
[0000][PE] mean and std.dev: (890.70, 816.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1039, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4247)
[0000][PE] mean and std.dev: (1304.31, 992.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 485.278 CPU sec, 109.596 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515779, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 355, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1308)
[0000][PE] mean and std.dev: (351.82, 209.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1673, 2824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6652)
[0000][PE] mean and std.dev: (1945.11, 1489.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 485.386 CPU sec, 107.368 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515743, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 317, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 711)
[0000][PE] mean and std.dev: (267.90, 105.42)
[0000][PE] low and high boundaries for proper pairs: (1, 876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (446, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 938)
[0000][PE] mean and std.dev: (531.00, 126.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1102)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 895, 3200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7910)
[0000][PE] mean and std.dev: (1507.80, 1069.66)
[0000][PE] low and high boundaries for proper pairs: (1, 10265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 479.507 CPU sec, 102.146 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 515937, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 379, 712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1686)
[0000][PE] mean and std.dev: (459.24, 318.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1470, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6283)
[0000][PE] mean and std.dev: (1843.00, 1367.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 481.920 CPU sec, 93.475 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515993, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 400, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (808.22, 915.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 481.157 CPU sec, 111.997 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515976, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 350, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2315)
[0000][PE] mean and std.dev: (551.76, 527.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1761, 3640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8782)
[0000][PE] mean and std.dev: (2353.09, 1763.80)
[0000][PE] low and high boundaries for proper pairs: (1, 11353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 478.848 CPU sec, 100.311 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515825, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 325, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1678)
[0000][PE] mean and std.dev: (398.38, 344.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1191, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (1240.60, 556.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 478.678 CPU sec, 108.337 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515207, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 387, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2240)
[0000][PE] mean and std.dev: (594.06, 508.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.47, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1647, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4358)
[0000][PE] mean and std.dev: (1495.53, 809.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 482.657 CPU sec, 105.700 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515549, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 360, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1138)
[0000][PE] mean and std.dev: (293.00, 160.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1471, 1952, 3405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7273)
[0000][PE] mean and std.dev: (1916.22, 1037.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 482.921 CPU sec, 108.131 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515874, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 344, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2192)
[0000][PE] mean and std.dev: (520.95, 457.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 2236, 3292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7366)
[0000][PE] mean and std.dev: (2075.62, 1263.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 480.176 CPU sec, 93.635 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206092
	[0000][ M::kt_pipeline] read 1206092 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515905, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 329, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1033)
[0000][PE] mean and std.dev: (339.75, 163.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1116, 3901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10113)
[0000][PE] mean and std.dev: (2092.30, 1674.86)
[0000][PE] low and high boundaries for proper pairs: (1, 13219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 483.365 CPU sec, 100.813 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515966, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 356, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1332)
[0000][PE] mean and std.dev: (335.14, 177.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.72, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206092 reads in 477.959 CPU sec, 113.082 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515756, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 409, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (756.65, 922.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1772, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (1427.80, 692.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 478.498 CPU sec, 103.559 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515639, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 719, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (795.59, 665.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1349, 2087, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (2173.42, 1252.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 480.950 CPU sec, 94.955 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516218, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 523, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2404)
[0000][PE] mean and std.dev: (611.52, 428.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.43, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 1227, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5681)
[0000][PE] mean and std.dev: (1129.67, 980.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 476.018 CPU sec, 94.231 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515822, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 335, 366)
[0000][PE] low and high boundaries for computing mean and std.dev: (204, 474)
[0000][PE] mean and std.dev: (332.94, 31.08)
[0000][PE] low and high boundaries for proper pairs: (150, 528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.42, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 481.855 CPU sec, 114.829 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515865, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 379, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1181)
[0000][PE] mean and std.dev: (344.75, 213.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.54, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1457, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (1063.09, 567.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 479.939 CPU sec, 107.568 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515563, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 458, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (728.62, 610.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (456, 815, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2079)
[0000][PE] mean and std.dev: (641.44, 290.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 481.775 CPU sec, 106.270 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515375, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 550, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2145)
[0000][PE] mean and std.dev: (560.60, 453.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1613, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5032)
[0000][PE] mean and std.dev: (1570.42, 622.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 479.809 CPU sec, 95.461 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516183, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 390, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1722)
[0000][PE] mean and std.dev: (400.94, 334.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.57, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1980, 2886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6586)
[0000][PE] mean and std.dev: (1787.00, 992.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 477.825 CPU sec, 99.240 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515661, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 377, 700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1570)
[0000][PE] mean and std.dev: (421.15, 238.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 480.238 CPU sec, 104.402 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515555, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 320, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1243)
[0000][PE] mean and std.dev: (345.06, 184.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 481.633 CPU sec, 108.378 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515926, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 363, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2155)
[0000][PE] mean and std.dev: (570.10, 515.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1266, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4219)
[0000][PE] mean and std.dev: (1343.64, 797.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 478.171 CPU sec, 106.493 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 515878, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 369, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2489)
[0000][PE] mean and std.dev: (556.21, 498.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (560, 1097, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2624)
[0000][PE] mean and std.dev: (940.50, 365.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 482.697 CPU sec, 102.412 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515578, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 358, 724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1690)
[0000][PE] mean and std.dev: (426.30, 350.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1105, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (41, 2001)
[0000][PE] mean and std.dev: (950.60, 337.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 476.015 CPU sec, 95.593 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206104
	[0000][ M::kt_pipeline] read 1206104 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515978, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 468, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (699.89, 619.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1629, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4547)
[0000][PE] mean and std.dev: (1602.38, 1014.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 476.584 CPU sec, 91.681 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516201, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 389, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2517)
[0000][PE] mean and std.dev: (505.39, 382.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1075, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (1164.35, 581.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206104 reads in 477.952 CPU sec, 88.643 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515656, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 458, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2247)
[0000][PE] mean and std.dev: (549.05, 409.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.59, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1047, 4834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12632)
[0000][PE] mean and std.dev: (2365.58, 2697.00)
[0000][PE] low and high boundaries for proper pairs: (1, 16531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 477.690 CPU sec, 96.306 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515976, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 416, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2950)
[0000][PE] mean and std.dev: (575.81, 559.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.98, 127.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1408, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (1472.09, 774.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 476.312 CPU sec, 103.664 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515559, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 329, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1842)
[0000][PE] mean and std.dev: (387.91, 301.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1436, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (1603.64, 1138.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 476.247 CPU sec, 95.955 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515962, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 753, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (653.43, 458.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1515, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (1326.50, 601.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 476.602 CPU sec, 91.903 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516001, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 392, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2316)
[0000][PE] mean and std.dev: (524.67, 464.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.43, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 471.887 CPU sec, 86.836 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515728, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 711, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (769.56, 622.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.59, 126.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 1588, 2776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7320)
[0000][PE] mean and std.dev: (2098.60, 1939.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 474.718 CPU sec, 82.121 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515778, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 292, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 695)
[0000][PE] mean and std.dev: (278.68, 89.53)
[0000][PE] low and high boundaries for proper pairs: (1, 857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.54, 126.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (415, 878, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (975.38, 769.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 474.989 CPU sec, 90.106 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516100, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 381, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (549.94, 483.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 474.501 CPU sec, 84.196 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515656, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 447, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1529)
[0000][PE] mean and std.dev: (421.32, 234.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1323, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (1386.05, 732.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 477.827 CPU sec, 77.468 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515729, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 395, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (365.22, 178.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (663, 792, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (1243.67, 1062.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5687)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 473.856 CPU sec, 81.293 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515923, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 368, 452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 810)
[0000][PE] mean and std.dev: (352.68, 147.09)
[0000][PE] low and high boundaries for proper pairs: (1, 989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1359, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (1160.50, 685.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 473.234 CPU sec, 84.060 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515922, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 371, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1639)
[0000][PE] mean and std.dev: (414.46, 308.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1587, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (1389.64, 707.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 472.816 CPU sec, 85.852 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515903, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 325, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1027)
[0000][PE] mean and std.dev: (312.88, 186.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 474.173 CPU sec, 81.281 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516201, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 385, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 943)
[0000][PE] mean and std.dev: (316.84, 137.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (584, 1214, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5063)
[0000][PE] mean and std.dev: (1444.56, 1126.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 471.041 CPU sec, 72.923 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515560, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 368, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (584.65, 552.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1181, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (1114.67, 549.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 474.829 CPU sec, 93.029 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515545, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 519, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3768)
[0000][PE] mean and std.dev: (816.14, 654.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 472.219 CPU sec, 76.926 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516016, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 439, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (750.12, 868.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1354, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5311)
[0000][PE] mean and std.dev: (1683.64, 1413.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 473.321 CPU sec, 86.228 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515544, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 348, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2207)
[0000][PE] mean and std.dev: (476.86, 454.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1438, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (1227.92, 574.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 472.425 CPU sec, 72.757 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515872, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 287, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2632)
[0000][PE] mean and std.dev: (413.74, 468.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.06, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1362, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (1331.92, 614.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 471.230 CPU sec, 118.251 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516025, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 458, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1879)
[0000][PE] mean and std.dev: (438.23, 365.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.11, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 471.240 CPU sec, 77.099 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206124
	[0000][ M::kt_pipeline] read 1206124 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515808, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 371, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2230)
[0000][PE] mean and std.dev: (440.40, 302.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 1252, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6726)
[0000][PE] mean and std.dev: (1706.73, 1231.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 472.425 CPU sec, 80.044 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515641, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 311, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1354)
[0000][PE] mean and std.dev: (425.96, 334.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206124 reads in 470.014 CPU sec, 76.442 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515593, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 416, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1704)
[0000][PE] mean and std.dev: (472.17, 324.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1263, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (17, 2567)
[0000][PE] mean and std.dev: (1104.25, 446.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 471.736 CPU sec, 80.672 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515636, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 340, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (512.48, 486.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1347, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (384, 2204)
[0000][PE] mean and std.dev: (1236.70, 269.78)
[0000][PE] low and high boundaries for proper pairs: (20, 2568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 473.594 CPU sec, 73.767 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515744, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 411, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (698.13, 578.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.46, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 473.509 CPU sec, 86.230 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515585, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 370, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1718)
[0000][PE] mean and std.dev: (452.12, 353.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.32, 126.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (358, 1963, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7648)
[0000][PE] mean and std.dev: (1686.20, 1331.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10078)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1430, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1622.70, 937.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 470.627 CPU sec, 85.921 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515797, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 330, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2725)
[0000][PE] mean and std.dev: (513.00, 493.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.52, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1037, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5618)
[0000][PE] mean and std.dev: (1137.00, 818.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 470.452 CPU sec, 76.905 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516107, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 397, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2150)
[0000][PE] mean and std.dev: (544.09, 438.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 468.052 CPU sec, 75.862 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515921, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 332, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (424.00, 353.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1314, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (1347.10, 626.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 471.658 CPU sec, 71.530 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515755, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 362, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (667.13, 830.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.35, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 473.261 CPU sec, 84.786 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516415, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 471, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4026)
[0000][PE] mean and std.dev: (906.06, 786.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.49, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1132, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (150, 2195)
[0000][PE] mean and std.dev: (1070.20, 459.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 471.260 CPU sec, 84.537 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515469, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 425, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (580.04, 445.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.43, 126.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1071, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (1091.27, 526.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 469.318 CPU sec, 81.687 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516001, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 403, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2790)
[0000][PE] mean and std.dev: (634.33, 539.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 474.345 CPU sec, 74.304 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516133, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 411, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 916)
[0000][PE] mean and std.dev: (362.28, 132.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1920, 3072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7198)
[0000][PE] mean and std.dev: (1824.38, 1144.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 478.789 CPU sec, 105.150 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515764, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 391, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1580)
[0000][PE] mean and std.dev: (448.79, 318.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1075, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (1125.07, 659.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 475.794 CPU sec, 90.466 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516226, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 333, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 948)
[0000][PE] mean and std.dev: (307.62, 187.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.52, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (551, 1493, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4673)
[0000][PE] mean and std.dev: (1265.33, 799.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 472.537 CPU sec, 83.327 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515927, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 360, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1485)
[0000][PE] mean and std.dev: (395.00, 256.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1396, 4769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12721)
[0000][PE] mean and std.dev: (2429.17, 2526.63)
[0000][PE] low and high boundaries for proper pairs: (1, 16697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 475.210 CPU sec, 88.991 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515795, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 338, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 958)
[0000][PE] mean and std.dev: (293.67, 133.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 2137, 3080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7344)
[0000][PE] mean and std.dev: (2170.29, 1416.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 476.506 CPU sec, 80.019 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516346, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 380, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1173)
[0000][PE] mean and std.dev: (382.55, 262.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1435, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5639)
[0000][PE] mean and std.dev: (1392.00, 635.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 470.913 CPU sec, 81.363 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515782, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 346, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1371)
[0000][PE] mean and std.dev: (434.18, 327.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.99, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1378, 1566, 2268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (1584.55, 513.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 468.915 CPU sec, 76.056 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515770, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 343, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 986)
[0000][PE] mean and std.dev: (287.38, 147.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.52, 126.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 677, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (630.50, 431.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 470.493 CPU sec, 74.296 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515930, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 392, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (663.57, 679.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1524, 3644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9306)
[0000][PE] mean and std.dev: (2068.75, 1593.97)
[0000][PE] low and high boundaries for proper pairs: (1, 12137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 473.636 CPU sec, 75.030 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515997, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 579, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3031)
[0000][PE] mean and std.dev: (728.78, 587.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.56, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1263, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (1296.50, 647.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 473.879 CPU sec, 104.011 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515960, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 366, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1101)
[0000][PE] mean and std.dev: (328.27, 197.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1354, 2877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6423)
[0000][PE] mean and std.dev: (1789.82, 1392.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 469.056 CPU sec, 75.726 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516045, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 816, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (741.76, 634.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.44, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 956, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (1107.43, 631.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 471.959 CPU sec, 93.367 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515423, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 363, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (843.59, 827.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (353, 557, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (603.93, 417.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 475.032 CPU sec, 99.709 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515679, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 391, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2373)
[0000][PE] mean and std.dev: (619.95, 539.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1394, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1367.55, 893.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 473.532 CPU sec, 79.399 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516182, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 349, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2902)
[0000][PE] mean and std.dev: (609.87, 605.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.69, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 473.125 CPU sec, 106.326 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515712, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 355, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 823)
[0000][PE] mean and std.dev: (343.84, 178.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.33, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 474.903 CPU sec, 73.018 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515853, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 366, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (568.65, 588.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.36, 126.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 472.337 CPU sec, 79.840 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516176, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 347, 419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 807)
[0000][PE] mean and std.dev: (276.18, 121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 475.986 CPU sec, 91.765 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515769, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 565, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (961.65, 873.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1490, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4649)
[0000][PE] mean and std.dev: (1592.20, 935.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 472.225 CPU sec, 89.719 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515965, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 394, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2245)
[0000][PE] mean and std.dev: (482.05, 398.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1344, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4735)
[0000][PE] mean and std.dev: (1330.47, 685.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 470.531 CPU sec, 91.804 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515669, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 399, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (886.00, 925.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1204, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (1397.00, 826.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 478.918 CPU sec, 83.258 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516342, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 300, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1092)
[0000][PE] mean and std.dev: (320.78, 209.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1218, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (794, 1624)
[0000][PE] mean and std.dev: (1197.50, 129.73)
[0000][PE] low and high boundaries for proper pairs: (628, 1790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 471.253 CPU sec, 73.883 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516173, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 506, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (672.12, 717.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1612, 1725, 2927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5557)
[0000][PE] mean and std.dev: (1678.70, 1069.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 471.646 CPU sec, 160.526 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515600, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 384, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (728.72, 732.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1379, 1617, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (1751.64, 727.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 476.848 CPU sec, 86.535 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515721, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 378, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1415)
[0000][PE] mean and std.dev: (455.05, 261.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 471.075 CPU sec, 75.636 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516300, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 328, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2394)
[0000][PE] mean and std.dev: (434.25, 351.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1286, 1354, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (916, 1841)
[0000][PE] mean and std.dev: (1399.14, 88.13)
[0000][PE] low and high boundaries for proper pairs: (731, 2026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 473.204 CPU sec, 80.951 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515643, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 365, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (513.50, 512.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 1027, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3882)
[0000][PE] mean and std.dev: (1081.08, 697.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 472.193 CPU sec, 91.942 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515741, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 421, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2254)
[0000][PE] mean and std.dev: (604.58, 491.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.58, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 474.594 CPU sec, 78.354 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516175, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 323, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2435)
[0000][PE] mean and std.dev: (511.88, 485.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1398, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3753)
[0000][PE] mean and std.dev: (1502.57, 869.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 479.760 CPU sec, 90.408 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515800, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 513, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (617.84, 605.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1420, 1551, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5263)
[0000][PE] mean and std.dev: (1688.82, 906.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6544)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1390, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1402.56, 636.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 473.798 CPU sec, 80.441 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516013, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 363, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 872)
[0000][PE] mean and std.dev: (343.38, 103.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 473.313 CPU sec, 71.463 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515608, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 401, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (573.33, 491.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.40, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1392, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (1395.56, 594.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 474.179 CPU sec, 86.876 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515666, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 466, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (594.71, 534.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.99, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1140, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (1098.17, 536.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 479.507 CPU sec, 104.736 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515881, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 373, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2136)
[0000][PE] mean and std.dev: (441.96, 386.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.40, 126.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1051, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (386, 1591)
[0000][PE] mean and std.dev: (1008.17, 84.48)
[0000][PE] low and high boundaries for proper pairs: (145, 1832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 471.572 CPU sec, 79.413 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515526, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 431, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (796.06, 831.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 474.970 CPU sec, 80.211 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515652, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 337, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (827.63, 1013.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.73, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1392, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5375)
[0000][PE] mean and std.dev: (1544.18, 1006.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 473.665 CPU sec, 78.520 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516092, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 536, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (954.30, 1058.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1317, 1925, 2818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5820)
[0000][PE] mean and std.dev: (1557.11, 738.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 474.232 CPU sec, 78.078 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515264, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 332, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2413)
[0000][PE] mean and std.dev: (542.08, 485.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.24, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1805, 3986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9836)
[0000][PE] mean and std.dev: (2424.31, 1851.56)
[0000][PE] low and high boundaries for proper pairs: (1, 12761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 473.373 CPU sec, 89.944 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516220, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 365, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2016)
[0000][PE] mean and std.dev: (525.65, 466.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.56, 126.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 468.599 CPU sec, 79.315 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515801, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 375, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (651.17, 569.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 477.239 CPU sec, 90.437 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515933, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 376, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (647.81, 619.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.45, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1539, 2967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6811)
[0000][PE] mean and std.dev: (1698.92, 1049.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 473.003 CPU sec, 78.691 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516016, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 392, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (725.86, 735.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.60, 126.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 1042, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (913.09, 503.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 473.401 CPU sec, 94.040 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516053, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 446, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2398)
[0000][PE] mean and std.dev: (645.71, 486.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 472.691 CPU sec, 80.248 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515497, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 370, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (660.95, 606.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1649, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (1496.71, 530.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 477.554 CPU sec, 84.726 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515398, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 538, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5064)
[0000][PE] mean and std.dev: (1046.54, 1116.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1027, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (933.13, 502.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 478.261 CPU sec, 81.442 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516074, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 333, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1008)
[0000][PE] mean and std.dev: (318.67, 157.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (502, 1709, 3231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8689)
[0000][PE] mean and std.dev: (2389.79, 2290.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 472.024 CPU sec, 88.591 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516052, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 460, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2720)
[0000][PE] mean and std.dev: (652.70, 576.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.04, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1234, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (1328.36, 785.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 479.155 CPU sec, 89.014 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515737, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 335, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2438)
[0000][PE] mean and std.dev: (445.88, 467.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.51, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1648, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (1415.80, 558.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 475.775 CPU sec, 81.479 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516169, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 639, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2471)
[0000][PE] mean and std.dev: (601.35, 455.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 477.009 CPU sec, 92.480 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515908, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 604, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (920.96, 734.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.62, 126.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 471.594 CPU sec, 82.784 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515808, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 388, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (678.80, 678.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 471.283 CPU sec, 71.787 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515491, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 447, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (687.08, 601.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.58, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1195, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (589, 1954)
[0000][PE] mean and std.dev: (1192.79, 253.10)
[0000][PE] low and high boundaries for proper pairs: (180, 2227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 474.737 CPU sec, 79.771 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515587, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 369, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (700.18, 740.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.74, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1540, 3011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7091)
[0000][PE] mean and std.dev: (1547.13, 921.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 472.458 CPU sec, 77.686 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515660, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 425, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (719.83, 662.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1360, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5492)
[0000][PE] mean and std.dev: (1358.79, 899.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 484.190 CPU sec, 107.174 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515424, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 354, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3465)
[0000][PE] mean and std.dev: (803.60, 900.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.09, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1020, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (1100.25, 526.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 474.034 CPU sec, 84.952 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515657, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 298, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1889)
[0000][PE] mean and std.dev: (449.88, 421.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 477.610 CPU sec, 78.785 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515768, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 364, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 901)
[0000][PE] mean and std.dev: (351.27, 137.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.48, 126.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1589, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1808.55, 1371.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 477.379 CPU sec, 122.607 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516327, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 442, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (598.43, 541.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1260, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (1374.83, 683.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 472.269 CPU sec, 87.730 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515917, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 391, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2472)
[0000][PE] mean and std.dev: (601.69, 419.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 475.657 CPU sec, 95.964 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516437, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 328, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2158)
[0000][PE] mean and std.dev: (454.93, 431.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.08, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1305, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (58, 2668)
[0000][PE] mean and std.dev: (1224.21, 465.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 469.078 CPU sec, 79.109 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515781, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 422, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1875)
[0000][PE] mean and std.dev: (531.76, 404.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1333, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (1228.73, 556.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 469.109 CPU sec, 92.282 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515969, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 402, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (733.78, 667.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (446, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 938)
[0000][PE] mean and std.dev: (531.01, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1102)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 471.941 CPU sec, 80.279 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515478, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 676, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (871.00, 627.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 483.022 CPU sec, 91.594 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515645, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 443, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (706.30, 718.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.00, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1309, 3420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8638)
[0000][PE] mean and std.dev: (1980.14, 1824.50)
[0000][PE] low and high boundaries for proper pairs: (1, 11247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 469.749 CPU sec, 79.028 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515541, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 358, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1455)
[0000][PE] mean and std.dev: (338.88, 212.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 768, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (946.46, 581.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 477.263 CPU sec, 85.492 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515886, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 294, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 733)
[0000][PE] mean and std.dev: (253.39, 109.17)
[0000][PE] low and high boundaries for proper pairs: (1, 904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.67, 126.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1066, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1508.83, 900.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 474.405 CPU sec, 84.201 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515278, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 382, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2471)
[0000][PE] mean and std.dev: (457.83, 414.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 475.944 CPU sec, 82.634 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515783, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 523, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2613)
[0000][PE] mean and std.dev: (700.08, 600.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 472.148 CPU sec, 83.823 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515889, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 344, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1008)
[0000][PE] mean and std.dev: (322.00, 187.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 473.992 CPU sec, 72.047 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516406, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 465, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (814.95, 827.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1312, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2520)
[0000][PE] mean and std.dev: (1096.00, 358.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 478.085 CPU sec, 91.454 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515707, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 463, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2691)
[0000][PE] mean and std.dev: (565.89, 343.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.33, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 2000, 2829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6747)
[0000][PE] mean and std.dev: (1981.85, 1229.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 477.989 CPU sec, 83.338 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515980, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 385, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (29, 814)
[0000][PE] mean and std.dev: (347.65, 139.03)
[0000][PE] low and high boundaries for proper pairs: (1, 971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.07, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1276, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (1348.00, 875.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 477.237 CPU sec, 87.504 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515841, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 579, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (673.67, 584.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 470.818 CPU sec, 74.614 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515533, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 458, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3213)
[0000][PE] mean and std.dev: (639.91, 710.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 473.064 CPU sec, 107.382 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515732, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 648, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (718.85, 575.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1222, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3653)
[0000][PE] mean and std.dev: (1262.85, 499.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 491.451 CPU sec, 113.107 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515772, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 363, 595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1211)
[0000][PE] mean and std.dev: (363.33, 192.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 710, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2657)
[0000][PE] mean and std.dev: (927.58, 477.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 476.737 CPU sec, 84.080 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515411, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 384, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (528.25, 572.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 475.449 CPU sec, 87.101 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515917, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 368, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2504)
[0000][PE] mean and std.dev: (511.04, 523.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.50, 126.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1383, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5888)
[0000][PE] mean and std.dev: (1486.22, 1037.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 468.240 CPU sec, 78.614 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515807, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 337, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1083)
[0000][PE] mean and std.dev: (342.78, 240.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1377, 2681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6469)
[0000][PE] mean and std.dev: (1721.36, 1109.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 477.982 CPU sec, 86.313 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516030, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 398, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2684)
[0000][PE] mean and std.dev: (624.09, 537.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.43, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (660, 1098, 2774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7002)
[0000][PE] mean and std.dev: (1360.17, 973.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 473.619 CPU sec, 110.163 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206092
	[0000][ M::kt_pipeline] read 1206092 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516170, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 448, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (650.68, 472.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 126.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (611, 1298, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (1438.45, 1055.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 473.936 CPU sec, 125.913 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516286, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 411, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1752)
[0000][PE] mean and std.dev: (519.52, 410.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1125, 2742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6210)
[0000][PE] mean and std.dev: (1702.00, 1476.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206092 reads in 473.256 CPU sec, 103.796 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516101, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 317, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (651.61, 734.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.34, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (352, 745, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (682.82, 399.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 472.652 CPU sec, 84.513 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515597, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 364, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1818)
[0000][PE] mean and std.dev: (482.47, 391.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.62, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 1085, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5126)
[0000][PE] mean and std.dev: (1032.89, 720.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 470.218 CPU sec, 82.816 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515819, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 332, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1496)
[0000][PE] mean and std.dev: (345.00, 299.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1145, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6417)
[0000][PE] mean and std.dev: (1406.00, 1137.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 473.154 CPU sec, 86.251 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 515593, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 473, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3539)
[0000][PE] mean and std.dev: (704.26, 713.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 476.993 CPU sec, 79.482 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515667, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 368, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2661)
[0000][PE] mean and std.dev: (546.48, 576.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (343, 1001, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (1202.90, 949.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 478.333 CPU sec, 100.908 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515810, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 424, 628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1326)
[0000][PE] mean and std.dev: (410.86, 277.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.58, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1525, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5383)
[0000][PE] mean and std.dev: (1575.15, 871.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 474.225 CPU sec, 84.834 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515574, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 375, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2392)
[0000][PE] mean and std.dev: (536.08, 557.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1538, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5213)
[0000][PE] mean and std.dev: (1523.20, 1040.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 482.663 CPU sec, 97.819 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515538, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 395, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (675.12, 484.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.04, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1519, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1563.50, 767.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 477.019 CPU sec, 82.689 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515688, 12, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 377, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2442)
[0000][PE] mean and std.dev: (513.00, 431.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.20, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (623, 1527, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5978)
[0000][PE] mean and std.dev: (1481.67, 1270.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7763)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1306, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (1468.12, 867.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 475.042 CPU sec, 77.154 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515735, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 361, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2717)
[0000][PE] mean and std.dev: (563.79, 594.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 476.494 CPU sec, 91.744 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515756, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 321, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (602.96, 637.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.56, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (978, 1984, 3918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9798)
[0000][PE] mean and std.dev: (2747.40, 2537.62)
[0000][PE] low and high boundaries for proper pairs: (1, 12898)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 476.010 CPU sec, 98.961 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515633, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 548, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (913.39, 885.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.62, 126.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 802, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3320)
[0000][PE] mean and std.dev: (1042.09, 614.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 476.479 CPU sec, 107.730 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515994, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 403, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (671.13, 626.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 478.048 CPU sec, 97.113 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516145, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 395, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1077)
[0000][PE] mean and std.dev: (346.13, 206.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.25, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 1235, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (1050.46, 688.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 477.399 CPU sec, 86.435 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515938, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 533, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (781.59, 625.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1141, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (1275.38, 846.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 475.012 CPU sec, 92.571 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516229, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 405, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (728.43, 780.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1072, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (1181.56, 622.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 473.817 CPU sec, 80.537 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515924, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 405, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2470)
[0000][PE] mean and std.dev: (566.50, 387.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (499, 584, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4684)
[0000][PE] mean and std.dev: (736.78, 554.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 472.067 CPU sec, 83.814 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515670, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 459, 797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1861)
[0000][PE] mean and std.dev: (525.29, 433.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.48, 126.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 475.736 CPU sec, 88.185 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 515954, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 386, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (816.03, 831.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (495, 689, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (970.76, 672.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 478.361 CPU sec, 94.243 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515898, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 411, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (918.05, 1045.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1481, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (1500.86, 727.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 483.108 CPU sec, 92.663 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515828, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 345, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1284)
[0000][PE] mean and std.dev: (456.00, 314.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.08, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1507, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (1319.12, 809.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 479.888 CPU sec, 94.401 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515961, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 370, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 953)
[0000][PE] mean and std.dev: (339.75, 145.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1433, 2678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5960)
[0000][PE] mean and std.dev: (1790.29, 1294.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 471.202 CPU sec, 85.490 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515850, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 389, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2455)
[0000][PE] mean and std.dev: (476.92, 471.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.02, 127.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 484.183 CPU sec, 110.631 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516333, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 985, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (889.71, 853.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 480.815 CPU sec, 92.232 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515818, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 355, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2376)
[0000][PE] mean and std.dev: (417.17, 334.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.68, 126.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 477.336 CPU sec, 88.695 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515964, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 322, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1968)
[0000][PE] mean and std.dev: (437.21, 443.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 2254, 2974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7646)
[0000][PE] mean and std.dev: (1976.60, 1424.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 478.851 CPU sec, 79.778 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515886, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 349, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1772)
[0000][PE] mean and std.dev: (418.64, 333.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.62, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1146, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3754)
[0000][PE] mean and std.dev: (1247.92, 826.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 475.211 CPU sec, 94.704 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515813, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 360, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1402)
[0000][PE] mean and std.dev: (383.35, 222.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.42, 126.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 475.955 CPU sec, 85.626 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515911, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 352, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2184)
[0000][PE] mean and std.dev: (426.12, 353.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 473.734 CPU sec, 75.881 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515476, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 396, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1441)
[0000][PE] mean and std.dev: (490.21, 345.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 482.016 CPU sec, 79.172 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516343, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 368, 468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1104)
[0000][PE] mean and std.dev: (308.30, 199.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 471.593 CPU sec, 73.138 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515830, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 421, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3344)
[0000][PE] mean and std.dev: (762.20, 761.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1430, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4193)
[0000][PE] mean and std.dev: (1557.50, 882.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 478.218 CPU sec, 84.745 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515795, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 298, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1145)
[0000][PE] mean and std.dev: (261.75, 167.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.67, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 1429, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (1185.50, 436.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 472.986 CPU sec, 90.188 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515790, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 374, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2171)
[0000][PE] mean and std.dev: (531.32, 391.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1584, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6253)
[0000][PE] mean and std.dev: (1703.17, 1330.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 475.350 CPU sec, 74.993 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515693, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 331, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1308)
[0000][PE] mean and std.dev: (408.68, 297.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1607, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (1207.50, 501.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 470.516 CPU sec, 77.039 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515713, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 370, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1725)
[0000][PE] mean and std.dev: (523.60, 456.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 844, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (1191.80, 766.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 484.226 CPU sec, 102.398 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515707, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 338, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1052)
[0000][PE] mean and std.dev: (276.76, 173.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.54, 127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1298, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (1232.78, 560.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 473.055 CPU sec, 77.504 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515821, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 387, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3384)
[0000][PE] mean and std.dev: (747.71, 701.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.50, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1155, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2361)
[0000][PE] mean and std.dev: (1108.70, 461.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 471.709 CPU sec, 80.416 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515578, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 301, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1123)
[0000][PE] mean and std.dev: (293.75, 199.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1273, 1931, 2774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5776)
[0000][PE] mean and std.dev: (2080.80, 1089.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 474.102 CPU sec, 79.073 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515296, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 490, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1175)
[0000][PE] mean and std.dev: (466.75, 223.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.51, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1574, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (1379.15, 697.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 476.513 CPU sec, 81.440 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516163, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 348, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (752.25, 769.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.68, 126.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1581, 5092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13424)
[0000][PE] mean and std.dev: (2848.73, 2738.12)
[0000][PE] low and high boundaries for proper pairs: (1, 17590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 484.211 CPU sec, 83.798 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206108
	[0000][ M::kt_pipeline] read 1206108 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515672, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 366, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1088)
[0000][PE] mean and std.dev: (344.77, 183.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.81, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 801, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6064)
[0000][PE] mean and std.dev: (1407.00, 1024.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 481.892 CPU sec, 79.811 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515430, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 438, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (678.88, 702.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1421, 3910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9786)
[0000][PE] mean and std.dev: (2021.55, 2079.25)
[0000][PE] low and high boundaries for proper pairs: (1, 12724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206108 reads in 472.586 CPU sec, 82.131 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515785, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 429, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3566)
[0000][PE] mean and std.dev: (812.36, 827.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.54, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (314, 1360, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6335)
[0000][PE] mean and std.dev: (1474.90, 1045.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 477.508 CPU sec, 88.223 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515652, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 361, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (561.17, 540.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 469.666 CPU sec, 72.222 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516209, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 342, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (60, 625)
[0000][PE] mean and std.dev: (281.14, 99.45)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.49, 126.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1552, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6828)
[0000][PE] mean and std.dev: (1965.53, 1494.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 475.704 CPU sec, 81.011 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515683, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 366, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (714.04, 728.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 932, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1212.38, 839.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 490.039 CPU sec, 87.747 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515940, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 358, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (536.69, 509.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.60, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (539, 888, 5436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15230)
[0000][PE] mean and std.dev: (2355.00, 2354.95)
[0000][PE] low and high boundaries for proper pairs: (1, 20127)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1249, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4706)
[0000][PE] mean and std.dev: (1225.09, 693.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 478.885 CPU sec, 81.678 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515926, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 426, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (659.76, 582.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1281, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7090)
[0000][PE] mean and std.dev: (1165.64, 703.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 478.958 CPU sec, 87.071 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515659, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 515, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2538)
[0000][PE] mean and std.dev: (622.67, 572.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.58, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 477.292 CPU sec, 75.952 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515571, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 384, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1519)
[0000][PE] mean and std.dev: (425.14, 348.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.44, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 955, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (1018.57, 691.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 476.869 CPU sec, 76.162 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515921, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 382, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2141)
[0000][PE] mean and std.dev: (518.07, 335.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.57, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 1067, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1013.30, 403.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 478.047 CPU sec, 82.162 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516140, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 393, 755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1569)
[0000][PE] mean and std.dev: (489.14, 268.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 1619, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8356)
[0000][PE] mean and std.dev: (2409.00, 2820.26)
[0000][PE] low and high boundaries for proper pairs: (1, 13690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 479.829 CPU sec, 65.417 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515714, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 321, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1093)
[0000][PE] mean and std.dev: (300.27, 202.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 486.425 CPU sec, 80.552 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515572, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 369, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (580.35, 616.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (561, 1238, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1363.85, 997.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 479.050 CPU sec, 74.992 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515138, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 345, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1810)
[0000][PE] mean and std.dev: (435.25, 310.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1629, 1771, 2732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (1689.00, 1047.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 475.934 CPU sec, 66.138 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515735, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 396, 806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1870)
[0000][PE] mean and std.dev: (474.36, 383.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.03, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 472.510 CPU sec, 72.152 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515708, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 385, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3968)
[0000][PE] mean and std.dev: (739.00, 794.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 1635, 3398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7602)
[0000][PE] mean and std.dev: (1943.18, 1455.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 474.952 CPU sec, 75.487 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516295, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 368, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (529.21, 459.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.15, 126.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1678, 3264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7976)
[0000][PE] mean and std.dev: (2304.92, 2160.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 471.111 CPU sec, 66.377 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516103, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 384, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (671.55, 634.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 1153, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (1105.29, 664.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 481.717 CPU sec, 73.078 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516220, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 333, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 804)
[0000][PE] mean and std.dev: (304.96, 131.57)
[0000][PE] low and high boundaries for proper pairs: (1, 983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 473.555 CPU sec, 64.311 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515979, 12, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 342, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1722)
[0000][PE] mean and std.dev: (342.67, 283.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (130, 1562, 3355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9805)
[0000][PE] mean and std.dev: (1719.67, 1531.34)
[0000][PE] low and high boundaries for proper pairs: (1, 13030)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 472.295 CPU sec, 70.782 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516329, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 338, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1484)
[0000][PE] mean and std.dev: (327.40, 256.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1147, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (1055.20, 503.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 473.407 CPU sec, 82.747 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515909, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 414, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3354)
[0000][PE] mean and std.dev: (598.11, 567.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.26, 126.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 1003, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3747)
[0000][PE] mean and std.dev: (1064.00, 810.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 469.427 CPU sec, 64.862 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515421, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 792, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5530)
[0000][PE] mean and std.dev: (1123.30, 1129.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1089, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2145)
[0000][PE] mean and std.dev: (1021.67, 280.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 476.020 CPU sec, 71.717 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515633, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 316, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1677)
[0000][PE] mean and std.dev: (424.77, 308.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1013, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2899)
[0000][PE] mean and std.dev: (1170.75, 709.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 477.010 CPU sec, 83.113 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515462, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 401, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (717.10, 911.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.54, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1496, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2857)
[0000][PE] mean and std.dev: (1356.56, 630.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 474.849 CPU sec, 81.706 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515774, 12, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 446, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (713.91, 597.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.37, 126.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (363, 727, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5466)
[0000][PE] mean and std.dev: (1237.58, 1236.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7167)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 480.327 CPU sec, 73.479 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515769, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 433, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2121)
[0000][PE] mean and std.dev: (524.85, 375.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1818, 3008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6828)
[0000][PE] mean and std.dev: (1865.23, 979.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 474.633 CPU sec, 73.864 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515843, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 439, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2056)
[0000][PE] mean and std.dev: (437.36, 319.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.26, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1764, 4000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9490)
[0000][PE] mean and std.dev: (2261.64, 1775.42)
[0000][PE] low and high boundaries for proper pairs: (1, 12235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 472.823 CPU sec, 64.934 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515942, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 458, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (623.03, 526.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (560, 1068, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2633)
[0000][PE] mean and std.dev: (977.70, 467.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 473.197 CPU sec, 78.376 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515630, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 428, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (756.36, 738.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.01, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1425, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5254)
[0000][PE] mean and std.dev: (1411.67, 763.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 480.472 CPU sec, 78.616 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516528, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 395, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1357)
[0000][PE] mean and std.dev: (393.95, 213.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.33, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (563, 1097, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5297)
[0000][PE] mean and std.dev: (1242.77, 821.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 472.986 CPU sec, 73.692 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515697, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 480, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (661.50, 630.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1155, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (1309.71, 676.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 476.093 CPU sec, 73.910 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515378, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 411, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (513.61, 461.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.55, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 481.476 CPU sec, 77.092 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516117, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 375, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2191)
[0000][PE] mean and std.dev: (491.80, 438.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1743, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5606)
[0000][PE] mean and std.dev: (1691.00, 958.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 473.771 CPU sec, 74.093 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516269, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 460, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (716.70, 663.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1009, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (977.09, 480.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 475.646 CPU sec, 71.161 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516087, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 462, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (731.86, 732.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.46, 126.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 470.519 CPU sec, 79.930 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515690, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 374, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1353)
[0000][PE] mean and std.dev: (358.18, 158.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 2235, 2893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7315)
[0000][PE] mean and std.dev: (2113.60, 1577.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 476.450 CPU sec, 78.179 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515815, 10, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 378, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1583)
[0000][PE] mean and std.dev: (404.73, 271.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (176, 841, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8786)
[0000][PE] mean and std.dev: (1455.56, 2226.72)
[0000][PE] low and high boundaries for proper pairs: (1, 11656)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 481.169 CPU sec, 73.801 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515490, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 280, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 854)
[0000][PE] mean and std.dev: (252.06, 168.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1305, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1552.60, 848.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 474.954 CPU sec, 70.442 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516264, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 439, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (609.38, 393.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 126.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 481.903 CPU sec, 79.635 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516059, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 334, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (527.06, 525.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1359, 3150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7042)
[0000][PE] mean and std.dev: (1898.33, 1476.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 480.952 CPU sec, 82.559 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515858, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 420, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (714.68, 691.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1062, 2791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6597)
[0000][PE] mean and std.dev: (1794.25, 1684.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 470.802 CPU sec, 57.207 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516032, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 372, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1102)
[0000][PE] mean and std.dev: (317.48, 182.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 127.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 468.946 CPU sec, 65.079 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516018, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 732, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (635.50, 524.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1880, 3144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7054)
[0000][PE] mean and std.dev: (2116.00, 1410.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 471.779 CPU sec, 61.715 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515992, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 369, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3364)
[0000][PE] mean and std.dev: (524.87, 472.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.49, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1289, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5226)
[0000][PE] mean and std.dev: (1647.12, 1045.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 473.817 CPU sec, 71.356 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206048
	[0000][ M::kt_pipeline] read 1206048 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516084, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 318, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (741.82, 860.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.40, 127.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1540, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (1504.42, 477.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 466.304 CPU sec, 66.475 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515601, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 400, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (807.41, 753.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.56, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1554, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (1508.29, 867.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206048 reads in 482.098 CPU sec, 71.487 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516344, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 368, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1336)
[0000][PE] mean and std.dev: (400.32, 308.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.55, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1101, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6218)
[0000][PE] mean and std.dev: (1715.25, 1733.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 473.877 CPU sec, 75.792 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515457, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 324, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1772)
[0000][PE] mean and std.dev: (467.59, 386.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 477.013 CPU sec, 66.224 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206060
	[0000][ M::kt_pipeline] read 1206060 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515893, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 534, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (791.33, 691.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 467.453 CPU sec, 63.504 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515873, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 348, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (451.44, 461.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.02, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1455, 2814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6858)
[0000][PE] mean and std.dev: (1772.23, 1374.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206060 reads in 472.922 CPU sec, 70.392 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515214, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 551, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (772.24, 696.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.71, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 993, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 2143)
[0000][PE] mean and std.dev: (1019.50, 360.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 473.384 CPU sec, 75.041 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515713, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 454, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (769.32, 724.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1134, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2446)
[0000][PE] mean and std.dev: (1072.50, 477.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 479.043 CPU sec, 70.393 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 515564, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 378, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (700.03, 650.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 476.307 CPU sec, 70.892 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516418, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 357, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2324)
[0000][PE] mean and std.dev: (495.37, 436.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.41, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 473.120 CPU sec, 100.002 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515824, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 481, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (757.85, 658.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.39, 126.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1211, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3643)
[0000][PE] mean and std.dev: (1217.17, 621.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 476.091 CPU sec, 74.750 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516175, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 410, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2014)
[0000][PE] mean and std.dev: (540.68, 429.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 471.227 CPU sec, 76.252 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515574, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 430, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1978)
[0000][PE] mean and std.dev: (540.96, 465.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.42, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1115, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (1261.23, 557.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 475.325 CPU sec, 69.583 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515964, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 375, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1167)
[0000][PE] mean and std.dev: (358.96, 257.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1194, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2617)
[0000][PE] mean and std.dev: (1108.50, 596.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 474.770 CPU sec, 83.760 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515949, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 339, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (673.71, 815.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (584, 1098, 3092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8108)
[0000][PE] mean and std.dev: (1223.27, 983.94)
[0000][PE] low and high boundaries for proper pairs: (1, 10616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 474.757 CPU sec, 68.956 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515609, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 393, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2300)
[0000][PE] mean and std.dev: (434.25, 281.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1726, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1638.56, 761.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 476.211 CPU sec, 77.242 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516322, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 344, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1560)
[0000][PE] mean and std.dev: (354.43, 254.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 473.826 CPU sec, 77.431 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515731, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 387, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (649.19, 771.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 1122, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (1191.00, 923.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 472.292 CPU sec, 62.231 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516144, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 425, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (579.37, 555.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 127.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1264, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (1221.90, 846.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 472.477 CPU sec, 74.519 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516216, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 387, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1926)
[0000][PE] mean and std.dev: (517.06, 349.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.49, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1135, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (1109.45, 577.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 472.585 CPU sec, 83.470 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515302, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 417, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (877.82, 926.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 893, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5850)
[0000][PE] mean and std.dev: (997.50, 778.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 479.127 CPU sec, 90.726 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 515857, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 356, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1146)
[0000][PE] mean and std.dev: (333.71, 206.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 958, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (1121.80, 714.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 474.798 CPU sec, 78.545 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516114, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 244, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1759)
[0000][PE] mean and std.dev: (352.30, 347.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.78, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1351, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (1347.06, 512.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 471.046 CPU sec, 72.426 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516008, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 343, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1556)
[0000][PE] mean and std.dev: (319.21, 235.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 474.086 CPU sec, 68.469 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516173, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 536, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (661.29, 527.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.31, 126.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (197, 2717, 3718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10760)
[0000][PE] mean and std.dev: (2023.20, 1751.48)
[0000][PE] low and high boundaries for proper pairs: (1, 14281)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 878, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2245)
[0000][PE] mean and std.dev: (799.64, 381.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 471.129 CPU sec, 59.702 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515893, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 336, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1966)
[0000][PE] mean and std.dev: (527.03, 465.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.36, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 469.113 CPU sec, 63.026 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515944, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 327, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 965)
[0000][PE] mean and std.dev: (337.57, 181.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.51, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1466, 3806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8994)
[0000][PE] mean and std.dev: (2490.92, 2543.28)
[0000][PE] low and high boundaries for proper pairs: (1, 12664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 472.702 CPU sec, 72.768 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516179, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 376, 463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 863)
[0000][PE] mean and std.dev: (314.04, 129.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1566, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5363)
[0000][PE] mean and std.dev: (1829.09, 1164.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 472.906 CPU sec, 67.505 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516176, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 387, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (676.21, 702.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1268, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (1422.09, 764.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 478.123 CPU sec, 72.194 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515625, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 502, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2238)
[0000][PE] mean and std.dev: (575.68, 435.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1705, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4952)
[0000][PE] mean and std.dev: (1783.16, 1183.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 471.298 CPU sec, 62.380 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515591, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 285, 376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 870)
[0000][PE] mean and std.dev: (257.10, 137.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1350, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5053)
[0000][PE] mean and std.dev: (1657.25, 1156.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 475.438 CPU sec, 79.293 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515850, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 645, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5189)
[0000][PE] mean and std.dev: (1168.58, 1095.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1642, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (1635.27, 988.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 476.353 CPU sec, 64.928 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515758, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 381, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1631)
[0000][PE] mean and std.dev: (421.48, 302.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1486, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (1672.07, 949.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 469.421 CPU sec, 55.913 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515794, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 435, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (769.61, 692.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 483.923 CPU sec, 82.918 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515813, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 320, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 920)
[0000][PE] mean and std.dev: (282.73, 174.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.51, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 475.699 CPU sec, 63.861 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516114, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 457, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4361)
[0000][PE] mean and std.dev: (879.67, 795.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (482, 727, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (881.55, 471.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 478.909 CPU sec, 69.425 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516220, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 368, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2014)
[0000][PE] mean and std.dev: (429.12, 289.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1610, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (1523.44, 952.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 469.556 CPU sec, 72.013 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515764, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 388, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (587.57, 540.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.84, 126.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1471, 1952, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (1702.38, 509.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 467.271 CPU sec, 64.912 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515888, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 426, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (669.58, 679.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.60, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 471.122 CPU sec, 71.435 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515460, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 347, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (19, 704)
[0000][PE] mean and std.dev: (299.06, 135.73)
[0000][PE] low and high boundaries for proper pairs: (1, 842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.54, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (594, 1119, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3750)
[0000][PE] mean and std.dev: (1243.14, 769.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 484.684 CPU sec, 81.437 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515202, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 341, 477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 931)
[0000][PE] mean and std.dev: (298.91, 128.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 479.622 CPU sec, 71.919 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206060
	[0000][ M::kt_pipeline] read 1206060 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515940, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 326, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (578.13, 523.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 468.775 CPU sec, 60.470 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516014, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 249, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 825)
[0000][PE] mean and std.dev: (260.70, 169.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.43, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1468, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3260)
[0000][PE] mean and std.dev: (1272.89, 481.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206060 reads in 472.858 CPU sec, 83.254 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515513, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 382, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (469.81, 353.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.54, 127.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1766, 2758, 6666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16466)
[0000][PE] mean and std.dev: (3644.60, 2899.91)
[0000][PE] low and high boundaries for proper pairs: (1, 21366)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1818, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5364)
[0000][PE] mean and std.dev: (1828.11, 991.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 480.815 CPU sec, 79.650 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515851, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 456, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5527)
[0000][PE] mean and std.dev: (1191.43, 1368.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1532, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5127)
[0000][PE] mean and std.dev: (1692.92, 1198.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 475.156 CPU sec, 71.240 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515779, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 365, 633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1493)
[0000][PE] mean and std.dev: (426.53, 335.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 481.858 CPU sec, 74.381 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515817, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 506, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1968)
[0000][PE] mean and std.dev: (541.13, 425.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.44, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1284, 1803, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4575)
[0000][PE] mean and std.dev: (1655.08, 773.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 474.219 CPU sec, 87.900 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206048
	[0000][ M::kt_pipeline] read 1206048 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515602, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 463, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1775)
[0000][PE] mean and std.dev: (475.29, 319.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 472.233 CPU sec, 64.799 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206090
	[0000][ M::kt_pipeline] read 1206090 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515933, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 386, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2709)
[0000][PE] mean and std.dev: (605.96, 580.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.60, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206048 reads in 471.807 CPU sec, 69.348 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516209, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 744, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (797.50, 599.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1454, 1523, 3787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8453)
[0000][PE] mean and std.dev: (2573.09, 2027.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206090 reads in 483.925 CPU sec, 82.616 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515916, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 394, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1318)
[0000][PE] mean and std.dev: (453.28, 283.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.58, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1430, 2824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6116)
[0000][PE] mean and std.dev: (1824.09, 1334.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 476.022 CPU sec, 74.131 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515819, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 311, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (549.96, 642.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (493, 1046, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (1029.06, 611.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 479.156 CPU sec, 85.219 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515816, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 483, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (808.92, 639.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.35, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 482.604 CPU sec, 93.626 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515074, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 542, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2363)
[0000][PE] mean and std.dev: (768.62, 665.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.01, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 477.396 CPU sec, 83.000 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516032, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 892, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2923)
[0000][PE] mean and std.dev: (789.55, 610.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1526, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (1582.93, 683.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 478.571 CPU sec, 77.237 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515886, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 450, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (949.48, 1072.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 478.528 CPU sec, 64.010 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515678, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 369, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1786)
[0000][PE] mean and std.dev: (529.73, 410.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1527, 2395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5039)
[0000][PE] mean and std.dev: (1837.55, 1186.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 478.961 CPU sec, 83.658 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515743, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 347, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2394)
[0000][PE] mean and std.dev: (567.92, 525.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.54, 126.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (668, 1213, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1370.20, 1062.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 476.613 CPU sec, 77.205 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515971, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 452, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3022)
[0000][PE] mean and std.dev: (666.22, 571.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 482.475 CPU sec, 84.140 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515887, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 387, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1201)
[0000][PE] mean and std.dev: (394.10, 228.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1142, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (1204.43, 581.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 476.229 CPU sec, 80.786 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515877, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 362, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (632.82, 663.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 476.344 CPU sec, 70.496 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516058, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 322, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1173)
[0000][PE] mean and std.dev: (341.61, 247.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.03, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 468.650 CPU sec, 57.282 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515918, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 397, 774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1678)
[0000][PE] mean and std.dev: (545.41, 408.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1166, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (46, 2426)
[0000][PE] mean and std.dev: (1057.64, 228.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 479.090 CPU sec, 69.483 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516106, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 336, 477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 961)
[0000][PE] mean and std.dev: (318.64, 169.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1820, 3135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7295)
[0000][PE] mean and std.dev: (2048.00, 1641.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 470.031 CPU sec, 70.973 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515480, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 343, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 944)
[0000][PE] mean and std.dev: (301.04, 149.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.28, 126.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (517, 1253, 3192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8542)
[0000][PE] mean and std.dev: (2056.40, 1901.40)
[0000][PE] low and high boundaries for proper pairs: (1, 11217)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 1287, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6382)
[0000][PE] mean and std.dev: (1255.92, 971.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 475.468 CPU sec, 75.700 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516167, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 401, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4518)
[0000][PE] mean and std.dev: (831.05, 745.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1859, 3688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9558)
[0000][PE] mean and std.dev: (2379.46, 1994.16)
[0000][PE] low and high boundaries for proper pairs: (1, 12493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 469.569 CPU sec, 72.649 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516039, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 489, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2121)
[0000][PE] mean and std.dev: (563.10, 406.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 468.081 CPU sec, 59.953 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515732, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 398, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (561.60, 525.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1901, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7458)
[0000][PE] mean and std.dev: (1696.08, 1120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 482.134 CPU sec, 67.468 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515842, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 349, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1440)
[0000][PE] mean and std.dev: (400.12, 303.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 474.933 CPU sec, 86.983 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515517, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 382, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2083)
[0000][PE] mean and std.dev: (496.80, 488.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.46, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1339, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3141)
[0000][PE] mean and std.dev: (1335.91, 601.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 476.898 CPU sec, 80.558 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515755, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 369, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (614.03, 566.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 126.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 477.278 CPU sec, 77.970 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515697, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 356, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1221)
[0000][PE] mean and std.dev: (334.00, 186.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1316, 2621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (1671.83, 966.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 475.051 CPU sec, 93.214 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516182, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 422, 2763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7895)
[0000][PE] mean and std.dev: (1497.29, 2067.69)
[0000][PE] low and high boundaries for proper pairs: (1, 10461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.40, 126.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1477, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5687)
[0000][PE] mean and std.dev: (1580.07, 1133.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 471.515 CPU sec, 68.611 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515570, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 313, 516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1238)
[0000][PE] mean and std.dev: (276.47, 193.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1366, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5300)
[0000][PE] mean and std.dev: (1557.60, 1283.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 473.562 CPU sec, 77.353 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516081, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 419, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (687.18, 680.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 478.727 CPU sec, 69.499 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516358, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 410, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (623.25, 701.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1159, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2287)
[0000][PE] mean and std.dev: (1010.13, 373.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 475.763 CPU sec, 69.662 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515867, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 366, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2899)
[0000][PE] mean and std.dev: (593.35, 551.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 479.636 CPU sec, 68.908 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516097, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 357, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2379)
[0000][PE] mean and std.dev: (502.26, 374.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.32, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1137, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2369)
[0000][PE] mean and std.dev: (984.77, 463.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 475.581 CPU sec, 59.309 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 515870, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 394, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (716.89, 812.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.68, 126.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1391, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (41, 2686)
[0000][PE] mean and std.dev: (1222.20, 452.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 471.813 CPU sec, 66.242 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515905, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 330, 475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 917)
[0000][PE] mean and std.dev: (311.64, 167.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 472.248 CPU sec, 69.923 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516055, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 585, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (594.10, 483.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 466.928 CPU sec, 56.941 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515813, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 392, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3151)
[0000][PE] mean and std.dev: (727.00, 645.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.51, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1498, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (331, 2611)
[0000][PE] mean and std.dev: (1406.00, 255.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 472.904 CPU sec, 69.322 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516251, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 429, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2259)
[0000][PE] mean and std.dev: (598.00, 549.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.59, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1098, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5812)
[0000][PE] mean and std.dev: (1479.62, 763.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 472.755 CPU sec, 82.532 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515557, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 530, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (742.21, 560.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1306, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4436)
[0000][PE] mean and std.dev: (1519.85, 1035.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 476.988 CPU sec, 81.940 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515745, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 516, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (813.56, 737.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (446, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 938)
[0000][PE] mean and std.dev: (531.19, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1102)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 474.285 CPU sec, 66.380 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515854, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 535, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2610)
[0000][PE] mean and std.dev: (604.10, 439.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 479.960 CPU sec, 75.137 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515662, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 382, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2399)
[0000][PE] mean and std.dev: (497.19, 445.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 473.906 CPU sec, 62.552 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515636, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 347, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1109)
[0000][PE] mean and std.dev: (337.12, 216.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1509, 2142, 3093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6261)
[0000][PE] mean and std.dev: (2085.10, 956.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 469.275 CPU sec, 66.879 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516099, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 321, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 661)
[0000][PE] mean and std.dev: (289.17, 88.08)
[0000][PE] low and high boundaries for proper pairs: (1, 794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 473.112 CPU sec, 66.765 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515525, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 415, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (753.19, 822.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1366, 2785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6681)
[0000][PE] mean and std.dev: (1777.65, 1140.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 476.651 CPU sec, 91.188 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515789, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 331, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1342)
[0000][PE] mean and std.dev: (313.62, 246.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.52, 126.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 473.505 CPU sec, 78.601 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515957, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 391, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (658.17, 655.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1797, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5620)
[0000][PE] mean and std.dev: (1719.87, 1265.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 477.685 CPU sec, 72.207 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515347, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 394, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (562.44, 577.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.40, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1277, 1589, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (225, 2855)
[0000][PE] mean and std.dev: (1531.64, 384.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 476.809 CPU sec, 67.212 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516002, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 328, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 737)
[0000][PE] mean and std.dev: (299.24, 102.33)
[0000][PE] low and high boundaries for proper pairs: (1, 897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.36, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 475.273 CPU sec, 83.558 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515949, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 359, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1711)
[0000][PE] mean and std.dev: (426.35, 387.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (365, 1065, 4205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11885)
[0000][PE] mean and std.dev: (2248.70, 2414.51)
[0000][PE] low and high boundaries for proper pairs: (1, 15725)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 475.082 CPU sec, 74.265 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516024, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 413, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (703.33, 669.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1335, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (1638.80, 897.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 471.741 CPU sec, 69.904 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516250, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 364, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1515)
[0000][PE] mean and std.dev: (399.10, 258.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.05, 127.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1882, 3481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8221)
[0000][PE] mean and std.dev: (2190.56, 1680.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 473.313 CPU sec, 83.587 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516021, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 471, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (813.22, 836.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1194, 2870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6946)
[0000][PE] mean and std.dev: (1563.82, 1207.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 476.767 CPU sec, 76.940 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516066, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 362, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1018)
[0000][PE] mean and std.dev: (287.14, 175.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 479.941 CPU sec, 71.816 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206060
	[0000][ M::kt_pipeline] read 1206060 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515622, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 371, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2022)
[0000][PE] mean and std.dev: (446.22, 364.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 472.540 CPU sec, 71.423 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515450, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 236, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1426)
[0000][PE] mean and std.dev: (357.00, 311.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1922, 4465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11309)
[0000][PE] mean and std.dev: (2653.06, 2317.39)
[0000][PE] low and high boundaries for proper pairs: (1, 14731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206060 reads in 475.505 CPU sec, 66.627 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515732, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 418, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (990.05, 1076.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.01, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1557, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5436)
[0000][PE] mean and std.dev: (1472.70, 863.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 472.859 CPU sec, 63.224 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515896, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 394, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (683.28, 650.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.46, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1081, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3151)
[0000][PE] mean and std.dev: (1047.87, 690.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 475.504 CPU sec, 78.715 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516116, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 314, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1077)
[0000][PE] mean and std.dev: (324.57, 238.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.57, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 471.725 CPU sec, 69.176 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515966, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 353, 772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1810)
[0000][PE] mean and std.dev: (432.68, 387.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 470.197 CPU sec, 85.769 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516111, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 345, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1023)
[0000][PE] mean and std.dev: (325.31, 137.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1843, 3191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8111)
[0000][PE] mean and std.dev: (1931.09, 1375.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 476.396 CPU sec, 75.254 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515914, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 338, 759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1811)
[0000][PE] mean and std.dev: (450.21, 320.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.06, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1465, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1293.60, 724.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 472.597 CPU sec, 74.643 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516039, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 412, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2893)
[0000][PE] mean and std.dev: (623.00, 506.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.01, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1379, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5400)
[0000][PE] mean and std.dev: (1656.50, 1209.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 472.990 CPU sec, 88.766 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515854, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 430, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (744.71, 642.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.38, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 478.807 CPU sec, 77.114 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516063, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 375, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2396)
[0000][PE] mean and std.dev: (536.78, 431.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 918, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6525)
[0000][PE] mean and std.dev: (1399.27, 1122.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 472.736 CPU sec, 65.481 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515914, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 415, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2406)
[0000][PE] mean and std.dev: (524.69, 448.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (612, 1832, 3088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8040)
[0000][PE] mean and std.dev: (2384.00, 2181.21)
[0000][PE] low and high boundaries for proper pairs: (1, 11109)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1525, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5271)
[0000][PE] mean and std.dev: (1376.73, 1061.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 481.342 CPU sec, 71.153 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516057, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 660, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (815.20, 713.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1297, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (1445.08, 659.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 473.633 CPU sec, 79.794 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515558, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 403, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1883)
[0000][PE] mean and std.dev: (564.62, 422.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1226, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1518.94, 954.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 482.070 CPU sec, 70.993 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515751, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 421, 718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1536)
[0000][PE] mean and std.dev: (456.75, 299.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.31, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 470.825 CPU sec, 72.719 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515829, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 380, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2720)
[0000][PE] mean and std.dev: (552.94, 511.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1511, 1819, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (1856.27, 992.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 471.224 CPU sec, 61.433 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515908, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 341, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 836)
[0000][PE] mean and std.dev: (272.36, 142.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.62, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1276, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (1568.83, 876.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 470.680 CPU sec, 43.118 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515677, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 298, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1143)
[0000][PE] mean and std.dev: (320.65, 262.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.06, 127.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 1271, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (1152.91, 620.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 473.767 CPU sec, 76.073 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515901, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 385, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2576)
[0000][PE] mean and std.dev: (479.23, 408.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.56, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1739, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1821.31, 1106.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 471.966 CPU sec, 69.962 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 515661, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 380, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1593)
[0000][PE] mean and std.dev: (441.88, 356.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1268, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (162, 2327)
[0000][PE] mean and std.dev: (1145.09, 494.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 475.658 CPU sec, 65.673 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515582, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 399, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1091)
[0000][PE] mean and std.dev: (378.30, 248.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (630, 1341, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3078)
[0000][PE] mean and std.dev: (1076.38, 509.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 474.255 CPU sec, 62.839 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515281, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 248, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1069)
[0000][PE] mean and std.dev: (226.00, 147.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.66, 126.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 1465, 3773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10571)
[0000][PE] mean and std.dev: (1908.60, 1575.93)
[0000][PE] low and high boundaries for proper pairs: (1, 13970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 470.874 CPU sec, 60.957 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515845, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 226, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1191)
[0000][PE] mean and std.dev: (255.53, 178.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1305, 2119, 2999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6387)
[0000][PE] mean and std.dev: (2090.50, 1018.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 476.255 CPU sec, 61.669 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515845, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 364, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1335)
[0000][PE] mean and std.dev: (340.85, 227.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.40, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (213, 614, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3066)
[0000][PE] mean and std.dev: (884.80, 816.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4151)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 475.100 CPU sec, 58.999 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516007, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 337, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 808)
[0000][PE] mean and std.dev: (335.29, 132.18)
[0000][PE] low and high boundaries for proper pairs: (1, 985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.69, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (545, 1158, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (984.58, 558.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 469.821 CPU sec, 62.010 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515773, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 368, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1862)
[0000][PE] mean and std.dev: (441.08, 308.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1212, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (1197.64, 513.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 472.935 CPU sec, 65.375 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515747, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 311, 613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1347)
[0000][PE] mean and std.dev: (282.13, 131.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.27, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1300, 3215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7801)
[0000][PE] mean and std.dev: (1873.82, 1601.38)
[0000][PE] low and high boundaries for proper pairs: (1, 10094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 472.222 CPU sec, 65.974 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515977, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 511, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (744.91, 675.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.09, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 468.817 CPU sec, 63.928 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516341, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 304, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (596.50, 624.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1170, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (1136.08, 574.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 470.485 CPU sec, 72.184 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516164, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 365, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (610.05, 577.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1204, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (1110.54, 544.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 469.712 CPU sec, 66.295 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515297, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 376, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1986)
[0000][PE] mean and std.dev: (451.74, 358.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 127.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1202, 1446, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (1474.20, 581.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 474.684 CPU sec, 61.402 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516075, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 310, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 969)
[0000][PE] mean and std.dev: (256.26, 127.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.42, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1443, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (1262.92, 561.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 468.406 CPU sec, 67.195 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516195, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 265, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1075)
[0000][PE] mean and std.dev: (238.32, 119.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.45, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 469.529 CPU sec, 61.100 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515745, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 444, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (829.63, 818.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1567, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1654.18, 1056.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 474.521 CPU sec, 75.811 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516221, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 414, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2692)
[0000][PE] mean and std.dev: (525.58, 452.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.53, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1724, 3833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9055)
[0000][PE] mean and std.dev: (2416.94, 1665.71)
[0000][PE] low and high boundaries for proper pairs: (1, 11666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 464.144 CPU sec, 63.838 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515869, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 356, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1901)
[0000][PE] mean and std.dev: (388.04, 323.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.00, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (571, 1206, 5366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14956)
[0000][PE] mean and std.dev: (2560.10, 2441.88)
[0000][PE] low and high boundaries for proper pairs: (1, 19751)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1284, 2979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7019)
[0000][PE] mean and std.dev: (1687.92, 1018.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 481.394 CPU sec, 58.786 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516254, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 451, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2315)
[0000][PE] mean and std.dev: (456.30, 354.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.67, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1518, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (1333.69, 888.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 469.053 CPU sec, 67.229 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 515855, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 416, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2092)
[0000][PE] mean and std.dev: (549.22, 534.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1259, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (1410.08, 1136.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 471.067 CPU sec, 80.877 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516295, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 441, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4308)
[0000][PE] mean and std.dev: (769.04, 715.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.55, 127.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 1776, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5606)
[0000][PE] mean and std.dev: (1898.15, 961.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 469.268 CPU sec, 78.666 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515936, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 370, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1815)
[0000][PE] mean and std.dev: (463.65, 448.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1051, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2892)
[0000][PE] mean and std.dev: (1073.73, 402.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 473.734 CPU sec, 60.693 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515927, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 421, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1337)
[0000][PE] mean and std.dev: (420.04, 278.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.65, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1604, 2382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5172)
[0000][PE] mean and std.dev: (1522.75, 822.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 481.172 CPU sec, 68.275 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515513, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 398, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2927)
[0000][PE] mean and std.dev: (717.92, 768.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.38, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 477.847 CPU sec, 65.892 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515599, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 333, 692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1512)
[0000][PE] mean and std.dev: (327.93, 175.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 473.650 CPU sec, 61.995 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515829, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 376, 574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1224)
[0000][PE] mean and std.dev: (320.08, 143.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.49, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 482.999 CPU sec, 71.484 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515952, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 401, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1185)
[0000][PE] mean and std.dev: (381.29, 224.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1216, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6383)
[0000][PE] mean and std.dev: (1664.67, 1052.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 473.281 CPU sec, 55.809 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515592, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 362, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2529)
[0000][PE] mean and std.dev: (576.05, 503.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.42, 126.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1107, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (1139.17, 693.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 477.514 CPU sec, 68.670 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516292, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 405, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2030)
[0000][PE] mean and std.dev: (480.00, 381.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1281, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (1060.20, 594.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 467.970 CPU sec, 72.043 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516176, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 357, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1972)
[0000][PE] mean and std.dev: (446.35, 289.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 473.286 CPU sec, 63.748 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516104, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 472, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2449)
[0000][PE] mean and std.dev: (432.85, 288.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 472.072 CPU sec, 74.362 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515856, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 436, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (594.30, 518.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 474.692 CPU sec, 80.222 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516311, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 340, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1949)
[0000][PE] mean and std.dev: (516.42, 484.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.35, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 2358, 3466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8778)
[0000][PE] mean and std.dev: (1955.73, 1553.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 470.167 CPU sec, 78.553 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515775, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 388, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (637.42, 584.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 475.354 CPU sec, 78.015 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515941, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 453, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (785.42, 816.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 480.913 CPU sec, 77.227 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515772, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 394, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (607.59, 535.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 469.896 CPU sec, 60.208 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515618, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 403, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (962.28, 985.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.54, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 472.223 CPU sec, 88.371 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515538, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 461, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2145)
[0000][PE] mean and std.dev: (657.67, 520.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 471.919 CPU sec, 53.466 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516658, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 402, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1447)
[0000][PE] mean and std.dev: (442.55, 316.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 470.607 CPU sec, 70.565 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515934, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 356, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2317)
[0000][PE] mean and std.dev: (503.18, 393.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.24, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1222, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (1274.50, 459.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 470.950 CPU sec, 56.847 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515810, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 363, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1659)
[0000][PE] mean and std.dev: (504.64, 396.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.66, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1512, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (1458.40, 835.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 473.772 CPU sec, 63.697 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516028, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 382, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (638.76, 591.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.04, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 476.768 CPU sec, 73.790 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515904, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 357, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3548)
[0000][PE] mean and std.dev: (735.92, 866.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1565, 2772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6364)
[0000][PE] mean and std.dev: (1807.46, 1237.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 468.031 CPU sec, 47.117 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515691, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 330, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1130)
[0000][PE] mean and std.dev: (327.00, 209.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 472.253 CPU sec, 73.670 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515619, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 403, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1854)
[0000][PE] mean and std.dev: (476.57, 389.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 1168, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5267)
[0000][PE] mean and std.dev: (1317.85, 693.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 473.051 CPU sec, 63.365 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515422, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 443, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (741.23, 582.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 913, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4612)
[0000][PE] mean and std.dev: (1410.92, 1244.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 472.428 CPU sec, 61.821 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516219, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 337, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1248)
[0000][PE] mean and std.dev: (271.53, 183.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.46, 126.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1264, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4520)
[0000][PE] mean and std.dev: (1555.64, 1040.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 471.530 CPU sec, 68.242 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515704, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 418, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (794.67, 804.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 470.630 CPU sec, 58.195 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515776, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 374, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1847)
[0000][PE] mean and std.dev: (385.13, 257.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 2573, 4691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11787)
[0000][PE] mean and std.dev: (3122.45, 2469.09)
[0000][PE] low and high boundaries for proper pairs: (1, 15335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 473.019 CPU sec, 58.911 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515533, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 382, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1804)
[0000][PE] mean and std.dev: (524.50, 364.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.67, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1228, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3329)
[0000][PE] mean and std.dev: (1231.27, 788.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 475.429 CPU sec, 95.265 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515148, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 340, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1162)
[0000][PE] mean and std.dev: (291.57, 141.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.64, 126.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 471.287 CPU sec, 66.794 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 515649, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 345, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1550)
[0000][PE] mean and std.dev: (408.06, 332.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.37, 126.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 473.579 CPU sec, 67.202 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515793, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 422, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1383)
[0000][PE] mean and std.dev: (436.26, 236.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.52, 126.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 472.926 CPU sec, 88.458 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515600, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 375, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1045)
[0000][PE] mean and std.dev: (364.92, 179.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.54, 127.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 472.987 CPU sec, 65.264 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515639, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 733, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (796.42, 663.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1583, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5347)
[0000][PE] mean and std.dev: (1635.31, 816.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 477.081 CPU sec, 72.743 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516040, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 424, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2893)
[0000][PE] mean and std.dev: (694.33, 683.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1650, 2074, 3062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5886)
[0000][PE] mean and std.dev: (2189.28, 965.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 472.550 CPU sec, 69.186 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515891, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 348, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1053)
[0000][PE] mean and std.dev: (366.05, 152.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 468.212 CPU sec, 62.163 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515876, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 772, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4547)
[0000][PE] mean and std.dev: (1040.08, 978.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1267, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5678)
[0000][PE] mean and std.dev: (1504.86, 1235.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 471.245 CPU sec, 64.878 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515840, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 403, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1802)
[0000][PE] mean and std.dev: (370.46, 205.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1510, 4359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10877)
[0000][PE] mean and std.dev: (2607.55, 2653.05)
[0000][PE] low and high boundaries for proper pairs: (1, 14136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 469.321 CPU sec, 77.806 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516202, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 228, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2086)
[0000][PE] mean and std.dev: (397.50, 367.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1285, 2912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6746)
[0000][PE] mean and std.dev: (2040.36, 1635.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 471.486 CPU sec, 71.859 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516137, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 373, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (332.70, 202.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 1084, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1128.38, 828.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 479.272 CPU sec, 69.402 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515270, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 459, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (990.33, 1027.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.58, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 1213, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4117)
[0000][PE] mean and std.dev: (965.56, 465.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 472.406 CPU sec, 71.732 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515750, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 384, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1922)
[0000][PE] mean and std.dev: (556.92, 500.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.52, 126.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 476.296 CPU sec, 71.432 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515918, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 429, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 930)
[0000][PE] mean and std.dev: (367.12, 145.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.60, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 473.681 CPU sec, 60.496 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516469, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 661, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3344)
[0000][PE] mean and std.dev: (889.19, 844.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 472.049 CPU sec, 69.685 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516038, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 366, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (491.23, 350.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.40, 127.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 468.943 CPU sec, 55.357 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516042, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 442, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2064)
[0000][PE] mean and std.dev: (538.11, 467.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.52, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 965, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (1039.81, 598.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 475.554 CPU sec, 78.046 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515676, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 377, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1789)
[0000][PE] mean and std.dev: (484.46, 406.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1611, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (1448.54, 672.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 473.708 CPU sec, 70.474 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515384, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 325, 437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 933)
[0000][PE] mean and std.dev: (305.00, 134.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.59, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 716, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (1046.79, 905.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 475.477 CPU sec, 69.648 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515746, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 394, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (502.41, 441.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.02, 126.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1200, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (226, 2476)
[0000][PE] mean and std.dev: (1161.18, 483.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 477.640 CPU sec, 79.536 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515592, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 376, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2319)
[0000][PE] mean and std.dev: (566.96, 518.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.78, 126.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 765, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (922.90, 561.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 470.136 CPU sec, 76.371 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515900, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 477, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3297)
[0000][PE] mean and std.dev: (803.33, 716.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1801, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5990)
[0000][PE] mean and std.dev: (1428.00, 662.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 471.034 CPU sec, 68.370 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515637, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 293, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (774.55, 888.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.49, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1665, 1958, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (837, 2907)
[0000][PE] mean and std.dev: (1781.57, 302.94)
[0000][PE] low and high boundaries for proper pairs: (423, 3321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 483.307 CPU sec, 70.358 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206134
	[0000][ M::kt_pipeline] read 1206134 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515903, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 335, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1825)
[0000][PE] mean and std.dev: (302.84, 192.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.66, 126.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1258, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1469.13, 795.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 473.601 CPU sec, 77.080 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206124
	[0000][ M::kt_pipeline] read 1206124 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516263, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 358, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1192)
[0000][PE] mean and std.dev: (368.08, 245.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.00, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1015, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (1075.00, 571.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206134 reads in 475.139 CPU sec, 60.940 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515721, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 364, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1011)
[0000][PE] mean and std.dev: (389.93, 230.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1509, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5151)
[0000][PE] mean and std.dev: (1579.38, 719.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206124 reads in 473.802 CPU sec, 66.743 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516090, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 383, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2037)
[0000][PE] mean and std.dev: (519.09, 392.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 474.012 CPU sec, 60.544 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515949, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 412, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2197)
[0000][PE] mean and std.dev: (545.32, 496.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 472.295 CPU sec, 65.149 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515962, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 360, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1036)
[0000][PE] mean and std.dev: (303.54, 188.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1342, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (1270.50, 633.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 479.519 CPU sec, 66.870 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516386, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 300, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (406.00, 336.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 470.687 CPU sec, 75.524 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515448, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 409, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1973)
[0000][PE] mean and std.dev: (446.32, 306.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 480.899 CPU sec, 57.514 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516082, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 325, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1844)
[0000][PE] mean and std.dev: (400.00, 304.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 808, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2712)
[0000][PE] mean and std.dev: (865.60, 517.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 468.726 CPU sec, 62.644 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516177, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 486, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (802.15, 686.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 469.821 CPU sec, 61.953 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515459, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 433, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (689.00, 685.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1336, 2939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6457)
[0000][PE] mean and std.dev: (1586.25, 925.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 474.139 CPU sec, 59.537 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 515853, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 364, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1818)
[0000][PE] mean and std.dev: (410.83, 352.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1536, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1227.75, 493.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 474.740 CPU sec, 64.728 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515937, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 304, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2217)
[0000][PE] mean and std.dev: (487.86, 499.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1325, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1317.83, 779.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 475.267 CPU sec, 76.211 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516228, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 522, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (934.46, 1051.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.59, 127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 474.392 CPU sec, 63.051 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515326, 9, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 303, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2067)
[0000][PE] mean and std.dev: (463.27, 509.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.10, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 476.808 CPU sec, 75.126 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515878, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 314, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 787)
[0000][PE] mean and std.dev: (315.70, 150.18)
[0000][PE] low and high boundaries for proper pairs: (1, 970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.70, 126.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1363, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5201)
[0000][PE] mean and std.dev: (1867.81, 1280.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 471.276 CPU sec, 53.510 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515557, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 400, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (718.96, 651.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 471.118 CPU sec, 52.317 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515687, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 376, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1965)
[0000][PE] mean and std.dev: (467.30, 386.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 471.534 CPU sec, 58.318 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515774, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 382, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5402)
[0000][PE] mean and std.dev: (1221.05, 1356.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 469.420 CPU sec, 54.370 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515448, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 389, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (610.30, 625.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.51, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 478.727 CPU sec, 64.442 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516485, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 386, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2246)
[0000][PE] mean and std.dev: (580.81, 516.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1493, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (1615.80, 756.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 470.194 CPU sec, 56.311 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515757, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 428, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2593)
[0000][PE] mean and std.dev: (621.91, 603.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 470.100 CPU sec, 52.587 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516188, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 377, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2307)
[0000][PE] mean and std.dev: (598.70, 585.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 860, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1260.57, 1009.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 471.823 CPU sec, 60.158 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516218, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 440, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1604)
[0000][PE] mean and std.dev: (542.25, 358.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 474.326 CPU sec, 49.265 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515147, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 473, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (839.63, 811.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.98, 127.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 982, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1988)
[0000][PE] mean and std.dev: (846.58, 240.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 474.075 CPU sec, 57.523 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516015, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 363, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (491.77, 468.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1519, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (1310.83, 314.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 473.788 CPU sec, 61.522 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515584, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 372, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1864)
[0000][PE] mean and std.dev: (401.26, 364.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 470.591 CPU sec, 56.766 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515630, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 372, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1983)
[0000][PE] mean and std.dev: (471.24, 395.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 127.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 471.241 CPU sec, 65.631 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516076, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 377, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (794.76, 856.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.56, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1275, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4638)
[0000][PE] mean and std.dev: (1311.83, 890.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 471.153 CPU sec, 53.743 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515954, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (77, 313, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1109)
[0000][PE] mean and std.dev: (286.11, 283.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (537, 1438, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4989)
[0000][PE] mean and std.dev: (1292.83, 785.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 476.587 CPU sec, 60.998 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515999, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 457, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2397)
[0000][PE] mean and std.dev: (608.72, 430.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1278, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (1538.38, 733.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 472.726 CPU sec, 59.730 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515188, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 382, 704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1608)
[0000][PE] mean and std.dev: (412.43, 294.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 469.904 CPU sec, 66.651 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515941, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 366, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2178)
[0000][PE] mean and std.dev: (553.89, 548.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 471.323 CPU sec, 55.746 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515561, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 377, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1496)
[0000][PE] mean and std.dev: (448.00, 344.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1333, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4583)
[0000][PE] mean and std.dev: (1169.09, 509.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 476.463 CPU sec, 60.444 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516359, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 478, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (1129.73, 1143.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.46, 126.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 469.571 CPU sec, 68.366 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515800, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 524, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (631.81, 387.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1166, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (1002.42, 303.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 470.970 CPU sec, 48.656 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515954, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 793, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2189)
[0000][PE] mean and std.dev: (865.93, 484.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.55, 126.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (429, 1196, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5103)
[0000][PE] mean and std.dev: (1392.14, 1113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 472.163 CPU sec, 57.451 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515973, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 404, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2102)
[0000][PE] mean and std.dev: (585.32, 489.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.51, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 959, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4978)
[0000][PE] mean and std.dev: (1341.62, 1073.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 469.515 CPU sec, 55.914 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515990, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 410, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1764)
[0000][PE] mean and std.dev: (497.84, 396.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.00, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1152, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (1429.33, 790.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 472.850 CPU sec, 74.293 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515633, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 329, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (766.19, 892.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 471.802 CPU sec, 51.073 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515501, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 694, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2433)
[0000][PE] mean and std.dev: (668.65, 415.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 904, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (388, 1573)
[0000][PE] mean and std.dev: (991.40, 196.79)
[0000][PE] low and high boundaries for proper pairs: (151, 1810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 472.777 CPU sec, 53.825 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515526, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 322, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1078)
[0000][PE] mean and std.dev: (337.62, 228.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1378, 2554, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (2064.78, 815.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 470.966 CPU sec, 58.681 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515619, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 434, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2119)
[0000][PE] mean and std.dev: (394.33, 263.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.51, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 470.406 CPU sec, 54.502 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515648, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 365, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1635)
[0000][PE] mean and std.dev: (469.84, 362.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 470.434 CPU sec, 52.600 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515991, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 278, 536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1284)
[0000][PE] mean and std.dev: (339.10, 291.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.98, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1266, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (1551.45, 856.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 471.411 CPU sec, 61.570 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206120
	[0000][ M::kt_pipeline] read 1206120 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516070, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 452, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (800.00, 787.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.98, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1542, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (1278.00, 500.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 471.526 CPU sec, 51.438 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 515517, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 381, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2711)
[0000][PE] mean and std.dev: (661.08, 633.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.56, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1234, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (1319.46, 673.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206120 reads in 471.088 CPU sec, 48.598 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515765, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 331, 729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1723)
[0000][PE] mean and std.dev: (470.24, 430.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.08, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1920, 2915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6397)
[0000][PE] mean and std.dev: (2038.08, 923.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 479.268 CPU sec, 62.957 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515749, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 397, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2332)
[0000][PE] mean and std.dev: (643.32, 636.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1127, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3371)
[0000][PE] mean and std.dev: (1037.18, 540.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 473.040 CPU sec, 58.858 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516214, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 453, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (812.12, 743.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (521, 1601, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (1176.10, 778.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 473.839 CPU sec, 63.359 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515909, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (99, 261, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1167)
[0000][PE] mean and std.dev: (254.23, 183.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 474.188 CPU sec, 63.174 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515799, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 381, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2453)
[0000][PE] mean and std.dev: (601.69, 582.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 2444, 2946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6682)
[0000][PE] mean and std.dev: (1964.00, 1071.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 473.048 CPU sec, 53.108 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515919, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 319, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1104)
[0000][PE] mean and std.dev: (335.83, 196.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.38, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1007, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2334)
[0000][PE] mean and std.dev: (1115.07, 493.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 468.279 CPU sec, 52.564 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516166, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 322, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 922)
[0000][PE] mean and std.dev: (289.48, 169.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1447, 1527, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (363, 3073)
[0000][PE] mean and std.dev: (1617.38, 394.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 470.852 CPU sec, 74.715 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516187, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 412, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3327)
[0000][PE] mean and std.dev: (744.22, 727.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.39, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 470.611 CPU sec, 65.578 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515598, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 325, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 899)
[0000][PE] mean and std.dev: (303.45, 173.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 470.108 CPU sec, 75.589 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515749, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 384, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2650)
[0000][PE] mean and std.dev: (591.12, 475.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1235, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (1158.92, 493.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 467.691 CPU sec, 63.065 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516083, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 334, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1181)
[0000][PE] mean and std.dev: (316.68, 210.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.83, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 468.768 CPU sec, 67.796 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515814, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 351, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1099)
[0000][PE] mean and std.dev: (401.56, 248.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 958, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (1157.36, 726.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 478.264 CPU sec, 78.348 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516074, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 365, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1338)
[0000][PE] mean and std.dev: (392.58, 185.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.39, 126.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 471.189 CPU sec, 72.457 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515645, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 382, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (886.00, 871.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1718, 3015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6529)
[0000][PE] mean and std.dev: (2027.33, 1206.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 471.265 CPU sec, 72.912 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516418, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 360, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (636.12, 724.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1627, 3670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9498)
[0000][PE] mean and std.dev: (1919.07, 1408.66)
[0000][PE] low and high boundaries for proper pairs: (1, 12412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 469.876 CPU sec, 75.690 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516130, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 458, 755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1859)
[0000][PE] mean and std.dev: (463.13, 363.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 466.929 CPU sec, 66.463 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516060, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 394, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2790)
[0000][PE] mean and std.dev: (653.85, 595.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1273, 1588, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4225)
[0000][PE] mean and std.dev: (1583.50, 807.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 467.080 CPU sec, 63.102 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516508, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 527, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2420)
[0000][PE] mean and std.dev: (727.50, 638.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 976, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (1228.11, 806.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 469.602 CPU sec, 51.091 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516276, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 326, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (706.42, 771.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.59, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 475.341 CPU sec, 69.994 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206110
	[0000][ M::kt_pipeline] read 1206110 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515398, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 323, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2028)
[0000][PE] mean and std.dev: (480.61, 427.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 990, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1155.77, 594.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 474.755 CPU sec, 68.645 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516088, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 320, 398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 748)
[0000][PE] mean and std.dev: (274.08, 106.44)
[0000][PE] low and high boundaries for proper pairs: (1, 923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.68, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1443, 2356, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6846)
[0000][PE] mean and std.dev: (2334.50, 1470.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206110 reads in 471.865 CPU sec, 71.419 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515783, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 365, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1566)
[0000][PE] mean and std.dev: (374.96, 236.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.10, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 472.845 CPU sec, 68.369 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516321, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 402, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1267)
[0000][PE] mean and std.dev: (417.31, 279.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.26, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 467.789 CPU sec, 49.462 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515260, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 295, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1091)
[0000][PE] mean and std.dev: (303.00, 178.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.35, 126.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 484.002 CPU sec, 65.052 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515766, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 447, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3569)
[0000][PE] mean and std.dev: (730.12, 639.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1311, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (1190.62, 375.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 469.010 CPU sec, 61.569 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515811, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 334, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2891)
[0000][PE] mean and std.dev: (730.75, 672.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.52, 127.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1796, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (1543.85, 1065.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 469.410 CPU sec, 57.826 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515979, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 407, 633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1615)
[0000][PE] mean and std.dev: (378.50, 296.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1697, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (1485.07, 655.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 469.547 CPU sec, 49.460 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516136, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 401, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (675.10, 663.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 968, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2953)
[0000][PE] mean and std.dev: (1161.00, 545.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 471.524 CPU sec, 63.218 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516016, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 405, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2000)
[0000][PE] mean and std.dev: (520.79, 350.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1447, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5722)
[0000][PE] mean and std.dev: (1894.14, 1335.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 467.487 CPU sec, 62.960 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516127, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 366, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (622.90, 608.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.57, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 475.980 CPU sec, 66.870 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515724, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 411, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (725.28, 749.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (600, 1336, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4377)
[0000][PE] mean and std.dev: (1245.89, 751.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 474.600 CPU sec, 59.032 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515998, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 374, 735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1757)
[0000][PE] mean and std.dev: (480.81, 405.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 944, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (719.89, 437.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 466.611 CPU sec, 68.100 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515931, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 274, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2438)
[0000][PE] mean and std.dev: (411.79, 304.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 465.396 CPU sec, 55.824 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515250, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 335, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2572)
[0000][PE] mean and std.dev: (601.76, 680.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1228, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (68, 2578)
[0000][PE] mean and std.dev: (1266.43, 546.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 471.470 CPU sec, 53.073 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515911, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 357, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (741.79, 886.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 474.832 CPU sec, 58.957 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515988, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 393, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2560)
[0000][PE] mean and std.dev: (623.12, 572.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1277, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (1368.38, 843.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 479.622 CPU sec, 63.012 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515590, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 271, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 843)
[0000][PE] mean and std.dev: (252.00, 147.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.07, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 975, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2159)
[0000][PE] mean and std.dev: (945.85, 444.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 477.354 CPU sec, 69.752 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516007, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 316, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2148)
[0000][PE] mean and std.dev: (418.41, 368.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1741, 7670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20512)
[0000][PE] mean and std.dev: (2927.15, 2836.50)
[0000][PE] low and high boundaries for proper pairs: (1, 26933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 476.625 CPU sec, 65.671 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515505, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 529, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (702.35, 716.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 479.931 CPU sec, 64.427 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515710, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 410, 694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1606)
[0000][PE] mean and std.dev: (457.06, 324.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1865, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4792)
[0000][PE] mean and std.dev: (1724.69, 949.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 470.189 CPU sec, 73.400 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516077, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 273, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1036)
[0000][PE] mean and std.dev: (328.60, 218.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 468.101 CPU sec, 60.860 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516287, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 429, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (682.83, 648.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.48, 126.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1747, 3490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8400)
[0000][PE] mean and std.dev: (2077.41, 1592.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 470.937 CPU sec, 61.047 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515410, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 459, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (564.78, 455.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.69, 126.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1834, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (1455.10, 563.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 476.124 CPU sec, 72.401 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515667, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 300, 891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (400.83, 384.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1803, 3226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7794)
[0000][PE] mean and std.dev: (2116.17, 1465.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 475.165 CPU sec, 59.158 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516214, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 381, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1096)
[0000][PE] mean and std.dev: (327.85, 231.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.67, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1162, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (1297.20, 735.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 472.932 CPU sec, 64.907 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515824, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 371, 1010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (538.79, 561.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1701, 7508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20750)
[0000][PE] mean and std.dev: (2751.08, 2848.72)
[0000][PE] low and high boundaries for proper pairs: (1, 27371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 480.560 CPU sec, 73.684 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515600, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 452, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2785)
[0000][PE] mean and std.dev: (673.09, 584.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 986, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4786)
[0000][PE] mean and std.dev: (1489.08, 1095.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 481.427 CPU sec, 55.219 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516059, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 398, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (582.56, 612.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 914, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (993.87, 520.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 480.843 CPU sec, 81.032 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515993, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 422, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2457)
[0000][PE] mean and std.dev: (621.77, 509.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 1142, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (984.77, 521.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 469.736 CPU sec, 59.996 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515985, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 535, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (732.05, 631.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1401, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (1223.55, 579.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 474.048 CPU sec, 62.115 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515390, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 367, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (637.00, 652.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.46, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 926, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1181.33, 769.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 479.140 CPU sec, 64.242 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515978, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 345, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 987)
[0000][PE] mean and std.dev: (286.92, 127.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.61, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1308, 1316, 3831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8877)
[0000][PE] mean and std.dev: (2354.36, 1675.20)
[0000][PE] low and high boundaries for proper pairs: (1, 11400)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 927, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3319)
[0000][PE] mean and std.dev: (1067.14, 523.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 472.128 CPU sec, 62.402 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515918, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 481, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2286)
[0000][PE] mean and std.dev: (554.00, 380.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1248, 4494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11324)
[0000][PE] mean and std.dev: (2893.00, 2754.46)
[0000][PE] low and high boundaries for proper pairs: (1, 14739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 476.595 CPU sec, 66.187 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515870, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 465, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (624.55, 449.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.47, 126.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 474.159 CPU sec, 64.184 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515546, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 311, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1749)
[0000][PE] mean and std.dev: (435.60, 375.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.42, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1403, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (1316.61, 792.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 477.819 CPU sec, 53.020 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516350, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 427, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3581)
[0000][PE] mean and std.dev: (661.07, 576.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (447, 1499, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5472)
[0000][PE] mean and std.dev: (1428.31, 1311.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 478.634 CPU sec, 60.101 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515779, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 418, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2532)
[0000][PE] mean and std.dev: (593.47, 541.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.52, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1161, 3056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8064)
[0000][PE] mean and std.dev: (1613.15, 1194.04)
[0000][PE] low and high boundaries for proper pairs: (1, 10568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 473.948 CPU sec, 52.834 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515537, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 514, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (1011.38, 948.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 482.722 CPU sec, 54.010 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515988, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 341, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (498.76, 464.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.38, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1119, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (1359.50, 905.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 478.163 CPU sec, 63.165 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515823, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 469, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (770.42, 723.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.38, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1362, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1492.71, 876.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 471.500 CPU sec, 52.498 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516096, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 398, 797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2009)
[0000][PE] mean and std.dev: (468.38, 388.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 476.536 CPU sec, 59.234 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515580, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 352, 492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 880)
[0000][PE] mean and std.dev: (330.58, 121.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 475.174 CPU sec, 58.266 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515532, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 294, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (530.18, 559.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.13, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1741, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (1536.60, 895.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 476.151 CPU sec, 56.219 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515818, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 460, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2660)
[0000][PE] mean and std.dev: (594.40, 506.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.46, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 1534, 2777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7313)
[0000][PE] mean and std.dev: (1998.10, 1724.51)
[0000][PE] low and high boundaries for proper pairs: (1, 9581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 474.867 CPU sec, 51.554 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515847, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 408, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (632.50, 677.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.98, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 935, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1048.60, 686.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 479.053 CPU sec, 62.741 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206104
	[0000][ M::kt_pipeline] read 1206104 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515557, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 320, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1813)
[0000][PE] mean and std.dev: (421.73, 345.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 486.035 CPU sec, 58.748 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515914, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 330, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2393)
[0000][PE] mean and std.dev: (546.00, 547.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1327, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (1390.76, 727.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206104 reads in 486.585 CPU sec, 61.224 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515892, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 537, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2557)
[0000][PE] mean and std.dev: (489.92, 312.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1469, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (1648.88, 938.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 478.367 CPU sec, 63.708 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515378, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 447, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2663)
[0000][PE] mean and std.dev: (579.54, 460.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.61, 126.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1853, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (1560.41, 657.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 478.556 CPU sec, 52.240 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516136, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 484, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1952)
[0000][PE] mean and std.dev: (582.95, 452.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1309, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (1268.29, 605.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 474.296 CPU sec, 59.340 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515916, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 414, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (756.00, 670.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1064, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (1566.70, 1270.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 474.516 CPU sec, 58.367 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515166, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 347, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2352)
[0000][PE] mean and std.dev: (488.73, 412.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.48, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (524, 985, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5627)
[0000][PE] mean and std.dev: (1309.54, 959.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 478.735 CPU sec, 58.428 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 515930, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 237, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1238)
[0000][PE] mean and std.dev: (226.67, 130.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1212, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6200)
[0000][PE] mean and std.dev: (1230.58, 811.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 474.204 CPU sec, 56.661 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515644, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 340, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 984)
[0000][PE] mean and std.dev: (302.36, 134.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 475.291 CPU sec, 56.826 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516009, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 433, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (712.12, 692.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.62, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 470.965 CPU sec, 55.861 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206126
	[0000][ M::kt_pipeline] read 1206126 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515580, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 330, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 964)
[0000][PE] mean and std.dev: (292.81, 111.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1193, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (1182.92, 603.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 476.257 CPU sec, 62.153 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515316, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 427, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (570.68, 491.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206126 reads in 480.058 CPU sec, 69.514 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516009, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 434, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (852.35, 898.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 126.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1536, 4589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12347)
[0000][PE] mean and std.dev: (2543.38, 2439.97)
[0000][PE] low and high boundaries for proper pairs: (1, 16226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 475.948 CPU sec, 62.414 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515834, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 318, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1597)
[0000][PE] mean and std.dev: (421.10, 331.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 484.768 CPU sec, 66.868 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515727, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 438, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2809)
[0000][PE] mean and std.dev: (588.32, 540.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (583, 1224, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1276.75, 982.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 477.295 CPU sec, 55.605 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515814, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 424, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (800.35, 942.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.41, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (575, 1463, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (1199.15, 645.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 476.054 CPU sec, 68.514 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515719, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 399, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 915)
[0000][PE] mean and std.dev: (341.92, 148.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1498, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6233)
[0000][PE] mean and std.dev: (1650.54, 1091.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 474.410 CPU sec, 47.645 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515277, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 414, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (584.16, 592.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.42, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1349, 1673, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5348)
[0000][PE] mean and std.dev: (1942.25, 917.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 481.114 CPU sec, 59.763 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515679, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 394, 496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1072)
[0000][PE] mean and std.dev: (396.85, 241.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.15, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1141, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (200, 2190)
[0000][PE] mean and std.dev: (1220.82, 425.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 478.869 CPU sec, 57.933 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516228, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 467, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (750.55, 667.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1950, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (1653.42, 731.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 474.932 CPU sec, 54.006 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515868, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 407, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (668.00, 510.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 1754, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4044)
[0000][PE] mean and std.dev: (1647.00, 786.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 473.585 CPU sec, 56.595 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515846, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 446, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2385)
[0000][PE] mean and std.dev: (590.19, 491.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 952, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5384)
[0000][PE] mean and std.dev: (1301.71, 941.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 482.432 CPU sec, 64.381 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516127, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 418, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (606.48, 638.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.00, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1032, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2611)
[0000][PE] mean and std.dev: (1208.80, 456.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 474.324 CPU sec, 56.881 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515554, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 392, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 895)
[0000][PE] mean and std.dev: (351.20, 150.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.58, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 479.704 CPU sec, 51.917 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515803, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 577, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2962)
[0000][PE] mean and std.dev: (729.05, 659.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1321, 1485, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (867, 2002)
[0000][PE] mean and std.dev: (1323.75, 231.45)
[0000][PE] low and high boundaries for proper pairs: (398, 2250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 478.432 CPU sec, 54.907 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515887, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 380, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (450.62, 323.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 485.584 CPU sec, 56.396 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515578, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 404, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1348)
[0000][PE] mean and std.dev: (352.44, 253.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1620, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (1826.65, 978.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 489.047 CPU sec, 52.864 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516445, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 382, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2732)
[0000][PE] mean and std.dev: (549.56, 546.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (335, 800, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1005.70, 826.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7223)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 481.838 CPU sec, 58.687 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516338, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 400, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7017)
[0000][PE] mean and std.dev: (1116.53, 1182.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.01, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 479.436 CPU sec, 55.428 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516215, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 385, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 847)
[0000][PE] mean and std.dev: (367.43, 163.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1482, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (1372.50, 390.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 477.932 CPU sec, 57.809 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516128, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (79, 283, 441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1165)
[0000][PE] mean and std.dev: (291.25, 227.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1362, 1934, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (1913.43, 818.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 482.882 CPU sec, 61.325 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515630, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 373, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2482)
[0000][PE] mean and std.dev: (507.50, 384.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.03, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 486.275 CPU sec, 60.301 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516132, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 413, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4358)
[0000][PE] mean and std.dev: (784.29, 738.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1693, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (1572.09, 767.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 476.957 CPU sec, 61.852 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516034, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 378, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2395)
[0000][PE] mean and std.dev: (544.70, 512.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 479.471 CPU sec, 54.744 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515819, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 399, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1225)
[0000][PE] mean and std.dev: (382.89, 276.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.42, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1038, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (1108.25, 609.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 485.524 CPU sec, 62.882 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515783, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 615, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2467)
[0000][PE] mean and std.dev: (602.70, 390.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.04, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 888, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (938.77, 637.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 479.492 CPU sec, 57.891 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515802, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 383, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (628.36, 551.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1463, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1311.60, 757.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 477.895 CPU sec, 61.031 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515691, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 464, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (807.91, 764.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.70, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 1203, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5926)
[0000][PE] mean and std.dev: (1357.77, 1163.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 473.474 CPU sec, 55.186 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515661, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 465, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2361)
[0000][PE] mean and std.dev: (644.63, 595.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.12, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (454, 856, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2545)
[0000][PE] mean and std.dev: (859.82, 541.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 491.091 CPU sec, 65.119 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515945, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 583, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (745.29, 514.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (375, 1172, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5856)
[0000][PE] mean and std.dev: (1443.00, 1337.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7683)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1559, 6109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16501)
[0000][PE] mean and std.dev: (3230.79, 3268.30)
[0000][PE] low and high boundaries for proper pairs: (1, 21697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 479.429 CPU sec, 52.608 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515812, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 341, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2319)
[0000][PE] mean and std.dev: (496.15, 456.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 1064, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4434)
[0000][PE] mean and std.dev: (1193.61, 788.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 477.554 CPU sec, 59.038 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515634, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 405, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2555)
[0000][PE] mean and std.dev: (654.23, 537.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1396, 1907, 3422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7474)
[0000][PE] mean and std.dev: (1923.36, 1253.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 476.020 CPU sec, 60.880 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515196, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 791, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5935)
[0000][PE] mean and std.dev: (1173.00, 1085.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.54, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 472.760 CPU sec, 52.488 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515685, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 354, 446)
[0000][PE] low and high boundaries for computing mean and std.dev: (20, 730)
[0000][PE] mean and std.dev: (326.61, 120.82)
[0000][PE] low and high boundaries for proper pairs: (1, 872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.63, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1362, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3012)
[0000][PE] mean and std.dev: (1406.33, 713.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 470.030 CPU sec, 49.658 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 515602, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 339, 536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1130)
[0000][PE] mean and std.dev: (334.75, 200.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.57, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (600, 1921, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5349)
[0000][PE] mean and std.dev: (1749.10, 1223.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 480.757 CPU sec, 59.887 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515545, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 519, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (685.23, 630.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.37, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 475.942 CPU sec, 48.988 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 515784, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 388, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (673.35, 661.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1178, 4038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10452)
[0000][PE] mean and std.dev: (2146.70, 2044.82)
[0000][PE] low and high boundaries for proper pairs: (1, 13659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 476.677 CPU sec, 56.681 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515934, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 329, 389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 705)
[0000][PE] mean and std.dev: (281.14, 128.31)
[0000][PE] low and high boundaries for proper pairs: (1, 863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.50, 126.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (477, 1513, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (1218.58, 714.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 472.124 CPU sec, 62.475 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515678, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 303, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1942)
[0000][PE] mean and std.dev: (407.68, 377.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 1165, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5198)
[0000][PE] mean and std.dev: (1195.90, 770.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 471.851 CPU sec, 46.653 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516083, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 388, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (811.65, 781.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.58, 126.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1394, 2731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5951)
[0000][PE] mean and std.dev: (1814.62, 1254.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 474.089 CPU sec, 54.915 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516202, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 480, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1525)
[0000][PE] mean and std.dev: (517.56, 303.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1599, 3478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8398)
[0000][PE] mean and std.dev: (1999.06, 1309.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 477.968 CPU sec, 60.862 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515922, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 333, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (646.77, 698.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.60, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1409, 4261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10571)
[0000][PE] mean and std.dev: (2019.23, 1358.63)
[0000][PE] low and high boundaries for proper pairs: (1, 13726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 475.270 CPU sec, 56.954 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515012, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 480, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3286)
[0000][PE] mean and std.dev: (719.06, 709.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1644, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5793)
[0000][PE] mean and std.dev: (1565.29, 1011.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 479.501 CPU sec, 62.084 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516099, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 389, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (574.83, 711.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1910, 2871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6183)
[0000][PE] mean and std.dev: (1839.00, 935.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 477.997 CPU sec, 42.015 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515263, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 453, 692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1538)
[0000][PE] mean and std.dev: (421.22, 307.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1189, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (1156.33, 617.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 475.828 CPU sec, 54.104 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515815, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 505, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (808.10, 637.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 1273, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5720)
[0000][PE] mean and std.dev: (1362.62, 915.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 472.912 CPU sec, 57.388 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516278, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 385, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2105)
[0000][PE] mean and std.dev: (432.62, 371.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1052, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (1117.42, 351.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 470.882 CPU sec, 54.075 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515748, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 370, 723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1549)
[0000][PE] mean and std.dev: (416.37, 316.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1240, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4607)
[0000][PE] mean and std.dev: (1465.92, 844.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 470.844 CPU sec, 42.717 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515749, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 421, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2016)
[0000][PE] mean and std.dev: (528.52, 393.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1798, 1909, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1002, 2992)
[0000][PE] mean and std.dev: (1777.50, 305.29)
[0000][PE] low and high boundaries for proper pairs: (556, 3390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 476.635 CPU sec, 58.161 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515807, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 332, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (491.40, 449.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.64, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1389, 2704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1451.67, 801.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 480.082 CPU sec, 54.395 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515358, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 335, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2376)
[0000][PE] mean and std.dev: (416.72, 392.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.59, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1544, 2826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6630)
[0000][PE] mean and std.dev: (1710.12, 1137.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 482.781 CPU sec, 48.480 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516426, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 406, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (973.31, 977.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 476.990 CPU sec, 52.873 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515757, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 345, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1131)
[0000][PE] mean and std.dev: (331.40, 153.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.47, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1452, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (1421.89, 411.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 476.771 CPU sec, 59.904 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515907, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 337, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1088)
[0000][PE] mean and std.dev: (293.08, 183.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 1324, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (1084.20, 606.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 474.474 CPU sec, 58.185 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515664, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 377, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (599.67, 575.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.60, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1299, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (1320.38, 764.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 472.402 CPU sec, 55.377 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515255, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 354, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1286)
[0000][PE] mean and std.dev: (382.61, 246.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 476.540 CPU sec, 60.718 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516331, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 361, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1168)
[0000][PE] mean and std.dev: (288.87, 137.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.50, 126.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1697, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (1469.54, 534.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 491.812 CPU sec, 59.254 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516028, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 289, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1329)
[0000][PE] mean and std.dev: (262.48, 161.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 990, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (757.08, 348.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 477.896 CPU sec, 58.113 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515885, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 385, 595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1313)
[0000][PE] mean and std.dev: (404.26, 294.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 479.042 CPU sec, 65.357 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515968, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 544, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (693.77, 539.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1605, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (1548.17, 612.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 485.321 CPU sec, 55.918 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516139, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 421, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3993)
[0000][PE] mean and std.dev: (754.29, 705.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1919, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5338)
[0000][PE] mean and std.dev: (1867.20, 1351.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 491.953 CPU sec, 61.054 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515605, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 494, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (672.57, 553.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.59, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1830, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (1269.30, 567.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 498.625 CPU sec, 65.554 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515923, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 389, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2080)
[0000][PE] mean and std.dev: (534.07, 467.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.10, 127.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 494.162 CPU sec, 64.098 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515724, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 469, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (718.57, 642.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 1283, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4952)
[0000][PE] mean and std.dev: (1354.85, 763.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 500.715 CPU sec, 63.755 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516189, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 373, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1108)
[0000][PE] mean and std.dev: (372.36, 171.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.52, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1237, 4769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12259)
[0000][PE] mean and std.dev: (2311.27, 1860.83)
[0000][PE] low and high boundaries for proper pairs: (1, 16004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 506.775 CPU sec, 63.894 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516085, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 341, 720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1696)
[0000][PE] mean and std.dev: (389.09, 294.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.61, 126.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1423, 3195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8019)
[0000][PE] mean and std.dev: (1874.46, 1485.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 501.125 CPU sec, 64.057 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515748, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 410, 481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 837)
[0000][PE] mean and std.dev: (361.16, 142.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1177, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2376)
[0000][PE] mean and std.dev: (1101.89, 275.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 495.345 CPU sec, 69.919 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515740, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 375, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1185)
[0000][PE] mean and std.dev: (370.45, 231.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 127.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 495.573 CPU sec, 56.429 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516413, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 366, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1032)
[0000][PE] mean and std.dev: (362.23, 208.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 127.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1248, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (1270.04, 536.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 473.272 CPU sec, 52.630 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515449, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 274, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1239)
[0000][PE] mean and std.dev: (363.64, 323.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.56, 126.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 474.593 CPU sec, 53.120 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516326, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 359, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2202)
[0000][PE] mean and std.dev: (503.62, 531.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.00, 127.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1877, 4661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11743)
[0000][PE] mean and std.dev: (2346.08, 1597.57)
[0000][PE] low and high boundaries for proper pairs: (1, 15284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 474.281 CPU sec, 57.275 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515580, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 514, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (604.73, 576.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.98, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 1263, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6142)
[0000][PE] mean and std.dev: (1591.33, 1572.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 473.977 CPU sec, 55.596 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515704, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 548, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2403)
[0000][PE] mean and std.dev: (676.10, 585.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.45, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 481.127 CPU sec, 62.117 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515977, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 375, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2015)
[0000][PE] mean and std.dev: (546.24, 494.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1383, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5410)
[0000][PE] mean and std.dev: (1134.80, 696.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 469.293 CPU sec, 49.760 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515904, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 466, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (496.93, 357.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.53, 127.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1331, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2731)
[0000][PE] mean and std.dev: (1110.38, 511.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 468.740 CPU sec, 53.738 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515574, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 328, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 876)
[0000][PE] mean and std.dev: (269.09, 167.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 475.202 CPU sec, 54.435 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516275, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 393, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (716.59, 711.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (388, 3389, 4030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11314)
[0000][PE] mean and std.dev: (2714.00, 2047.36)
[0000][PE] low and high boundaries for proper pairs: (1, 14956)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (690, 1071, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6081)
[0000][PE] mean and std.dev: (1608.25, 1213.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 471.880 CPU sec, 61.022 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516125, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 445, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2755)
[0000][PE] mean and std.dev: (664.31, 596.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1233, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (1144.75, 572.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 481.283 CPU sec, 62.456 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 515796, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 380, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1428)
[0000][PE] mean and std.dev: (440.97, 358.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1169, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1240.29, 813.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 468.970 CPU sec, 55.422 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515931, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 380, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1239)
[0000][PE] mean and std.dev: (359.25, 248.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1835, 2968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7336)
[0000][PE] mean and std.dev: (1843.67, 1246.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 475.024 CPU sec, 52.680 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516019, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 410, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1661)
[0000][PE] mean and std.dev: (427.11, 334.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 472.178 CPU sec, 62.643 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515780, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 508, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2682)
[0000][PE] mean and std.dev: (688.09, 574.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.53, 126.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1423, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6385)
[0000][PE] mean and std.dev: (1775.15, 1223.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 479.683 CPU sec, 68.304 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515505, 11, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 357, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2422)
[0000][PE] mean and std.dev: (588.96, 581.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.65, 126.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (596, 1630, 6076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17036)
[0000][PE] mean and std.dev: (2507.82, 2535.86)
[0000][PE] low and high boundaries for proper pairs: (1, 22516)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 991, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (1053.83, 567.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 473.708 CPU sec, 60.142 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515737, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 304, 496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1192)
[0000][PE] mean and std.dev: (282.05, 220.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.62, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 472.245 CPU sec, 56.602 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515869, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 349, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (564.32, 537.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.37, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1116, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2443)
[0000][PE] mean and std.dev: (947.64, 353.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 481.960 CPU sec, 57.292 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515538, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 692, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5224)
[0000][PE] mean and std.dev: (1029.04, 933.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1139, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (1017.56, 510.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 482.409 CPU sec, 58.929 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515874, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 337, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1537)
[0000][PE] mean and std.dev: (367.88, 293.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1216, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1231.27, 544.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 473.966 CPU sec, 47.219 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516153, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 405, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (581.52, 595.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1040, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2312)
[0000][PE] mean and std.dev: (985.69, 540.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 470.226 CPU sec, 59.426 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515916, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 380, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1330)
[0000][PE] mean and std.dev: (445.08, 289.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.25, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 474.430 CPU sec, 57.598 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515912, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 408, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2247)
[0000][PE] mean and std.dev: (631.00, 457.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.56, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1255, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5670)
[0000][PE] mean and std.dev: (1353.00, 981.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 474.481 CPU sec, 54.292 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515847, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 642, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (822.48, 751.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1405, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1478.29, 565.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 473.291 CPU sec, 58.670 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515866, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 316, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 745)
[0000][PE] mean and std.dev: (279.64, 119.62)
[0000][PE] low and high boundaries for proper pairs: (1, 910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (392, 2804, 6757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19487)
[0000][PE] mean and std.dev: (3570.50, 3412.33)
[0000][PE] low and high boundaries for proper pairs: (1, 25852)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1288, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (1326.67, 533.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 485.087 CPU sec, 62.221 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516231, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 320, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 912)
[0000][PE] mean and std.dev: (282.56, 103.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.43, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 2255, 3357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7775)
[0000][PE] mean and std.dev: (2200.00, 1626.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 472.534 CPU sec, 55.081 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515868, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 367, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2557)
[0000][PE] mean and std.dev: (515.92, 507.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.01, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1288, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (1352.40, 926.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 477.396 CPU sec, 52.893 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206060
	[0000][ M::kt_pipeline] read 1206060 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516258, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 386, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2970)
[0000][PE] mean and std.dev: (664.84, 664.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1237, 1445, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (481, 2371)
[0000][PE] mean and std.dev: (1360.10, 244.11)
[0000][PE] low and high boundaries for proper pairs: (103, 2749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 478.804 CPU sec, 49.703 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 515467, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 339, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (339.35, 232.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1485, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1272.56, 657.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206060 reads in 481.807 CPU sec, 56.801 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515518, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 380, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1886)
[0000][PE] mean and std.dev: (551.86, 445.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.38, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 1084, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4651)
[0000][PE] mean and std.dev: (921.92, 631.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 478.769 CPU sec, 61.286 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515752, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 660, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3352)
[0000][PE] mean and std.dev: (878.59, 694.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (585, 1859, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6822)
[0000][PE] mean and std.dev: (1661.50, 1022.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 480.141 CPU sec, 61.000 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515859, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 493, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2042)
[0000][PE] mean and std.dev: (580.91, 340.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.98, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1244, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (1058.18, 448.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 476.299 CPU sec, 59.662 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515734, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 485, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2474)
[0000][PE] mean and std.dev: (697.72, 551.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 1090, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (956.92, 523.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 491.122 CPU sec, 49.724 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516092, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 426, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (722.07, 788.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.48, 126.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (507, 1097, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7161)
[0000][PE] mean and std.dev: (1417.46, 1001.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 480.484 CPU sec, 57.922 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515531, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 386, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2787)
[0000][PE] mean and std.dev: (695.96, 617.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 968, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1193.19, 789.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 481.591 CPU sec, 61.074 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515749, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 329, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 845)
[0000][PE] mean and std.dev: (260.35, 129.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1420, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (1577.60, 883.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 473.689 CPU sec, 57.155 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515822, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 356, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2213)
[0000][PE] mean and std.dev: (575.86, 547.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.04, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1369, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1474.00, 1055.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 473.661 CPU sec, 47.244 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516483, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 354, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1437)
[0000][PE] mean and std.dev: (387.88, 253.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 126.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1826, 2165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (1568.78, 1220.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 475.992 CPU sec, 59.828 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516315, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 413, 733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1851)
[0000][PE] mean and std.dev: (428.62, 398.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.45, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (543, 607, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4353)
[0000][PE] mean and std.dev: (713.89, 499.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 481.157 CPU sec, 58.428 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515959, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 520, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (828.86, 743.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1245, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (1147.14, 477.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 478.094 CPU sec, 54.668 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516016, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 451, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (659.93, 520.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1007, 3762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9510)
[0000][PE] mean and std.dev: (1742.46, 1561.60)
[0000][PE] low and high boundaries for proper pairs: (1, 12384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 474.822 CPU sec, 55.783 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515580, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 434, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2481)
[0000][PE] mean and std.dev: (683.93, 614.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1763, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5040)
[0000][PE] mean and std.dev: (1605.71, 1059.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 478.341 CPU sec, 55.003 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515834, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 333, 436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 876)
[0000][PE] mean and std.dev: (298.26, 140.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1693, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5453)
[0000][PE] mean and std.dev: (1699.73, 1012.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 476.657 CPU sec, 60.547 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515611, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 387, 696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1558)
[0000][PE] mean and std.dev: (426.04, 302.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.77, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1134, 2777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6431)
[0000][PE] mean and std.dev: (1773.27, 1411.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 477.944 CPU sec, 56.582 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206124
	[0000][ M::kt_pipeline] read 1206124 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 515529, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 334, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (552.92, 523.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.33, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1839, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5477)
[0000][PE] mean and std.dev: (1850.86, 1032.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 476.654 CPU sec, 55.421 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516128, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 390, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1773)
[0000][PE] mean and std.dev: (402.68, 312.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206124 reads in 477.794 CPU sec, 58.780 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515328, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 415, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (466.07, 335.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.85, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 490.063 CPU sec, 59.954 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516366, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 339, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (499.89, 491.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1294, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5212)
[0000][PE] mean and std.dev: (1465.62, 1003.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 475.681 CPU sec, 60.438 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515788, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 437, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (598.75, 515.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.46, 126.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 486.117 CPU sec, 58.890 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515586, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 385, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1848)
[0000][PE] mean and std.dev: (421.93, 232.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1247, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2962)
[0000][PE] mean and std.dev: (1240.54, 456.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 477.730 CPU sec, 45.658 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516496, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 822, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5571)
[0000][PE] mean and std.dev: (1160.75, 1170.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1116, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (1058.82, 595.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 474.623 CPU sec, 43.631 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516087, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 343, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (581.50, 619.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1145, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (466, 2151)
[0000][PE] mean and std.dev: (1201.86, 226.69)
[0000][PE] low and high boundaries for proper pairs: (129, 2488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 477.717 CPU sec, 48.470 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515594, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 395, 779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1999)
[0000][PE] mean and std.dev: (478.89, 466.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1322, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1044.44, 555.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 483.805 CPU sec, 42.138 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515938, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 308, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1672)
[0000][PE] mean and std.dev: (388.92, 331.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.11, 127.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1103, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2786)
[0000][PE] mean and std.dev: (1101.76, 562.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 479.254 CPU sec, 51.924 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516107, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 415, 646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1380)
[0000][PE] mean and std.dev: (454.68, 290.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1502, 2836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6698)
[0000][PE] mean and std.dev: (2189.46, 1597.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 478.628 CPU sec, 47.345 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515549, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 322, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (283.28, 173.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.10, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1629, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5718)
[0000][PE] mean and std.dev: (1775.64, 962.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 478.058 CPU sec, 48.829 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516192, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 373, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (636.36, 577.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.15, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1828, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (1495.00, 665.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 477.711 CPU sec, 42.255 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515703, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 457, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2536)
[0000][PE] mean and std.dev: (764.47, 620.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1164, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4361)
[0000][PE] mean and std.dev: (1418.25, 939.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 475.185 CPU sec, 43.563 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515864, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 445, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1645)
[0000][PE] mean and std.dev: (430.05, 259.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.99, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (584, 1100, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2525)
[0000][PE] mean and std.dev: (880.67, 383.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 479.195 CPU sec, 47.493 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515765, 10, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 428, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (991.11, 1017.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.20, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (317, 1284, 3547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10007)
[0000][PE] mean and std.dev: (2023.40, 2054.66)
[0000][PE] low and high boundaries for proper pairs: (1, 13237)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 472.883 CPU sec, 38.431 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516478, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 374, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1333)
[0000][PE] mean and std.dev: (315.00, 201.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 476.579 CPU sec, 43.596 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515767, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 382, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1046)
[0000][PE] mean and std.dev: (328.87, 140.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.43, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 477.315 CPU sec, 49.949 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515772, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 311, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 986)
[0000][PE] mean and std.dev: (318.05, 204.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.52, 126.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1414, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5569)
[0000][PE] mean and std.dev: (1575.92, 1038.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 483.199 CPU sec, 47.275 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516291, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 349, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1437)
[0000][PE] mean and std.dev: (353.61, 283.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 479.102 CPU sec, 41.042 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515800, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 399, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (533.92, 569.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1329, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (210, 2520)
[0000][PE] mean and std.dev: (1350.60, 337.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 473.551 CPU sec, 47.825 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515960, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 414, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3384)
[0000][PE] mean and std.dev: (848.15, 882.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1168, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5677)
[0000][PE] mean and std.dev: (1592.90, 1204.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 483.139 CPU sec, 54.982 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516084, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 406, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2863)
[0000][PE] mean and std.dev: (661.09, 508.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1461, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5351)
[0000][PE] mean and std.dev: (1330.73, 822.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 473.783 CPU sec, 35.817 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515874, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 315, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 794)
[0000][PE] mean and std.dev: (257.57, 112.88)
[0000][PE] low and high boundaries for proper pairs: (1, 999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 487.596 CPU sec, 55.351 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515818, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 290, 437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 853)
[0000][PE] mean and std.dev: (293.92, 144.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 475.941 CPU sec, 44.503 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516217, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 333, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2462)
[0000][PE] mean and std.dev: (535.57, 546.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 473.265 CPU sec, 43.398 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 515940, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 398, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2510)
[0000][PE] mean and std.dev: (630.29, 551.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1423, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (1384.00, 418.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 477.888 CPU sec, 46.307 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515609, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 365, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1382)
[0000][PE] mean and std.dev: (359.00, 244.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1141, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (1156.44, 417.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 477.490 CPU sec, 45.461 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515852, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 362, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1802)
[0000][PE] mean and std.dev: (434.08, 387.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (684, 1098, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (1199.89, 720.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 479.501 CPU sec, 51.006 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515769, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 291, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 950)
[0000][PE] mean and std.dev: (229.56, 118.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1276, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (1449.67, 773.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5024)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 474.796 CPU sec, 45.649 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515664, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 297, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1194)
[0000][PE] mean and std.dev: (331.62, 265.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1201, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (1159.15, 481.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 471.531 CPU sec, 33.993 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515660, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 538, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (918.00, 1013.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1026, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5414)
[0000][PE] mean and std.dev: (1380.82, 838.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 474.244 CPU sec, 39.774 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515539, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 431, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2201)
[0000][PE] mean and std.dev: (640.44, 547.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 1314, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (1149.46, 613.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 477.297 CPU sec, 48.556 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515719, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 326, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1714)
[0000][PE] mean and std.dev: (379.52, 246.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1307, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4987)
[0000][PE] mean and std.dev: (1697.73, 1063.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 478.653 CPU sec, 45.562 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516098, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 407, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (414.65, 247.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1209, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (1180.62, 671.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 480.879 CPU sec, 49.950 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516045, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 382, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2129)
[0000][PE] mean and std.dev: (487.33, 406.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.59, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1232, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (260, 2320)
[0000][PE] mean and std.dev: (1240.93, 287.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 477.919 CPU sec, 41.876 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515248, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 347, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1227)
[0000][PE] mean and std.dev: (326.77, 161.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.05, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1334, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (77, 2822)
[0000][PE] mean and std.dev: (1305.91, 425.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 484.381 CPU sec, 41.651 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515344, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 328, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1035)
[0000][PE] mean and std.dev: (273.61, 169.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1239, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1381.85, 682.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 480.818 CPU sec, 39.463 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 515696, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 380, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1983)
[0000][PE] mean and std.dev: (442.14, 351.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.62, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (492, 933, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (942.71, 634.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 481.509 CPU sec, 40.578 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516002, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 400, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1903)
[0000][PE] mean and std.dev: (493.58, 459.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1182, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (1260.90, 585.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 477.580 CPU sec, 35.800 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515747, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 418, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2744)
[0000][PE] mean and std.dev: (517.75, 397.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1614, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (1483.29, 570.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 491.118 CPU sec, 43.030 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515138, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 397, 767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1877)
[0000][PE] mean and std.dev: (429.53, 363.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.69, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 484.583 CPU sec, 41.269 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516572, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 362, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (468.48, 396.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 977, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2549)
[0000][PE] mean and std.dev: (1072.09, 534.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 473.911 CPU sec, 44.297 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516038, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 375, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2335)
[0000][PE] mean and std.dev: (510.43, 444.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1447, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (1256.33, 607.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 486.633 CPU sec, 44.884 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516318, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 386, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2231)
[0000][PE] mean and std.dev: (537.12, 471.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.49, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 481.937 CPU sec, 38.870 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516008, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 432, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2975)
[0000][PE] mean and std.dev: (700.09, 625.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.39, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1148, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (1063.56, 346.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 481.533 CPU sec, 41.689 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515632, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 415, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1006)
[0000][PE] mean and std.dev: (368.70, 193.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.44, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (713, 978, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5480)
[0000][PE] mean and std.dev: (951.88, 627.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7069)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1493, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4821)
[0000][PE] mean and std.dev: (1436.50, 725.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 480.781 CPU sec, 38.457 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516147, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 372, 774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1940)
[0000][PE] mean and std.dev: (450.65, 380.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.04, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1310, 3449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8705)
[0000][PE] mean and std.dev: (1837.00, 1483.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 481.771 CPU sec, 39.540 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515961, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 540, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3429)
[0000][PE] mean and std.dev: (698.00, 579.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 2331, 4073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10321)
[0000][PE] mean and std.dev: (2626.80, 2059.13)
[0000][PE] low and high boundaries for proper pairs: (1, 13445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 475.929 CPU sec, 31.753 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515977, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 359, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 990)
[0000][PE] mean and std.dev: (370.25, 185.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 485.219 CPU sec, 48.751 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516083, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 483, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (537.89, 446.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 481.392 CPU sec, 55.335 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516105, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 376, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1237)
[0000][PE] mean and std.dev: (383.25, 266.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 126.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1525, 2973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6825)
[0000][PE] mean and std.dev: (1722.08, 1369.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 475.923 CPU sec, 45.197 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515705, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 321, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 986)
[0000][PE] mean and std.dev: (352.27, 201.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (313, 858, 3140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8794)
[0000][PE] mean and std.dev: (1595.17, 1591.50)
[0000][PE] low and high boundaries for proper pairs: (1, 11621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 475.986 CPU sec, 47.079 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515889, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 312, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 744)
[0000][PE] mean and std.dev: (293.00, 150.61)
[0000][PE] low and high boundaries for proper pairs: (1, 925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 2000, 3866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9146)
[0000][PE] mean and std.dev: (2572.80, 2042.44)
[0000][PE] low and high boundaries for proper pairs: (1, 11786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 477.624 CPU sec, 42.130 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515867, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 425, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2604)
[0000][PE] mean and std.dev: (704.30, 669.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 472.458 CPU sec, 37.659 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516138, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 430, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2226)
[0000][PE] mean and std.dev: (619.50, 381.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1194, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5398)
[0000][PE] mean and std.dev: (1926.30, 1296.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 472.205 CPU sec, 44.345 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515803, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 343, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 936)
[0000][PE] mean and std.dev: (290.55, 180.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1390, 1840, 4300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10120)
[0000][PE] mean and std.dev: (2587.83, 1963.59)
[0000][PE] low and high boundaries for proper pairs: (1, 13030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 476.372 CPU sec, 49.310 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516220, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 545, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2129)
[0000][PE] mean and std.dev: (581.67, 385.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.75, 126.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1561, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3329)
[0000][PE] mean and std.dev: (1534.70, 557.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 471.669 CPU sec, 39.159 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516162, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 381, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2704)
[0000][PE] mean and std.dev: (640.84, 607.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.48, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1147, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2603)
[0000][PE] mean and std.dev: (1124.42, 406.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 469.353 CPU sec, 36.130 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515319, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 399, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2014)
[0000][PE] mean and std.dev: (454.78, 366.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.56, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 1018, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (714.12, 487.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 476.665 CPU sec, 42.888 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515783, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 348, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2226)
[0000][PE] mean and std.dev: (589.81, 538.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1540, 3050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7142)
[0000][PE] mean and std.dev: (2150.00, 1559.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 471.473 CPU sec, 35.713 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516184, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 247, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (678.45, 740.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1223, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2519)
[0000][PE] mean and std.dev: (1210.62, 369.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 480.823 CPU sec, 47.063 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515704, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 220, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 787)
[0000][PE] mean and std.dev: (215.78, 153.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 504.451 CPU sec, 54.384 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 515956, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 338, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1431)
[0000][PE] mean and std.dev: (398.26, 295.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1777, 3040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7452)
[0000][PE] mean and std.dev: (1927.31, 1380.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 478.628 CPU sec, 50.918 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515615, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 349, 771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1809)
[0000][PE] mean and std.dev: (400.10, 253.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.23, 126.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1109, 3498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8978)
[0000][PE] mean and std.dev: (1783.50, 1877.53)
[0000][PE] low and high boundaries for proper pairs: (1, 11718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 485.478 CPU sec, 45.580 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516203, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 388, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1810)
[0000][PE] mean and std.dev: (379.90, 302.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1448, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4158)
[0000][PE] mean and std.dev: (1498.11, 706.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 473.256 CPU sec, 45.194 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515613, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 385, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1533)
[0000][PE] mean and std.dev: (487.44, 272.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 491.975 CPU sec, 48.890 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516102, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 418, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2333)
[0000][PE] mean and std.dev: (619.03, 553.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1004, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5599)
[0000][PE] mean and std.dev: (1444.57, 997.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 478.847 CPU sec, 49.979 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515906, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 416, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (762.62, 797.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 475.314 CPU sec, 44.123 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516256, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 483, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (714.20, 536.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.45, 126.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1783, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3713)
[0000][PE] mean and std.dev: (1337.58, 630.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 479.965 CPU sec, 48.966 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515812, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 365, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1355)
[0000][PE] mean and std.dev: (350.17, 218.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1163, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (209, 1934)
[0000][PE] mean and std.dev: (1026.82, 286.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 469.502 CPU sec, 41.631 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515813, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 491, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (846.44, 857.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1334, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1348.31, 772.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 477.583 CPU sec, 47.998 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515899, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 351, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2275)
[0000][PE] mean and std.dev: (593.14, 575.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1069, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5896)
[0000][PE] mean and std.dev: (1417.69, 1009.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 479.521 CPU sec, 50.671 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515819, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 331, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (494.12, 395.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (305, 2285, 3280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9230)
[0000][PE] mean and std.dev: (1835.33, 1643.29)
[0000][PE] low and high boundaries for proper pairs: (1, 12205)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 950, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (1336.77, 962.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 478.038 CPU sec, 54.961 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516380, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 411, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (747.27, 798.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1396, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4970)
[0000][PE] mean and std.dev: (1397.10, 793.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 469.901 CPU sec, 41.674 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516007, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 351, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (796.44, 838.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (459, 892, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (1053.50, 787.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 481.047 CPU sec, 52.740 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516011, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 356, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1948)
[0000][PE] mean and std.dev: (495.43, 398.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1277, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5300)
[0000][PE] mean and std.dev: (1457.19, 1225.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 474.747 CPU sec, 50.523 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515729, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 623, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (654.95, 511.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.13, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 1334, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5170)
[0000][PE] mean and std.dev: (1450.60, 1332.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 472.880 CPU sec, 41.950 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515658, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 677, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1081.70, 942.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.69, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 999, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (960.56, 367.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 479.521 CPU sec, 55.687 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516135, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 385, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (658.76, 622.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.51, 126.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 481.697 CPU sec, 52.600 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516046, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 331, 492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1152)
[0000][PE] mean and std.dev: (318.64, 218.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1313, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (1241.54, 628.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 473.149 CPU sec, 43.382 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515973, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 423, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (593.59, 638.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 1194, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5289)
[0000][PE] mean and std.dev: (1099.25, 654.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 471.415 CPU sec, 36.874 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515852, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 412, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (627.00, 619.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1722, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (1386.67, 535.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 474.275 CPU sec, 47.204 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515757, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 419, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1762)
[0000][PE] mean and std.dev: (467.15, 334.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 1508, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (1407.71, 1102.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 476.732 CPU sec, 48.911 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515701, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 348, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1239)
[0000][PE] mean and std.dev: (329.57, 194.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.59, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 475.304 CPU sec, 40.685 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515728, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 354, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2256)
[0000][PE] mean and std.dev: (465.68, 381.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.73, 127.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1029, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (1215.45, 629.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 476.846 CPU sec, 47.373 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515535, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 358, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (788.63, 740.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.36, 126.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 470.310 CPU sec, 41.613 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515734, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 383, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1892)
[0000][PE] mean and std.dev: (486.97, 440.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 478.628 CPU sec, 46.112 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516175, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 347, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (496.58, 383.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.41, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 971, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (864.00, 459.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 473.352 CPU sec, 43.090 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 515919, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 418, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2062)
[0000][PE] mean and std.dev: (472.09, 409.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.47, 126.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1746, 3275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7699)
[0000][PE] mean and std.dev: (2241.64, 1654.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 471.748 CPU sec, 43.669 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515751, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 428, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (615.04, 551.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.60, 127.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 473.584 CPU sec, 46.788 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515743, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 528, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (632.70, 487.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 930, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (1364.69, 1139.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 475.391 CPU sec, 47.761 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515565, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 534, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (953.81, 848.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1522, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (209, 2769)
[0000][PE] mean and std.dev: (1554.89, 414.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 473.205 CPU sec, 45.841 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515602, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 308, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (504.15, 460.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 1406, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1206.25, 1043.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 470.228 CPU sec, 39.135 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516071, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (126, 338, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (527.45, 484.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 473.092 CPU sec, 41.328 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516004, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 326, 644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1574)
[0000][PE] mean and std.dev: (427.75, 371.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.20, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1324, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (1562.73, 937.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 474.341 CPU sec, 45.172 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515616, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 408, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (468.85, 353.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.83, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 474.345 CPU sec, 52.238 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515567, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 331, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2280)
[0000][PE] mean and std.dev: (452.62, 336.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1219, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (1441.00, 729.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 474.680 CPU sec, 44.124 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515579, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 355, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (692.85, 702.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.08, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1077, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (991.88, 312.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 474.993 CPU sec, 46.429 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516130, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 369, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (661.83, 648.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 474.312 CPU sec, 45.813 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515766, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 376, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2356)
[0000][PE] mean and std.dev: (492.77, 438.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.07, 127.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 856, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (893.22, 401.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 473.295 CPU sec, 45.115 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516105, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 402, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1991)
[0000][PE] mean and std.dev: (550.32, 463.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.60, 127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 471.985 CPU sec, 44.033 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515744, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 354, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 949)
[0000][PE] mean and std.dev: (310.75, 86.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.52, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 475.590 CPU sec, 42.909 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515574, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (88, 276, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1456)
[0000][PE] mean and std.dev: (264.00, 216.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 475.537 CPU sec, 48.137 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515704, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 311, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 917)
[0000][PE] mean and std.dev: (276.08, 158.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 476.454 CPU sec, 54.792 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515542, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 406, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1379)
[0000][PE] mean and std.dev: (460.36, 271.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1572, 3969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10055)
[0000][PE] mean and std.dev: (2420.00, 2087.15)
[0000][PE] low and high boundaries for proper pairs: (1, 13098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 470.404 CPU sec, 44.411 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515739, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 737, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (749.00, 563.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.61, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1322, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1356.67, 544.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 478.375 CPU sec, 46.100 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515924, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 474, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (586.13, 433.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 472.456 CPU sec, 46.615 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515842, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 436, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (585.17, 541.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.13, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 474.055 CPU sec, 41.417 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515187, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 364, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (707.39, 721.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 475.015 CPU sec, 46.442 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 515667, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 330, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (329.52, 204.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 126.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 474.448 CPU sec, 50.195 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516271, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 396, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2069)
[0000][PE] mean and std.dev: (531.75, 410.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.58, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1350, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4555)
[0000][PE] mean and std.dev: (1428.53, 899.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 472.661 CPU sec, 46.563 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515906, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 763, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2374)
[0000][PE] mean and std.dev: (710.72, 418.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.78, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1143, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2606)
[0000][PE] mean and std.dev: (1061.50, 456.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 469.151 CPU sec, 39.633 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516071, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 311, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2317)
[0000][PE] mean and std.dev: (446.83, 466.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1267, 1413, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (359, 2629)
[0000][PE] mean and std.dev: (1395.79, 457.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 470.773 CPU sec, 44.548 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516029, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 309, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (693.74, 716.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1685, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6552)
[0000][PE] mean and std.dev: (1969.63, 1183.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 476.626 CPU sec, 45.019 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515992, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 345, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1195)
[0000][PE] mean and std.dev: (320.47, 212.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 479.706 CPU sec, 49.346 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516250, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 374, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2756)
[0000][PE] mean and std.dev: (558.04, 630.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 471.429 CPU sec, 43.570 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515997, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 378, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2415)
[0000][PE] mean and std.dev: (540.24, 470.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 474.414 CPU sec, 45.830 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516330, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 385, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2477)
[0000][PE] mean and std.dev: (649.77, 585.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.06, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 473.650 CPU sec, 43.766 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206060
	[0000][ M::kt_pipeline] read 1206060 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516209, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 359, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1604)
[0000][PE] mean and std.dev: (389.57, 301.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1187, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (1291.00, 797.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 471.833 CPU sec, 38.531 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516060, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 393, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1635)
[0000][PE] mean and std.dev: (313.00, 171.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.49, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1393, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (540, 2285)
[0000][PE] mean and std.dev: (1432.00, 158.88)
[0000][PE] low and high boundaries for proper pairs: (191, 2634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206060 reads in 469.280 CPU sec, 39.903 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515932, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 374, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (644.45, 567.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.00, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 471.750 CPU sec, 44.702 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515456, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 359, 698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1588)
[0000][PE] mean and std.dev: (465.86, 337.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (425, 1408, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (1290.20, 851.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 474.967 CPU sec, 39.504 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516038, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 316, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1245)
[0000][PE] mean and std.dev: (381.27, 245.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 475.150 CPU sec, 42.073 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515837, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 448, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2811)
[0000][PE] mean and std.dev: (683.81, 627.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (539, 950, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (955.83, 543.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 472.367 CPU sec, 48.596 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515101, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 408, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (667.04, 538.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1648, 2619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1666.73, 884.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 474.115 CPU sec, 47.604 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515747, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 505, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6299)
[0000][PE] mean and std.dev: (1016.85, 1032.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.02, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (330, 813, 3408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9564)
[0000][PE] mean and std.dev: (1795.23, 1960.34)
[0000][PE] low and high boundaries for proper pairs: (1, 12642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 481.813 CPU sec, 53.349 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515954, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 425, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (656.68, 536.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.74, 126.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 476.188 CPU sec, 41.022 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 515661, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 359, 806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1896)
[0000][PE] mean and std.dev: (457.67, 330.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 126.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1334, 1719, 4062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9518)
[0000][PE] mean and std.dev: (2284.82, 1691.39)
[0000][PE] low and high boundaries for proper pairs: (1, 12246)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1390, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (209, 2679)
[0000][PE] mean and std.dev: (1309.30, 356.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 471.317 CPU sec, 52.224 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515725, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 374, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1946)
[0000][PE] mean and std.dev: (469.33, 275.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (580, 884, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4987)
[0000][PE] mean and std.dev: (1381.42, 1279.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 476.646 CPU sec, 47.063 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515472, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 292, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1397)
[0000][PE] mean and std.dev: (302.68, 178.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1250, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (13, 2573)
[0000][PE] mean and std.dev: (1255.22, 436.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 474.462 CPU sec, 42.259 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516156, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 348, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (548.68, 448.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.40, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 1260, 4052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11084)
[0000][PE] mean and std.dev: (2006.15, 2074.05)
[0000][PE] low and high boundaries for proper pairs: (1, 14600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 472.555 CPU sec, 46.997 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515887, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 420, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1908)
[0000][PE] mean and std.dev: (574.04, 461.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1118, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3754)
[0000][PE] mean and std.dev: (1159.80, 635.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 476.069 CPU sec, 53.567 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515543, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 319, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1120)
[0000][PE] mean and std.dev: (319.50, 215.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 474.636 CPU sec, 42.916 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515821, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 428, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (715.20, 660.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.52, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 473.084 CPU sec, 47.619 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515828, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 451, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (809.75, 758.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 469.644 CPU sec, 41.329 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515734, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 363, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2302)
[0000][PE] mean and std.dev: (512.12, 438.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 472.347 CPU sec, 40.674 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516032, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 324, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1707)
[0000][PE] mean and std.dev: (386.35, 255.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (696, 1042, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2589)
[0000][PE] mean and std.dev: (730.22, 483.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3220)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1413, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3891)
[0000][PE] mean and std.dev: (1231.08, 492.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 473.514 CPU sec, 52.889 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516150, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 419, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1537)
[0000][PE] mean and std.dev: (381.52, 280.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 481.344 CPU sec, 51.661 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515830, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 428, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2452)
[0000][PE] mean and std.dev: (698.87, 562.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1442, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3282)
[0000][PE] mean and std.dev: (1280.14, 776.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 474.301 CPU sec, 47.222 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515958, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 550, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (600.55, 457.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.47, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1144, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (1205.80, 549.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 478.312 CPU sec, 52.531 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515457, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 376, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1194)
[0000][PE] mean and std.dev: (333.14, 165.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1636, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (1284.20, 604.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 481.751 CPU sec, 47.793 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515747, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 366, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (542.00, 656.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.86, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1471, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (1152.20, 598.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 476.710 CPU sec, 46.445 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516063, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 430, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1861)
[0000][PE] mean and std.dev: (570.82, 434.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.97, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 476.167 CPU sec, 47.498 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206108
	[0000][ M::kt_pipeline] read 1206108 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515887, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 449, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (857.54, 860.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.98, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 472.806 CPU sec, 42.018 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516254, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 399, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1451)
[0000][PE] mean and std.dev: (456.22, 300.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1480, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (1366.22, 735.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206108 reads in 480.234 CPU sec, 34.773 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515969, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 397, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (766.00, 860.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1589, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (1827.64, 994.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 475.685 CPU sec, 45.422 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515492, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 429, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2318)
[0000][PE] mean and std.dev: (513.44, 378.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 480.152 CPU sec, 44.670 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515282, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 395, 476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1066)
[0000][PE] mean and std.dev: (326.80, 192.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.61, 127.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1399, 3397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8293)
[0000][PE] mean and std.dev: (1966.71, 1878.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 481.587 CPU sec, 46.762 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515798, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 395, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2030)
[0000][PE] mean and std.dev: (486.00, 392.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.46, 126.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1161, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (1115.14, 496.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 478.607 CPU sec, 45.625 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516065, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 294, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1019)
[0000][PE] mean and std.dev: (263.96, 167.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1499, 2704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6188)
[0000][PE] mean and std.dev: (1607.54, 959.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 473.912 CPU sec, 46.252 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515967, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 369, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (522.33, 473.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 473.417 CPU sec, 44.475 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515869, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 357, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (653.71, 782.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.96, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1005, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3844)
[0000][PE] mean and std.dev: (1176.80, 822.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 478.930 CPU sec, 46.746 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515531, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 335, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1580)
[0000][PE] mean and std.dev: (413.67, 323.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.47, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1695, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (1453.67, 527.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 481.333 CPU sec, 42.735 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515979, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 361, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1374)
[0000][PE] mean and std.dev: (402.61, 303.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 481.632 CPU sec, 47.531 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515947, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 445, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (879.24, 1006.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.49, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (469, 2035, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7078)
[0000][PE] mean and std.dev: (1653.70, 1118.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 476.588 CPU sec, 49.580 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516003, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 289, 444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 884)
[0000][PE] mean and std.dev: (270.54, 78.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.64, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1120, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (1141.40, 233.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 472.282 CPU sec, 45.883 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515786, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 368, 787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1759)
[0000][PE] mean and std.dev: (388.86, 223.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 126.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 472.901 CPU sec, 43.007 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516245, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 360, 891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2063)
[0000][PE] mean and std.dev: (508.33, 355.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.92, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 476.923 CPU sec, 45.367 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515555, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 410, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (367.20, 204.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.04, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1620, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4648)
[0000][PE] mean and std.dev: (1388.55, 714.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 482.720 CPU sec, 48.033 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 515677, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 401, 870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2012)
[0000][PE] mean and std.dev: (489.65, 362.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.51, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1911, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5153)
[0000][PE] mean and std.dev: (1513.09, 689.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 472.612 CPU sec, 42.589 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515716, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 354, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (561.75, 547.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.68, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 480.903 CPU sec, 47.160 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515393, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 387, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2525)
[0000][PE] mean and std.dev: (684.60, 627.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.60, 127.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1198, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (1344.33, 432.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 476.150 CPU sec, 46.311 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206120
	[0000][ M::kt_pipeline] read 1206120 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 515992, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 349, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4912)
[0000][PE] mean and std.dev: (1013.79, 1063.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.54, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 483.757 CPU sec, 50.462 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516054, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 377, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1208)
[0000][PE] mean and std.dev: (359.00, 176.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.54, 126.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1560, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (1453.38, 978.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206120 reads in 476.831 CPU sec, 44.770 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516403, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 357, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (684.07, 650.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.47, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 474.243 CPU sec, 42.597 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516163, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 306, 448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 952)
[0000][PE] mean and std.dev: (274.24, 135.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.72, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (495, 694, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (822.92, 467.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 476.344 CPU sec, 44.756 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516152, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 424, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (670.75, 574.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 473.698 CPU sec, 35.632 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515221, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 407, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (517.48, 534.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1809, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1850.44, 1146.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 480.969 CPU sec, 48.099 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516111, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 354, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2302)
[0000][PE] mean and std.dev: (484.85, 498.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.71, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 484.068 CPU sec, 54.697 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515638, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 518, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (947.97, 875.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.55, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1024, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (925.00, 364.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 480.829 CPU sec, 47.771 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516016, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 375, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1890)
[0000][PE] mean and std.dev: (513.97, 402.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (439, 1345, 3252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8878)
[0000][PE] mean and std.dev: (2000.90, 2098.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 468.892 CPU sec, 39.600 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515856, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 347, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1122)
[0000][PE] mean and std.dev: (310.00, 190.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.60, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1028, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2721)
[0000][PE] mean and std.dev: (1202.91, 428.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 473.267 CPU sec, 47.656 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515892, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 339, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1430)
[0000][PE] mean and std.dev: (365.40, 236.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.61, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 476.969 CPU sec, 49.276 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515686, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 339, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1037)
[0000][PE] mean and std.dev: (283.50, 185.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.63, 126.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1308, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (1508.69, 738.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 480.786 CPU sec, 42.553 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 515500, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 406, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1768)
[0000][PE] mean and std.dev: (527.33, 403.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (341, 903, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1167.59, 1100.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 483.656 CPU sec, 46.389 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515741, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 354, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2054)
[0000][PE] mean and std.dev: (483.48, 372.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 999, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (997.85, 637.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 473.705 CPU sec, 42.258 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516023, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 341, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1468)
[0000][PE] mean and std.dev: (386.11, 275.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.41, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 474.319 CPU sec, 40.462 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515679, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 304, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1014)
[0000][PE] mean and std.dev: (248.68, 162.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1311, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (1282.75, 536.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 478.611 CPU sec, 46.442 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515910, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 568, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5443)
[0000][PE] mean and std.dev: (868.92, 870.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1097, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (1269.75, 620.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 485.465 CPU sec, 47.280 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516080, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 364, 453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 895)
[0000][PE] mean and std.dev: (323.06, 161.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.48, 126.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1404, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (1251.90, 394.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 475.064 CPU sec, 41.807 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 515398, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 304, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1186)
[0000][PE] mean and std.dev: (328.17, 258.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 942)
[0000][PE] mean and std.dev: (530.65, 127.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 925, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (946.08, 345.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 476.480 CPU sec, 43.108 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515773, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 426, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2472)
[0000][PE] mean and std.dev: (633.24, 502.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.76, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1143, 3057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7681)
[0000][PE] mean and std.dev: (1668.08, 1224.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 476.336 CPU sec, 50.073 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515967, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 453, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1607)
[0000][PE] mean and std.dev: (529.74, 379.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.87, 127.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 2075, 3026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6724)
[0000][PE] mean and std.dev: (2266.27, 1547.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 478.395 CPU sec, 45.548 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515661, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 371, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (846.15, 954.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1580, 2944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6402)
[0000][PE] mean and std.dev: (1886.83, 945.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 476.021 CPU sec, 43.378 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515553, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 416, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (386.80, 165.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.80, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1251, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6038)
[0000][PE] mean and std.dev: (1658.75, 743.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 470.134 CPU sec, 35.533 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516212, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 500, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1212)
[0000][PE] mean and std.dev: (399.12, 203.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1199, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3160)
[0000][PE] mean and std.dev: (1082.25, 499.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 482.372 CPU sec, 50.375 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516026, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 371, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (865.23, 971.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.70, 126.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1482, 2870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6406)
[0000][PE] mean and std.dev: (1754.67, 1452.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 477.818 CPU sec, 44.859 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515962, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 397, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2432)
[0000][PE] mean and std.dev: (554.35, 459.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1041, 2735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6637)
[0000][PE] mean and std.dev: (1416.55, 1034.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 475.527 CPU sec, 45.326 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515874, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 661, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1857)
[0000][PE] mean and std.dev: (640.22, 341.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.65, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1362, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (1484.89, 916.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 472.960 CPU sec, 39.999 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515922, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 392, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (819.88, 839.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.94, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1438, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4499)
[0000][PE] mean and std.dev: (1399.08, 728.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 474.415 CPU sec, 41.383 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516103, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 409, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2075)
[0000][PE] mean and std.dev: (571.23, 515.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.61, 126.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 472.236 CPU sec, 44.450 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515912, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 387, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (666.28, 652.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.41, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 1174, 3614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9744)
[0000][PE] mean and std.dev: (1989.42, 2239.97)
[0000][PE] low and high boundaries for proper pairs: (1, 12809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 469.963 CPU sec, 40.622 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516120, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 415, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2028)
[0000][PE] mean and std.dev: (516.68, 377.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1286, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3429)
[0000][PE] mean and std.dev: (1339.92, 679.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 477.204 CPU sec, 48.541 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515665, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 392, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2263)
[0000][PE] mean and std.dev: (516.13, 468.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1271, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (1238.89, 625.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 474.956 CPU sec, 44.209 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 514966, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 381, 712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1590)
[0000][PE] mean and std.dev: (468.29, 329.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.39, 126.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 734, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2684)
[0000][PE] mean and std.dev: (833.62, 540.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 480.950 CPU sec, 46.126 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515803, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 530, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (756.21, 687.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.90, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1067, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (1288.60, 496.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 479.710 CPU sec, 48.337 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515773, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 343, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1673)
[0000][PE] mean and std.dev: (411.33, 402.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.91, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1044, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2856)
[0000][PE] mean and std.dev: (1166.50, 629.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 481.625 CPU sec, 46.331 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206140
	[0000][ M::kt_pipeline] read 1206140 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516300, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 864, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (769.05, 598.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.61, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 2279, 3554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8722)
[0000][PE] mean and std.dev: (2121.00, 1547.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 479.220 CPU sec, 49.721 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 515799, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 436, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2235)
[0000][PE] mean and std.dev: (543.39, 479.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206140 reads in 476.464 CPU sec, 50.400 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515555, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 371, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1721)
[0000][PE] mean and std.dev: (470.45, 392.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.39, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 2088, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5762)
[0000][PE] mean and std.dev: (1662.77, 988.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 474.738 CPU sec, 38.184 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515098, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 398, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (719.77, 618.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.81, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1312, 1513, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (1582.77, 664.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 476.509 CPU sec, 41.748 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515753, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 315, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1992)
[0000][PE] mean and std.dev: (449.00, 399.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 474.440 CPU sec, 42.502 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515971, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 434, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1432)
[0000][PE] mean and std.dev: (418.69, 256.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1156, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2355)
[0000][PE] mean and std.dev: (1070.00, 436.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 475.413 CPU sec, 48.738 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206142
	[0000][ M::kt_pipeline] read 1206142 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515947, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 432, 800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1782)
[0000][PE] mean and std.dev: (541.96, 426.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 474.135 CPU sec, 46.228 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 515722, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 383, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (410.17, 268.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.65, 127.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206142 reads in 476.671 CPU sec, 47.492 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515802, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 372, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (557.29, 542.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (444, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 939)
[0000][PE] mean and std.dev: (530.32, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1104)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1347, 1815, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (1750.89, 565.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 476.203 CPU sec, 44.068 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515943, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 477, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2045)
[0000][PE] mean and std.dev: (585.48, 404.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.57, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 475.791 CPU sec, 44.405 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515760, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 469, 726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1616)
[0000][PE] mean and std.dev: (498.05, 354.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.66, 127.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 2677, 4448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10850)
[0000][PE] mean and std.dev: (2900.33, 2339.58)
[0000][PE] low and high boundaries for proper pairs: (1, 14051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 476.365 CPU sec, 46.895 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515995, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 336, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1953)
[0000][PE] mean and std.dev: (461.62, 397.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.53, 127.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 478.457 CPU sec, 44.783 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515759, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 344, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2902)
[0000][PE] mean and std.dev: (593.47, 529.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 471.961 CPU sec, 47.370 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515812, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 391, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2480)
[0000][PE] mean and std.dev: (574.36, 448.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.46, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 469.772 CPU sec, 46.676 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515440, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 898, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1140.85, 1249.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 469.554 CPU sec, 38.974 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516058, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 378, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1129)
[0000][PE] mean and std.dev: (404.76, 239.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1498, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4784)
[0000][PE] mean and std.dev: (1602.64, 824.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 474.317 CPU sec, 47.481 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516197, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 347, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1260)
[0000][PE] mean and std.dev: (362.76, 222.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.93, 127.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1724, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (1376.58, 704.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 472.414 CPU sec, 49.946 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516114, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 380, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 753)
[0000][PE] mean and std.dev: (324.15, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.57, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1044, 4116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10462)
[0000][PE] mean and std.dev: (2067.36, 1840.40)
[0000][PE] low and high boundaries for proper pairs: (1, 13635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 468.979 CPU sec, 49.009 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515509, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 383, 770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1676)
[0000][PE] mean and std.dev: (483.95, 321.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.12, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1425, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (1484.19, 998.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 468.524 CPU sec, 39.648 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515982, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 375, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1844)
[0000][PE] mean and std.dev: (569.70, 416.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.67, 127.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 477.963 CPU sec, 50.055 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515862, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 435, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1608)
[0000][PE] mean and std.dev: (500.92, 324.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.63, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1284, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (951.40, 403.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 475.663 CPU sec, 51.685 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515731, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 538, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (698.57, 542.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.84, 127.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 468.642 CPU sec, 45.180 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515846, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 442, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3713)
[0000][PE] mean and std.dev: (685.79, 681.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.55, 126.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 1011, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4055)
[0000][PE] mean and std.dev: (861.92, 548.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 469.198 CPU sec, 41.310 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515766, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 386, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (740.05, 790.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.58, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1205, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (1210.24, 635.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 470.175 CPU sec, 35.620 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516134, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 411, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2407)
[0000][PE] mean and std.dev: (510.04, 421.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1298, 1397, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4742)
[0000][PE] mean and std.dev: (1358.56, 455.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 467.912 CPU sec, 44.331 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516083, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 346, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1943)
[0000][PE] mean and std.dev: (554.89, 468.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1171, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (1281.46, 571.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 478.546 CPU sec, 50.566 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515610, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 694, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5040)
[0000][PE] mean and std.dev: (1129.88, 1233.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 126.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 835, 2742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6932)
[0000][PE] mean and std.dev: (1596.40, 1632.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 478.620 CPU sec, 41.635 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206082
	[0000][ M::kt_pipeline] read 1206082 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516137, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 361, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 856)
[0000][PE] mean and std.dev: (303.12, 129.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.69, 126.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1574, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1431.36, 506.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 471.636 CPU sec, 46.539 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516286, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 370, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (487.38, 478.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.11, 126.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (668, 1106, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (1119.50, 463.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206082 reads in 474.291 CPU sec, 47.216 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516009, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 461, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2296)
[0000][PE] mean and std.dev: (542.63, 355.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.59, 126.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1392, 1643, 2930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6006)
[0000][PE] mean and std.dev: (1906.42, 864.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 474.612 CPU sec, 47.330 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515593, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 457, 630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1282)
[0000][PE] mean and std.dev: (455.33, 246.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.14, 126.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1298, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5317)
[0000][PE] mean and std.dev: (1527.54, 707.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 472.829 CPU sec, 43.110 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515979, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 367, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (50, 775)
[0000][PE] mean and std.dev: (369.88, 95.04)
[0000][PE] low and high boundaries for proper pairs: (1, 920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.75, 127.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 476.404 CPU sec, 42.841 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515755, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 332, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 916)
[0000][PE] mean and std.dev: (328.53, 161.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.95, 126.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (580, 1019, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (1108.69, 600.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 468.837 CPU sec, 35.050 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515670, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 359, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1288)
[0000][PE] mean and std.dev: (344.17, 174.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.69, 126.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 469.011 CPU sec, 35.258 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515966, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 572, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (1264.88, 1415.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.88, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 469.574 CPU sec, 32.475 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515889, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 297, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2084)
[0000][PE] mean and std.dev: (469.36, 509.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.54, 126.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1538, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5453)
[0000][PE] mean and std.dev: (1608.36, 1172.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 469.017 CPU sec, 33.549 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516335, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 402, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3040)
[0000][PE] mean and std.dev: (645.86, 506.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 937)
[0000][PE] mean and std.dev: (530.38, 126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1101)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1394, 2055, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5111)
[0000][PE] mean and std.dev: (1882.60, 746.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 465.920 CPU sec, 40.016 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515567, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 381, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (606.52, 586.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.89, 127.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1358, 1623, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (706, 2336)
[0000][PE] mean and std.dev: (1444.62, 254.97)
[0000][PE] low and high boundaries for proper pairs: (380, 2662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 472.819 CPU sec, 37.927 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515736, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 389, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1387)
[0000][PE] mean and std.dev: (412.45, 205.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 522, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.74, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (499, 959, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2650)
[0000][PE] mean and std.dev: (878.64, 360.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 470.546 CPU sec, 41.265 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515806, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 316, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1539)
[0000][PE] mean and std.dev: (371.04, 298.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.79, 127.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (58, 122, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1504)
[0000][PE] mean and std.dev: (209.78, 206.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1986)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1700, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (1514.50, 562.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 480.610 CPU sec, 39.416 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515719, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 400, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1884)
[0000][PE] mean and std.dev: (516.70, 407.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (531.00, 127.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1340, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1234.10, 614.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 476.774 CPU sec, 39.719 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 159046450, nseq: 1065532
	[0000][ M::kt_pipeline] read 1065532 sequences (159046450 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516033, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 539, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (604.14, 462.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.82, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 465.863 CPU sec, 35.496 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1065532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 455792, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 403, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (617.53, 555.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (445, 521, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 940)
[0000][PE] mean and std.dev: (530.63, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1105)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 892, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (987.69, 584.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1065532 reads in 421.590 CPU sec, 35.210 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.992524 MHz
Runtime profile:

	Time taken for main_mem function: 78504.56 sec

	IO times (sec) :
	Reading IO time (reads) avg: 3209.59, (3209.59, 3209.59)
	Writing IO time (SAM) avg: 5572.85, (5572.85, 5572.85)
	Reading IO time (Reference Genome) avg: 15.39, (15.39, 15.39)
	Index read time avg: 21.37, (21.37, 21.37)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 78466.55
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 78455.49, (78455.49, 78455.49)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 29132.86, (29132.86, 29132.86)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 49133.51, (49133.51, 49133.51)
		SMEM compute avg: 14599.84, (14648.54, 14575.71)
		SAL compute avg: 9910.42, (9943.68, 9879.43)
				MEM_SA avg: 3722.34, (3747.53, 3694.20)

		BSW time, avg: 15906.10, (15925.41, 15884.11)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
